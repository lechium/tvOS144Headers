//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SQLiteEntity.h"

@interface WorldRegion : SQLiteEntity
{
}

+ (id)_predicateForTransaction:(id)arg1;	// IMP=0x00000001001c227c
+ (id)_predicateForLocaleIdentifier:(id)arg1;	// IMP=0x00000001001c225c
+ (id)_predicateForNamePattern:(id)arg1;	// IMP=0x00000001001c2080
+ (id)_predicateForName:(id)arg1;	// IMP=0x00000001001c2060
+ (id)_predicateForLocalizedContent;	// IMP=0x00000001001c203c
+ (id)_predicateForCode:(id)arg1;	// IMP=0x00000001001c201c
+ (id)_predicateForLongitude:(double)arg1;	// IMP=0x00000001001c1fa8
+ (id)_predicateForLatitude:(double)arg1;	// IMP=0x00000001001c1f34
+ (id)_predicateForType:(unsigned long long)arg1;	// IMP=0x00000001001c1ec0
+ (id)_predicateForMUID:(id)arg1;	// IMP=0x00000001001c1ea0
+ (id)_predicateForParentPID:(id)arg1;	// IMP=0x00000001001c1e80
+ (id)_predicateForPID:(id)arg1;	// IMP=0x00000001001c1e60
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x00000001001c1e40
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x00000001001c1da8
+ (id)joinClauseForProperty:(id)arg1;	// IMP=0x00000001001c1cf4
+ (void)deleteRegionsWithNoMatchingTransactionsInDatabase:(id)arg1;	// IMP=0x00000001001c1cdc
+ (void)resetCoordinatesForAllRegionsInDatabase:(id)arg1;	// IMP=0x00000001001c1bec
+ (void)deleteAllRegionsInDatabase:(id)arg1;	// IMP=0x00000001001c1b4c
+ (void)failedToAssociateTransaction:(id)arg1 error:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c1aa8
+ (void)associateTransaction:(id)arg1 withWorldRegion:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c1a04
+ (id)lastRegionErrorForTransaction:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001c1970
+ (id)regionsFromQuery:(id)arg1 additionalProperties:(id)arg2;	// IMP=0x00000001001c13d0
+ (id)regionsFromQuery:(id)arg1;	// IMP=0x00000001001c13c0
+ (id)regionWithIdentifier:(id)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c1208
+ (id)regionsForTransactionPID:(long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c0fdc
+ (id)regionsMissingLocalizedContentForLocaleIdentifier:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001c0d14
+ (_Bool)hasRegionsMissingLocalizedContentForLocaleIdentifier:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001c0b1c
+ (id)_sqlForRegionsMissingLocalizedContent;	// IMP=0x00000001001c0b10
+ (id)insertOrUpdateRegion:(id)arg1 single:(_Bool)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001bff68
+ (id)insertOrUpdateRegion:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001bff00
+ (id)updateSingleRegion:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001bfe98
+ (id)regionsOfType:(unsigned long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001bfcf8
+ (_Bool)hasMultipleRegionsOfType:(unsigned long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001bfb60
+ (id)regionsMatchingName:(id)arg1 types:(id)arg2 localeIdentifier:(id)arg3 inDatabase:(id)arg4;	// IMP=0x00000001001bf6d8
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x00000001001bf64c
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x00000001001bf5c0
+ (id)databaseTable;	// IMP=0x00000001001bf5b4

@end

