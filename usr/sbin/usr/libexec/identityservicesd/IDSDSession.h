//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "IDSBaseSocketPairConnectionDelegate-Protocol.h"
#import "IDSDSession-Protocol.h"
#import "IDSDSessionAWDMetrics-Protocol.h"
#import "IDSRealTimeEncryptionDelegate-Protocol.h"
#import "IDSSocketPairConnectionDelegate-Protocol.h"
#import "_IDSSessionConnectionDelegate-Protocol.h"

@class IDSBaseSocketPairConnection, IDSClientChannel, IDSConnectionContext, IDSDSessionInvitationManager, IDSDSessionMessenger, IDSDSessionSharedState, IDSGroupStatusNotificationParameters, IDSMultiplexerGroupSessionTransport, NSData, NSDate, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSString;
@protocol IDSDSessionAvailabilityCheck;

@interface IDSDSession : NSObject <IDSDSessionAWDMetrics, _IDSSessionConnectionDelegate, IDSSocketPairConnectionDelegate, IDSBaseSocketPairConnectionDelegate, IDSRealTimeEncryptionDelegate, IDSDSession>
{
    _Bool _assertedRealTimeMode;	// 8 = 0x8
    id <IDSDSessionAvailabilityCheck> _availabilityCheck;	// 16 = 0x10
    NSDate *_awdStartTimestamp;	// 24 = 0x18
    NSString *_awdUniqueId;	// 32 = 0x20
    IDSBaseSocketPairConnection *_baseSocketPairConnection;	// 40 = 0x28
    _Bool _bypassUTun;	// 48 = 0x30
    NSMutableArray *_cachedClientData;	// 56 = 0x38
    long long _cachedNumberOfActiveParticipants;	// 64 = 0x40
    IDSClientChannel *_clientChannel;	// 72 = 0x48
    unsigned long long _connectionClaimed;	// 80 = 0x50
    IDSConnectionContext *_connectionContext;	// 88 = 0x58
    unsigned int _currentGenerationCounter;	// 96 = 0x60
    _Bool _disallowCellularInterface;	// 100 = 0x64
    _Bool _disallowWifiInterface;	// 101 = 0x65
    NSDate *_endDate;	// 104 = 0x68
    NSMutableDictionary *_extraConnections;	// 112 = 0x70
    unsigned long long _extraConnectionCount;	// 120 = 0x78
    unsigned int _groupSessionState;	// 128 = 0x80
    IDSGroupStatusNotificationParameters *_groupStatusNotificationParams;	// 136 = 0x88
    int _idsDataChannelClientPID;	// 144 = 0x90
    unsigned long long _initialLinkType;	// 152 = 0x98
    NSString *_instanceID;	// 160 = 0xa0
    double _inviteRecvTime;	// 168 = 0xa8
    _Bool _joinGroupSessionPending;	// 176 = 0xb0
    CDUnknownBlockType _joinNotificationDeliveryTimeoutBlock;	// 184 = 0xb8
    unsigned char _keyMaterial[60];	// 192 = 0xc0
    long long _linkProtocol;	// 256 = 0x100
    double _membershipChangeEventTime;	// 264 = 0x108
    double _newKeyEventTime;	// 272 = 0x110
    struct *_packetBufferArray[8];	// 280 = 0x118
    unsigned long long _preferredAddressFamily;	// 344 = 0x158
    _Bool _preferCellularForCallSetup;	// 352 = 0x160
    NSNumber *_qrError;	// 360 = 0x168
    NSMutableArray *_qrEventsForRTCReports;	// 368 = 0x170
    NSNumber *_qrReason;	// 376 = 0x178
    unsigned int _reason;	// 384 = 0x180
    unsigned short _relayPort;	// 388 = 0x184
    _Bool _sessionStartedCalled;	// 390 = 0x186
    NSMutableData *_sessionInfoMetaData;	// 392 = 0x188
    _Bool _shouldAssertRealTimeMode;	// 400 = 0x190
    _Bool _shouldConnectToQRServer;	// 401 = 0x191
    NSData *_skeData;	// 408 = 0x198
    int _socketDescriptor;	// 416 = 0x1a0
    NSDate *_startDate;	// 424 = 0x1a8
    _Bool _supressClientNotifications;	// 432 = 0x1b0
    _Bool _verboseFunctionalLogging;	// 433 = 0x1b1
    _Bool _verbosePerformanceLogging;	// 434 = 0x1b2
    _Bool _multiplexerEnabled;	// 435 = 0x1b3
    IDSMultiplexerGroupSessionTransport *_multiplexerTransport;	// 440 = 0x1b8
    double _channelDataCachedTime;	// 448 = 0x1c0
    NSString *_clientID;	// 456 = 0x1c8
    IDSDSessionInvitationManager *_invitationManager;	// 464 = 0x1d0
    IDSDSessionMessenger *_messenger;	// 472 = 0x1d8
    IDSDSessionSharedState *_sharedState;	// 480 = 0x1e0
}

- (void).cxx_destruct;	// IMP=0x0000000100106d94
@property(retain, nonatomic) IDSDSessionSharedState *sharedState; // @synthesize sharedState=_sharedState;
@property(nonatomic) _Bool shouldConnectToQRServer; // @synthesize shouldConnectToQRServer=_shouldConnectToQRServer;
@property(retain, nonatomic) NSNumber *qrReason; // @synthesize qrReason=_qrReason;
@property(retain, nonatomic) NSNumber *qrError; // @synthesize qrError=_qrError;
@property(retain, nonatomic) IDSDSessionMessenger *messenger; // @synthesize messenger=_messenger;
@property(retain, nonatomic) IDSDSessionInvitationManager *invitationManager; // @synthesize invitationManager=_invitationManager;
@property(readonly, nonatomic) NSString *instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) unsigned int groupSessionState; // @synthesize groupSessionState=_groupSessionState;
@property(readonly, nonatomic) _Bool disallowWifiInterface; // @synthesize disallowWifiInterface=_disallowWifiInterface;
@property(readonly, nonatomic) _Bool disallowCellularInterface; // @synthesize disallowCellularInterface=_disallowCellularInterface;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
- (unsigned long long)connectionCountHint;	// IMP=0x0000000100106a7c
- (_Bool)_useBTDatagramPipe;	// IMP=0x0000000100106a10
- (void)_setClientType:(long long)arg1;	// IMP=0x00000001001069b0
- (_Bool)isScreenSharingSession;	// IMP=0x0000000100106944
- (unsigned int)state;	// IMP=0x00000001001068e0
- (id)fromID;	// IMP=0x0000000100106874
- (id)groupID;	// IMP=0x0000000100106808
- (id)accountID;	// IMP=0x000000010010679c
- (id)participantID;	// IMP=0x0000000100106730
- (long long)clientType;	// IMP=0x00000001001066cc
- (_Bool)enableQuickRelay;	// IMP=0x0000000100106660
- (_Bool)isInitiator;	// IMP=0x00000001001065f4
- (id)uniqueID;	// IMP=0x0000000100106588
- (id)destinations;	// IMP=0x000000010010651c
- (void)setSeqRecvStart:(unsigned int)arg1;	// IMP=0x00000001001064b4
- (void)setSSRCRecv:(unsigned int)arg1;	// IMP=0x000000010010644c
- (void)setRemoteUsePhoneContinuityLocalMessage:(id)arg1;	// IMP=0x00000001001063b8
- (void)setRemoteUseCloudPairedControlChannel:(id)arg1;	// IMP=0x0000000100106324
- (void)setQuickRelaySessionToken:(id)arg1;	// IMP=0x0000000100106290
- (void)setInviteTimeout:(long long)arg1;	// IMP=0x0000000100106224
- (void)setRemoteBlob:(id)arg1;	// IMP=0x0000000100106190
- (void)receivedEndMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00000001001060d0
- (void)receivedSessionMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100106010
- (void)receivedCancelMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100105f50
- (void)receivedDeclineMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100105e90
- (void)receivedAcceptMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100105dd0
- (void)sendSessionMessage:(id)arg1 toDestinations:(id)arg2;	// IMP=0x0000000100105d10
- (void)declineInvitationWithData:(id)arg1 forceFromID:(id)arg2 additionalMessageAttributes:(id)arg3;	// IMP=0x0000000100105c20
- (void)declineInvitationWithData:(id)arg1;	// IMP=0x0000000100105b94
- (void)declineInvitation;	// IMP=0x0000000100105b3c
- (void)acceptInvitationWithData:(id)arg1;	// IMP=0x0000000100105ab0
- (void)acceptInvitation;	// IMP=0x0000000100105a58
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)arg1;	// IMP=0x00000001001059f8
- (void)cancelInvitationWithData:(id)arg1;	// IMP=0x000000010010596c
- (void)cancelInvitation;	// IMP=0x0000000100105914
- (void)sendInvitationWithData:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x000000010010586c
- (void)sendInvitationWithOptions:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x00000001001057c4
- (void)sendCancelInvitationMessage;	// IMP=0x0000000100105758
- (void)invitationDeclined;	// IMP=0x00000001001056f0
- (_Bool)isWithDefaultPairedDevice;	// IMP=0x00000001001055d0
- (void)didSessionReinitiated;	// IMP=0x0000000100105094
- (void)_receivedReinitiateBringupAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100104314
- (void)_receivedReinitiateBringupMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00000001001038a8
- (void)_receivedReinitiateTeardownAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100102af0
- (void)_receivedReinitiateTeardownMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00000001001019e0
- (void)_receivedReinitiateRequestMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100101678
- (void)receivedReinitiateMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100101130
- (void)reinitiate;	// IMP=0x00000001000ff5d4
- (void)registerMultiplexerTransport;	// IMP=0x00000001000ff304
- (void)getActiveParticipants:(id)arg1 pushTokenForParticipants:(id)arg2;	// IMP=0x00000001000fec5c
- (void)_updateActiveParticipants:(id)arg1;	// IMP=0x00000001000fe4ec
- (void)processAllocationErrorStatus:(int)arg1 errorCode:(int)arg2;	// IMP=0x00000001000fe17c
- (void)onParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x00000001000fd4dc
- (void)sendAllocationRequest:(id)arg1;	// IMP=0x00000001000fcc24
- (void)recvMembershipChangeEventWithReason:(unsigned char)arg1;	// IMP=0x00000001000fcb38
- (void)recvKeyMaterial:(id)arg1;	// IMP=0x00000001000fc61c
- (void)sendKeyMaterialMessage:(id)arg1 toDestination:(id)arg2;	// IMP=0x00000001000fb8b0
- (void)leaveGroupSession:(id)arg1;	// IMP=0x00000001000faa60
- (void)joinWithOptions:(id)arg1;	// IMP=0x00000001000f8c50
- (id)_checkIfPushMessageSizeGreaterThanMaxLimit:(id)arg1 maxLimit:(unsigned long long)arg2;	// IMP=0x00000001000f8778
- (void)setGroupStreamInfo:(id)arg1 sessionInfo:(id)arg2;	// IMP=0x00000001000f7ad0
- (void)updateParticipantData:(id)arg1 withContext:(id)arg2;	// IMP=0x00000001000f7688
- (void)updateMembers:(id)arg1 withContext:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x00000001000f6040
- (_Bool)destinationsContainFromID:(id)arg1;	// IMP=0x00000001000f5a84
- (void)link:(id)arg1 didReceiveSessionStats:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x00000001000f5748
- (void)link:(id)arg1 didReceiveSessionInfo:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x00000001000f39d4
- (void)link:(id)arg1 didReceiveDebugDataForClient:(id)arg2 dataType:(unsigned char)arg3;	// IMP=0x00000001000f34f4
- (void)link:(id)arg1 didReceiveMembershipChangedInformation:(unsigned char)arg2;	// IMP=0x00000001000f3094
- (void)link:(id)arg1 didReceiveEncryptionInformation:(id)arg2;	// IMP=0x00000001000f2ac4
- (void)link:(id)arg1 didAddQREvent:(id)arg2;	// IMP=0x00000001000f2614
- (void)link:(id)arg1 didDefaultUnderlyingLinkChangeSucceeded:(_Bool)arg2 currentDefaultLinkID:(BOOL)arg3;	// IMP=0x00000001000f1fc4
- (void)link:(id)arg1 didDisconnectUnderlyingLinkID:(BOOL)arg2 linkUUID:(id)arg3 reason:(unsigned char)arg4;	// IMP=0x00000001000f1918
- (void)link:(id)arg1 didGetLinkProbingStatus:(id)arg2;	// IMP=0x00000001000ef5f4
- (void)link:(id)arg1 didSoMaskChange:(unsigned int)arg2;	// IMP=0x00000001000eeff4
- (void)link:(id)arg1 didCellularMTUChange:(unsigned short)arg2;	// IMP=0x00000001000eea24
- (void)link:(id)arg1 didRATChange:(unsigned char)arg2;	// IMP=0x00000001000ee4ac
- (void)link:(id)arg1 didCellularNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00000001000ededc
- (void)link:(id)arg1 didWiFiNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00000001000ed90c
- (void)link:(id)arg1 didConnectUnderlyingLink:(BOOL)arg2 linkUUID:(id)arg3 localAttributes:(id)arg4 remoteAttributes:(id)arg5;	// IMP=0x00000001000ec7f8
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_78c9ccae *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00000001000eb2cc
- (void)link:(id)arg1 didReceiveReportEvent:(id)arg2;	// IMP=0x00000001000ea658
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00000001000ea280
- (void)link:(id)arg1 didReceiveSKEData:(id)arg2;	// IMP=0x00000001000e9b60
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00000001000e991c
- (void)addQREventForRTCReport:(id)arg1;	// IMP=0x00000001000e9694
- (void)_setLinkProtocol:(id)arg1;	// IMP=0x00000001000e8f70
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x00000001000e84d4
- (void)connection:(id)arg1 receivedData:(id)arg2;	// IMP=0x00000001000e7824
- (void)handleAVConferenceError:(id)arg1;	// IMP=0x00000001000e77d4
- (void)connectionDidStop:(id)arg1 error:(id)arg2;	// IMP=0x00000001000e7434
- (void)connection:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000001000e6e24
- (void)setPreferences:(id)arg1;	// IMP=0x00000001000e6950
- (void)setMuted:(_Bool)arg1;	// IMP=0x00000001000e6484
- (void)setAudioEnabled:(_Bool)arg1;	// IMP=0x00000001000e5fb8
- (id)connectDuration;	// IMP=0x00000001000e5de4
- (id)sessionDuration;	// IMP=0x00000001000e5cbc
- (void)endSessionWithReason:(unsigned int)arg1;	// IMP=0x00000001000e5bb8
- (void)_notifyClientsSessionStopped;	// IMP=0x00000001000e5240
- (void)_cleanupSocketPairConnection;	// IMP=0x00000001000e51f4
- (void)_checkAndUnassertRealTimeMode;	// IMP=0x00000001000e5168
- (id)_acceptedDeviceToken;	// IMP=0x00000001000e4d18
- (id)_acceptedDeviceUniqueID;	// IMP=0x00000001000e478c
- (id)_socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 connectionSuffix:(id)arg4;	// IMP=0x00000001000e3724
- (void)_closeSocketToDevice:(id)arg1;	// IMP=0x00000001000e2c5c
- (void)_resetPreferences:(id)arg1;	// IMP=0x00000001000e27e8
- (void)_endSession;	// IMP=0x00000001000e0cb0
- (void)endSessionWithData:(id)arg1;	// IMP=0x00000001000e09e0
- (void)_sendSessionEndWithData:(id)arg1;	// IMP=0x00000001000e02e0
- (void)endSession;	// IMP=0x00000001000e024c
- (void)reconnectSession;	// IMP=0x00000001000dffd0
- (void)_cleanupQuickRelaySession;	// IMP=0x00000001000dfc00
- (void)cleanupSession;	// IMP=0x00000001000dec18
- (void)startListeningOnClientSocket:(int)arg1 isRawSocket:(_Bool)arg2;	// IMP=0x00000001000de6c0
- (void)runConnectivityCheckWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001000de4f4
- (void)networkingIsAvailable:(CDUnknownBlockType)arg1;	// IMP=0x00000001000de484
- (unsigned int)globalLinkErrorToSessionEndReason:(long long)arg1;	// IMP=0x00000001000de390
- (id)getAppID;	// IMP=0x00000001000de324
- (id)getFromService;	// IMP=0x00000001000de20c
- (id)getCallerCert;	// IMP=0x00000001000de0bc
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00000001000dde48
- (void)setAcceptedRelaySession:(id)arg1;	// IMP=0x00000001000dd63c
- (void)_setInitialLinkType:(unsigned long long)arg1;	// IMP=0x00000001000dd010
- (void)checkAndCallSessionStart;	// IMP=0x00000001000dced4
- (void)_sessionStartWithSocketDescriptor:(int)arg1;	// IMP=0x00000001000dc6c4
- (_Bool)_shouldUseIPsecLink;	// IMP=0x00000001000dc600
- (void)_broadcastSessionStartWithSocket:(int)arg1;	// IMP=0x00000001000dc2c4
- (void)startQRSession;	// IMP=0x00000001000dc28c
- (void)openSocketToDevice:(id)arg1;	// IMP=0x00000001000da5dc
- (double)_serverSpecifiedJoinNotificationDeliveryTimeout;	// IMP=0x00000001000da4d8
- (void)_noteJoinNotificationDidDeliverWithSuccess:(_Bool)arg1;	// IMP=0x00000001000d9e68
- (void)_startJoinNotificationDeliveryTimeout;	// IMP=0x00000001000d90b0
- (void)connectQRServer:(id)arg1 withPreferredLocalInterface:(int)arg2;	// IMP=0x00000001000d3f34
- (void)didReceiveCurrentCellularSignalRaw:(int)arg1 signalStrength:(int)arg2 signalGrade:(int)arg3;	// IMP=0x00000001000d3734
- (id)_getNewLinkOptionsForActiveParticipantInfoRequest;	// IMP=0x00000001000d330c
- (void)_sendingOfflineActiveParticipantInfoRequest:(id)arg1;	// IMP=0x00000001000d29b4
- (void)requestSessionInfoWithOptions:(id)arg1;	// IMP=0x00000001000d071c
- (void)_connectQRDirectlyToClientChannel:(id)arg1;	// IMP=0x00000001000c2bf0
- (void)_connectSocketDescriptor:(int)arg1 toClientChannel:(id)arg2;	// IMP=0x00000001000c0520
- (void)_checkAndRunClientChannelTests:(id)arg1;	// IMP=0x00000001000bf758
- (_Bool)_checkAndSendCachedDataForClient:(id)arg1;	// IMP=0x00000001000bef38
- (void)writeToClientChannel:(id)arg1 packetBuffer:(CDStruct_78c9ccae *)arg2 metaData:(const char *)arg3 metadataSize:(unsigned int)arg4;	// IMP=0x00000001000bd408
- (void)_invalidateClientChannel:(id)arg1;	// IMP=0x00000001000bccec
- (void)registerClientChannel;	// IMP=0x00000001000bbd3c
- (void)reportFirstMKMReceived:(double)arg1;	// IMP=0x00000001000bb850
- (void)_cleanupSessionConnection;	// IMP=0x00000001000bb2e8
- (void)_reportRTC;	// IMP=0x00000001000bacb4
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) char *keyMaterial;
- (void)dealloc;	// IMP=0x00000001000ba0e8
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4;	// IMP=0x00000001000b69cc
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3;	// IMP=0x00000001000b6898
- (long long)_loggingFlags;	// IMP=0x00000001000b6814
- (void)_selectDefaultMic;	// IMP=0x00000001000b6800
- (void)submitAWDMetricsForIDSSessionWithEndReason:(unsigned int)arg1;	// IMP=0x00000001003d38e0
- (void)submitAWDMetricsForIDSSessionCompleted;	// IMP=0x00000001003d2dc0
- (void)submitAWDMetricsForIDSSessionReinitiateConnected;	// IMP=0x00000001003d2c88
- (void)submitAWDMetricsForIDSSessionReinitiateStarted;	// IMP=0x00000001003d2b50
- (void)submitAWDMetricsForIDSSessionReinitiateRequested;	// IMP=0x00000001003d2a18
- (void)submitAWDMetricsForIDSSessionConnected;	// IMP=0x00000001003d28e0
- (void)submitAWDMetricsForIDSSessionAcceptReceived;	// IMP=0x00000001003d27a8
- (void)submitAWDMetricsForIDSSessionAcceptSent;	// IMP=0x00000001003d2670
- (void)submitAWDMetricsForIDSSessionDeclineReceived;	// IMP=0x00000001003d2538
- (void)submitAWDMetricsForIDSSessionDeclineSent;	// IMP=0x00000001003d2400
- (void)submitAWDMetricsForIDSSessionCancelReceived;	// IMP=0x00000001003d22c8
- (void)submitAWDMetricsForIDSSessionCancelSentWithRemoteEndReason:(unsigned int)arg1 numberOfRecipients:(id)arg2;	// IMP=0x00000001003d214c
- (void)submitAWDMetricsForIDSSessionInvitationReceived;	// IMP=0x00000001003d2014
- (void)submitAWDMetricsForIDSSessionInvitationSentWithNumberOfRecipients:(id)arg1;	// IMP=0x00000001003d1ea4
- (void)submitAWDMetricsForIDSSessionStarted;	// IMP=0x00000001003d1b14
- (_Bool)_shouldSubmitMetricsBasedOnDate:(id)arg1 isInitiator:(_Bool)arg2;	// IMP=0x00000001003d18c4
- (_Bool)_shouldSubmitMetricsForThisSession;	// IMP=0x00000001003d179c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

