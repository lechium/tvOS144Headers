//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADAudioPlaybackServiceListening-Protocol.h"
#import "ADAudioStateListening-Protocol.h"
#import "ADBluetoothDeviceObserver-Protocol.h"
#import "ADCommandCenterClient-Protocol.h"
#import "ADCommandCenterRequestDelegate-Protocol.h"
#import "ADCommandCenterSpeechDelegate-Protocol.h"
#import "ADHandsFreeStateChangedObserver-Protocol.h"
#import "AFClientService-Protocol.h"

@class AFClientConfiguration, AFRequestInfo, AFSpeechRequestOptions, AFWatchdogTimer, NSMutableOrderedSet, NSString, NSUUID, NSXPCConnection;
@protocol ADBluetoothDevice, OS_dispatch_group, OS_dispatch_queue, OS_os_transaction;

@interface ADClientConnection : NSObject <ADHandsFreeStateChangedObserver, ADAudioStateListening, ADAudioPlaybackServiceListening, ADBluetoothDeviceObserver, ADCommandCenterClient, ADCommandCenterRequestDelegate, ADCommandCenterSpeechDelegate, AFClientService>
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    AFRequestInfo *_requestInfo;	// 24 = 0x18
    AFSpeechRequestOptions *_requestOptions;	// 32 = 0x20
    CDUnknownBlockType _requestCompletion;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_requestGroup;	// 48 = 0x30
    NSUUID *_requestUUID;	// 56 = 0x38
    AFClientConfiguration *_clientConfiguration;	// 64 = 0x40
    unsigned long long _pendingRequestId;	// 72 = 0x48
    double _pendingRequestTimestamp;	// 80 = 0x50
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 88 = 0x58
    long long _numberOfPresentedUIs;	// 96 = 0x60
    CDUnknownBlockType _presentedUIReply;	// 104 = 0x68
    NSObject<OS_os_transaction> *_presentedUITransaction;	// 112 = 0x70
    int _ringerStateToken;	// 120 = 0x78
    _Bool _hasCachedADShouldSpeak;	// 124 = 0x7c
    _Bool _cachedADShouldSpeak;	// 125 = 0x7d
    _Bool _requestOptionsRequireTTS;	// 126 = 0x7e
    _Bool _serverIsForcingTTS;	// 127 = 0x7f
    _Bool _combinedShouldSpeakState;	// 128 = 0x80
    _Bool _isConnected;	// 129 = 0x81
    id <ADBluetoothDevice> _bluetoothDevice;	// 136 = 0x88
    NSMutableOrderedSet *_audioSessionAssertions;	// 144 = 0x90
    NSMutableOrderedSet *_speechCapturingContexts;	// 152 = 0x98
    AFWatchdogTimer *_longLivedConnectionABCTimer;	// 160 = 0xa0
    _Bool adSpeechSessionEnded;	// 168 = 0xa8
}

- (void).cxx_destruct;	// IMP=0x000000010026faa8
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x000000010026f9bc
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x000000010026f8a4
- (oneway void)recordUIMetrics:(id)arg1;	// IMP=0x000000010026f8a0
- (oneway void)_refreshAssistantValidation;	// IMP=0x000000010026f858
- (oneway void)_startSpeechWithURL:(id)arg1 isNarrowBand:(_Bool)arg2;	// IMP=0x000000010026f7d0
- (oneway void)_requestBarrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026f760
- (oneway void)_barrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026f754
- (oneway void)_clearAssistantInfoForAccountIdentifier:(id)arg1;	// IMP=0x000000010026f6d4
- (oneway void)_fetchAppContextForApplicationInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010026f518
- (oneway void)_broadcastCommandDictionary:(id)arg1;	// IMP=0x000000010026f428
- (oneway void)_performTaskCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010026ef58
- (oneway void)_performCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010026ea30
- (oneway void)_sendLargeData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010026e9ec
- (oneway void)_pingServiceForIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010026e80c
- (oneway void)_listInstalledServicesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026e79c
- (oneway void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x000000010026e74c
- (oneway void)reportIssueForType:(id)arg1 subtype:(id)arg2 context:(id)arg3;	// IMP=0x000000010026e5e0
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x000000010026e4d0
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;	// IMP=0x000000010026e3e4
- (oneway void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x000000010026e374
- (oneway void)endUpdateOutputAudioPower;	// IMP=0x000000010026e324
- (oneway void)beginUpdateOutputAudioPowerWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026e2ac
- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x000000010026e258
- (oneway void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x000000010026e1e0
- (oneway void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010026e144
- (oneway void)getRemoteClockTimerSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010026de10
- (oneway void)getSerializedCachedObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026da4c
- (oneway void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026d9c0
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x000000010026d978
- (oneway void)recordCancellationMetrics;	// IMP=0x000000010026d930
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x000000010026d8c0
- (oneway void)telephonyRequestCompleted;	// IMP=0x000000010026d878
- (oneway void)prepareForPhoneCall;	// IMP=0x000000010026d830
- (oneway void)setAlertContextDirty;	// IMP=0x000000010026d7e8
- (oneway void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;	// IMP=0x000000010026d75c
- (oneway void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;	// IMP=0x000000010026d708
- (oneway void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;	// IMP=0x000000010026d658
- (oneway void)setApplicationContext:(id)arg1;	// IMP=0x000000010026d5e8
- (oneway void)willSetApplicationContextWithRefId:(id)arg1;	// IMP=0x000000010026d578
- (oneway void)rollbackClearContext;	// IMP=0x000000010026d490
- (oneway void)clearContext;	// IMP=0x000000010026d394
- (oneway void)performGenericAceCommand:(id)arg1 interruptOutstandingRequest:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010026d2ec
- (oneway void)requestStateUpdateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026d1c8
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x000000010026d094
- (oneway void)cancelSpeech;	// IMP=0x000000010026cf94
- (oneway void)rollbackRequest;	// IMP=0x000000010026cea8
- (oneway void)cancelRequestForReason:(long long)arg1;	// IMP=0x000000010026cd30
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x000000010026cc04
- (oneway void)startAcousticIDRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026cb4c
- (oneway void)startSpeechPronunciationRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026ca94
- (oneway void)continuePendingSpeechRequestWithId:(unsigned long long)arg1 fromTimestamp:(double)arg2;	// IMP=0x000000010026ca1c
- (oneway void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 requestId:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026c6b8
- (oneway void)startRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026c490
- (void)_setRequestCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010026c2d0
- (oneway void)endSession;	// IMP=0x000000010026c0f0
- (oneway void)setConfiguration:(id)arg1;	// IMP=0x000000010026bfb8
- (oneway void)didDismissUI;	// IMP=0x000000010026be74
- (oneway void)willPresentUIWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026bc48
- (oneway void)setCarDNDActive:(_Bool)arg1;	// IMP=0x000000010026bbf8
- (oneway void)setLockState:(_Bool)arg1 showingLockScreen:(_Bool)arg2;	// IMP=0x000000010026bb98
- (oneway void)resumeInterruptedAudioPlaybackIfNeeded;	// IMP=0x000000010026bb50
- (oneway void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026ba74
- (oneway void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 speechRequestOptions:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010026b82c
- (oneway void)boostedPreheatWithStyle:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026b7b0
- (oneway void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;	// IMP=0x000000010026b734
- (void)bluetoothDeviceDidInvalidate:(id)arg1;	// IMP=0x000000010026b658
- (void)bluetoothDevice:(id)arg1 headphoneListeningModeDidChangeFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x000000010026b55c
- (void)bluetoothDevice:(id)arg1 headphoneInEarDetectionStateDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x000000010026aca4
- (void)bluetoothDevice:(id)arg1 deviceInfoDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x000000010026ab80
- (void)audioPlaybackService:(id)arg1 didStopRequest:(id)arg2 error:(id)arg3;	// IMP=0x000000010026aa70
- (void)audioPlaybackService:(id)arg1 didStartRequest:(id)arg2;	// IMP=0x000000010026a9a0
- (void)audioPlaybackService:(id)arg1 willStartRequest:(id)arg2;	// IMP=0x000000010026a8d0
- (void)audioStateAnnouncer:(id)arg1 didChangeAudioStateFrom:(id)arg2 to:(id)arg3;	// IMP=0x000000010026a7b4
- (void)adShouldSpeakStateDidChange:(_Bool)arg1;	// IMP=0x000000010026a718
- (void)_logShouldSpeakState:(_Bool)arg1;	// IMP=0x000000010026a6bc
- (_Bool)adWaitingForAudioFile;	// IMP=0x000000010026a6b4
- (void)adSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026a348
- (void)adSpeechRecordingDidDetectStartPointWithContext:(id)arg1;	// IMP=0x000000010026a094
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0000000100269f94
- (void)adSpeechRecognitionWillBeginRecognitionUpdateForTask:(id)arg1;	// IMP=0x0000000100269ec4
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 utterances:(id)arg2 sessionUUID:(id)arg3 refId:(id)arg4;	// IMP=0x0000000100269ec0
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0000000100269ebc
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x0000000100269d40
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x0000000100269bc4
- (void)adSpeechRecordingDidFail:(id)arg1 context:(id)arg2;	// IMP=0x0000000100269800
- (void)adSpeechRecordingDidCancelWithContext:(id)arg1;	// IMP=0x0000000100269498
- (void)adSpeechRecordingDidEndWithContext:(id)arg1;	// IMP=0x0000000100269130
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 context:(id)arg6;	// IMP=0x0000000100268d74
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionRequestUUID:(id)arg4 dictationOptions:(id)arg5 context:(id)arg6;	// IMP=0x0000000100268908
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 context:(id)arg2;	// IMP=0x00000001002685cc
- (void)_updateShouldSpeak;	// IMP=0x00000001002684a0
- (_Bool)_shouldSpeak;	// IMP=0x0000000100268474
- (void)_computeShouldSpeak;	// IMP=0x0000000100268290
- (void)_handleAudioSessionInterruption:(id)arg1;	// IMP=0x00000001002680e4
- (void)_unregisterForAudioSessionInterruptionNotification;	// IMP=0x0000000100268084
- (void)_registerForAudioSessionInterruptionNotification;	// IMP=0x000000010026801c
- (void)_unregisterForRingerStateNotification;	// IMP=0x0000000100267fe8
- (void)_registerForRingerStateNotification;	// IMP=0x0000000100267f1c
- (void)_setServerForcedTTS:(_Bool)arg1;	// IMP=0x0000000100267ecc
- (void)_setRequestOptionsRequireTTS:(_Bool)arg1;	// IMP=0x0000000100267ebc
- (void)_setADShouldSpeak:(_Bool)arg1;	// IMP=0x0000000100267ea4
- (void)adFailedToLaunchAppWithBundleIdentifier:(id)arg1;	// IMP=0x0000000100267dd4
- (void)adWillProcessAppLaunchWithBundleIdentifier:(id)arg1;	// IMP=0x0000000100267d04
- (void)adAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x0000000100267c5c
- (void)adAudioSessionWillBecomeActive:(_Bool)arg1;	// IMP=0x0000000100267bb4
- (void)adRequestWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001002679cc
- (void)adRequestDidHandleFailedStartPlayback:(long long)arg1;	// IMP=0x0000000100267928
- (void)adServerRequestsTTSStateUnmuted:(_Bool)arg1;	// IMP=0x00000001002678b4
- (void)adAceConnectionWillRetryOnError:(id)arg1;	// IMP=0x00000001002677e4
- (void)adInvalidateCurrentUserActivity;	// IMP=0x0000000100267748
- (void)adSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;	// IMP=0x0000000100267638
- (void)adAcousticIDRequestDidFinishSuccessfully:(_Bool)arg1;	// IMP=0x0000000100267590
- (void)adMusicWasDetected;	// IMP=0x00000001002674f4
- (void)adAcousticIDRequestWillStart;	// IMP=0x0000000100267458
- (void)adQuickStopWasHandledWithActions:(unsigned long long)arg1;	// IMP=0x00000001002673b4
- (void)adRequestRequestedDismissAssistant;	// IMP=0x0000000100267318
- (void)adExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;	// IMP=0x0000000100267208
- (void)adExtensionRequestWillStartForApplication:(id)arg1;	// IMP=0x0000000100267138
- (void)adWantsToCacheImage:(id)arg1;	// IMP=0x0000000100267008
- (_Bool)adTextToSpeechIsMuted;	// IMP=0x0000000100266eec
- (void)adGetClockContext:(CDUnknownBlockType)arg1;	// IMP=0x0000000100266d50
- (void)adGetBulletinContext:(CDUnknownBlockType)arg1;	// IMP=0x0000000100266bb8
- (void)adRequestRequestedOpenURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001002669d4
- (void)adRequestRequestedOpenApplicationWithBundleID:(id)arg1 URL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001002667d0
- (void)adStartUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001002665a4
- (void)adRequestEncounteredIntermediateError:(id)arg1;	// IMP=0x0000000100266498
- (void)adRequestDidCompleteWithSuccess:(_Bool)arg1 error:(id)arg2;	// IMP=0x00000001002660ac
- (void)_handleRequestCompletedWithUUID:(id)arg1 error:(id)arg2;	// IMP=0x0000000100265eb8
- (void)adRequestDidReceiveCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100265a1c
- (void)adRequestWillReceiveCommand:(id)arg1;	// IMP=0x0000000100265944
- (void)_removeAllAudioSessionAssertionsForReason:(id)arg1;	// IMP=0x000000010026547c
- (void)_addAudioSessionAssertion:(id)arg1;	// IMP=0x0000000100265364
- (void)_removeAllSpeechCapturingContextsForReason:(id)arg1;	// IMP=0x0000000100264fcc
- (void)_addSpeechCapturingContext:(id)arg1;	// IMP=0x0000000100264eb4
- (void)_setBluetoothDevice:(id)arg1;	// IMP=0x0000000100264d94
- (void)_speechRecordingDidFinish;	// IMP=0x0000000100264d08
- (void)_updateSpeechRequestOptions:(id)arg1;	// IMP=0x0000000100264a80
- (id)_serviceDelegateWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001002649dc
- (id)_serviceDelegate;	// IMP=0x00000001002649cc
- (void)connectionDisconnected;	// IMP=0x0000000100264694
- (void)dealloc;	// IMP=0x0000000100264520
- (id)initWithXPCConnection:(id)arg1;	// IMP=0x00000001002640dc

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

