//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "VOTCustomActionContext-Protocol.h"
#import "VOTDirectTouchManagementProtocol-Protocol.h"
#import "VOTElementFetchDelegateProtocol-Protocol.h"
#import "VOTElementManagementProtocol-Protocol.h"
#import "VOTElementRotorDelegate-Protocol.h"
#import "VOTExplorerElementManagerDelegate-Protocol.h"
#import "VOTOutputManagerObserver-Protocol.h"
#import "VOTOutputRequestCompletionProtocol-Protocol.h"
#import "VOTRotorManagementProtocol-Protocol.h"
#import "VOTTVGestureRepeaterDelegate-Protocol.h"
#import "VOTVisionEngineResultUpdateDelegate-Protocol.h"

@class AXIndexMap, AXUIElement, NSArray, NSData, NSDictionary, NSLock, NSMutableArray, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSSet, NSString, NSURL, SCRCTargetSelectorTimer, SCRCThread, SCRCThreadKey, VOTElement, VOTElementFetcher, VOTElementRotor, VOTElementUniqueIdentification, VOTEvent, VOTExplorerElementManager, VOTOutputRequest, VOTRotor, VOTTVGestureRepeater, VOTTVSpeechRequestManager, VOTTextMovementManager, VOTUpdateFocusContext, _VOTTextMarkerRange;
@protocol VOTElementUpdateProtocol;

@interface VOTElementManager : NSObject <VOTExplorerElementManagerDelegate, VOTTVGestureRepeaterDelegate, VOTElementRotorDelegate, VOTCustomActionContext, VOTOutputManagerObserver, VOTOutputRequestCompletionProtocol, VOTElementFetchDelegateProtocol, VOTDirectTouchManagementProtocol, VOTRotorManagementProtocol, VOTVisionEngineResultUpdateDelegate, VOTElementManagementProtocol>
{
    AXIndexMap *_commands;	// 8 = 0x8
    VOTElement *_lastValidElement;	// 16 = 0x10
    NSArray *_currentApplications;	// 24 = 0x18
    VOTElement *_touchContainer;	// 32 = 0x20
    long long _touchContainersTouchedCount;	// 40 = 0x28
    AXUIElement *_autofillCurrentElement;	// 48 = 0x30
    long long _readWordCyclingCount;	// 56 = 0x38
    VOTElement *_currentElement;	// 64 = 0x40
    VOTElement *_anyThreadCurrentElement;	// 72 = 0x48
    struct os_unfair_lock_s _anyThreadCurrentElementLock;	// 80 = 0x50
    VOTElement *_currentOpaqueParent;	// 88 = 0x58
    VOTElementFetcher *_fetchManager;	// 96 = 0x60
    NSMutableString *_elementTypingBuffer;	// 104 = 0x68
    struct _NSRange _elementSelectionRangeBufferInternal;	// 112 = 0x70
    struct _NSRange _elementSelectionRangeBufferForValueChange;	// 128 = 0x80
    struct _NSRange _elementSelectionRangeBufferForSelectionChange;	// 144 = 0x90
    NSString *_webSelectionText;	// 160 = 0xa0
    unsigned long long _elementMathIndex;	// 168 = 0xa8
    NSArray *_elementMathSegments;	// 176 = 0xb0
    unsigned long long _elementMathSegmentGranularity;	// 184 = 0xb8
    struct _NSRange _highlightedCharacterRange;	// 192 = 0xc0
    _Bool _textRangeBeingDisplayed;	// 208 = 0xd0
    VOTElement *_firstResponderElement;	// 216 = 0xd8
    VOTElement *_previousTouchTypingKey;	// 224 = 0xe0
    double _previousTableOrCollectionViewRowTime;	// 232 = 0xe8
    double _lastAdjustValueTime;	// 240 = 0xf0
    double _lastLiveRegionUpdate;	// 248 = 0xf8
    double _lastPopupTime;	// 256 = 0x100
    double _lastTextInsertionAnnouncementTime;	// 264 = 0x108
    double _lastItemSelectionFromTouch;	// 272 = 0x110
    double _lastSentBannerTimerReset;	// 280 = 0x118
    SCRCTargetSelectorTimer *_updateLayoutTimer;	// 288 = 0x120
    SCRCTargetSelectorTimer *_containerFrameDrawingTimer;	// 296 = 0x128
    SCRCTargetSelectorTimer *_visualRotorFadeTimer;	// 304 = 0x130
    SCRCTargetSelectorTimer *_webPageLoadingSoundTimer;	// 312 = 0x138
    SCRCTargetSelectorTimer *_appSuspensionSoundTimer;	// 320 = 0x140
    SCRCTargetSelectorTimer *_simulatedPressOutputTimer;	// 328 = 0x148
    SCRCTargetSelectorTimer *_simulatedForceLiftTimer;	// 336 = 0x150
    SCRCTargetSelectorTimer *_updateAppFromTimer;	// 344 = 0x158
    SCRCTargetSelectorTimer *_updateWithNativeFocusTimer;	// 352 = 0x160
    SCRCTargetSelectorTimer *_pendingBrailleHomeButtonPress;	// 360 = 0x168
    SCRCTargetSelectorTimer *_elementMonitorTimer;	// 368 = 0x170
    NSMutableDictionary *_elementMonitorCache;	// 376 = 0x178
    SCRCTargetSelectorTimer *_keyboardAlternativeModeActivationTimer;	// 384 = 0x180
    SCRCTargetSelectorTimer *_alternativeKeyDismissalTimer;	// 392 = 0x188
    _Bool _keyboardAlternativesVisible;	// 400 = 0x190
    struct CGPoint _keyboardAlternativeVisibleTrackingPoint;	// 408 = 0x198
    struct CGPoint _keyboardAlternativeVisibleStartPoint;	// 424 = 0x1a8
    NSString *_lastScrollStatus;	// 440 = 0x1b8
    struct CGPoint _fingerLocation;	// 448 = 0x1c0
    struct CGPoint _lastValidElementLocation;	// 464 = 0x1d0
    VOTElementRotor *_elementRotor;	// 480 = 0x1e0
    VOTRotor *_speechRotor;	// 488 = 0x1e8
    NSMutableArray *_cachedLaunchIcons;	// 496 = 0x1f0
    long long _selectedTextStartLocation;	// 504 = 0x1f8
    long long _selectedTextOperation;	// 512 = 0x200
    NSMutableDictionary *_lastSeenFontProperties;	// 520 = 0x208
    NSDictionary *_lastSeenLineAndColumn;	// 528 = 0x210
    long long _lastSeenApplicationOrientation;	// 536 = 0x218
    NSData *_textMarker;	// 544 = 0x220
    _VOTTextMarkerRange *_textMarkerRange;	// 552 = 0x228
    NSArray *_lineArray;	// 560 = 0x230
    long long _lineArrayPosition;	// 568 = 0x238
    struct CGRect _lineFrame;	// 576 = 0x240
    NSMutableDictionary *_flowFromElements;	// 608 = 0x260
    NSString *_bookLineString;	// 616 = 0x268
    _Bool _bookUpdatedCurrentLine;	// 624 = 0x270
    long long _bookLineNumber;	// 632 = 0x278
    struct _NSRange _bookLineRange;	// 640 = 0x280
    long long _bookCursorPosition;	// 656 = 0x290
    NSString *_bookPageScrollString;	// 664 = 0x298
    VOTElement *_bookSubelement;	// 672 = 0x2a0
    long long _bookLastContentMovementDirection;	// 680 = 0x2a8
    long long _bookLastContentMovementUnit;	// 688 = 0x2b0
    VOTOutputRequest *_bookPageContentOutputRequest;	// 696 = 0x2b8
    VOTOutputRequest *_readAllOutputRequest;	// 704 = 0x2c0
    VOTOutputRequest *_announcementRequest;	// 712 = 0x2c8
    int _announcementPid;	// 720 = 0x2d0
    NSString *_announcementOriginalString;	// 728 = 0x2d8
    VOTElement *_elementBeforeAlert;	// 736 = 0x2e0
    VOTElement *_elementBeforePopup;	// 744 = 0x2e8
    VOTElement *_elementBeforeStatusBarMovement;	// 752 = 0x2f0
    VOTElement *_webFormControlBeforeInteraction;	// 760 = 0x2f8
    double _lastWebKeyboardDismissTime;	// 768 = 0x300
    NSDictionary *_keyboardKeyCommands;	// 776 = 0x308
    struct CGPoint _passthroughFinish;	// 784 = 0x310
    struct CGPoint _passthroughOffset;	// 800 = 0x320
    struct CGPoint _passthroughStart;	// 816 = 0x330
    NSMutableSet *_directInteractionElements;	// 832 = 0x340
    NSString *_continuousPathSuggestion;	// 840 = 0x348
    SCRCTargetSelectorTimer *_continuousPathIdleTimer;	// 848 = 0x350
    double _webPageLoadingProgress;	// 856 = 0x358
    long long _cursorBorderHitCount;	// 864 = 0x360
    NSString *_lastTitleElemenTitle;	// 872 = 0x368
    NSLock *_trackingLock;	// 880 = 0x370
    VOTEvent *_mostRecentTrackingEvent;	// 888 = 0x378
    VOTElementUniqueIdentification *_labeledElementIdentification;	// 896 = 0x380
    VOTElement *_cachedLabelElement;	// 904 = 0x388
    long long _customActionIndex;	// 912 = 0x390
    NSString *_customActionIdentifier;	// 920 = 0x398
    NSDictionary *_currentPublicCustomRotorItemResult;	// 928 = 0x3a0
    NSString *_dataComprehensionActionIdentifier;	// 936 = 0x3a8
    long long _customContentIndex;	// 944 = 0x3b0
    NSArray *_allElements;	// 952 = 0x3b8
    VOTElement *_previousItemChooserElement;	// 960 = 0x3c0
    struct SCRCMathAverageValue _roadTravelAngle;	// 968 = 0x3c8
    VOTElement *_upcomingRoadElement;	// 1408 = 0x580
    struct CGPoint _firstRoadTravelPoint;	// 1416 = 0x588
    struct CGPoint _lastRoadTravelPoint;	// 1432 = 0x598
    struct CGPoint _intersectionTravelPoint;	// 1448 = 0x5a8
    _Bool _playingMapSound;	// 1464 = 0x5b8
    _Bool _shouldContinueRoadTracking;	// 1465 = 0x5b9
    SCRCTargetSelectorTimer *_switchRoadsAtIntersectionTimer;	// 1472 = 0x5c0
    VOTOutputRequest *_switchRoadsOutputRequest;	// 1480 = 0x5c8
    VOTOutputRequest *_endOfRoadApproachingRequest;	// 1488 = 0x5d0
    VOTOutputRequest *_startTrackingRoadRequest;	// 1496 = 0x5d8
    double _switchedToRoadTime;	// 1504 = 0x5e0
    _Bool _approachingEndOfRoad;	// 1512 = 0x5e8
    struct CGPoint _explorationStartPoint;	// 1520 = 0x5f0
    NSString *_webSearchText;	// 1536 = 0x600
    int _countOutputBlockGeneration;	// 1544 = 0x608
    NSMutableDictionary *_focusedElementsByElementCommunityIdentifier;	// 1552 = 0x610
    SCRCThread *_elementManagerThread;	// 1560 = 0x618
    SCRCThread *_systemEventThread;	// 1568 = 0x620
    SCRCThreadKey *_threadKey;	// 1576 = 0x628
    struct {
        _Bool lastEventWasIdle;
        _Bool elementCenterSoundPlaying;
        _Bool inStatusBar;
        _Bool focusIsOnElement;
        _Bool tapShouldHandleAutofill;
        _Bool tapShouldHandleTextOperation;
        _Bool usePenumbraForKeyboardKeys;
        _Bool shouldSpeakNextLayoutChange;
        _Bool visualRotorDisplayed;
        _Bool touchingOnNothing;
        _Bool isReadingAll;
        _Bool isReadingAllBook;
        _Bool previousScrollWasBookContentMovement;
        _Bool performedFlickNavigation;
        _Bool performedKeyboardNavigation;
        _Bool performedRotorTextNavigation;
        _Bool performedSearch;
        _Bool performedElementUpdateForSelectionChange;
        _Bool inPassthroughMode;
        _Bool didTouchTypingOutputStart;
        _Bool inSearchTextMode;
        _Bool itemChooserVisible;
        _Bool shouldSpeakSameLineTouched;
        _Bool currentElementAllowsDirectTouch;
        _Bool shouldTurnTrackingIntoDirectTouch;
        _Bool shouldUpdateRotorForElement;
        _Bool avoidAnnouncingDirectTouchArea;
        _Bool wasSendingToNativeSlide;
        _Bool preventCustomRotorItemIndexReset;
        _Bool shouldTriggerAlternativeKeyActivation;
        _Bool setReachabilityIsActiveWhileFingerDown;
        _Bool watchDisplayDidTurnOn;
        _Bool inKeyboardTextSelectionMode;
        _Bool continuousPathActivationDesired;
        _Bool continuousPathKeyboardBegan;
        _Bool isContinuousPathOutsideBounds;
        _Bool isMonitoringElements;
        long long lastElementMovement;
    } _flags;	// 1584 = 0x630
    double _lastAnnouncementNotificationTime;	// 1632 = 0x660
    double _lastLockScreenAlertSpokenTime;	// 1640 = 0x668
    struct _NSRange _keyboardTextSelectionStartRange;	// 1648 = 0x670
    _Bool _inTextProcessingRotorMode;	// 1664 = 0x680
    long long _lastUserTextSelectionDirection;	// 1672 = 0x688
    VOTElement *_currentSubElement;	// 1680 = 0x690
    long long _misspelledWordReplacementCycleIndex;	// 1688 = 0x698
    double _performedTextSelectionOperation;	// 1696 = 0x6a0
    _Bool _didPeekEvent;	// 1704 = 0x6a8
    _Bool _isInPreview;	// 1705 = 0x6a9
    NSMutableArray *_touchEventElements;	// 1712 = 0x6b0
    unsigned long long _lastTableRow;	// 1720 = 0x6b8
    _Bool _systemIsSleeping;	// 1728 = 0x6c0
    unsigned long long _elementSearchGeneration;	// 1736 = 0x6c8
    long long _elementUnitIndex;	// 1744 = 0x6d0
    struct _NSRange _elementUnitOutputRange;	// 1752 = 0x6d8
    SCRCTargetSelectorTimer *_elementUpdatesFrequentlyTimer;	// 1768 = 0x6e8
    NSString *_cachedFrequentUpdateText;	// 1776 = 0x6f0
    unsigned long long _lastSeenLineStartPositionForFontProperties;	// 1784 = 0x6f8
    _Bool _inUnitTestingMode;	// 1792 = 0x700
    _Bool _speakNonfocusableElementsAfterDelay;	// 1793 = 0x701
    _Bool _shouldSilenceAnnouncements;	// 1794 = 0x702
    _Bool _explorerElementsNeedUpdate;	// 1795 = 0x703
    _Bool _shouldReadExplorerElementsAfterSpeechFinished;	// 1796 = 0x704
    SCRCTargetSelectorTimer *_readExplorerElementsAfterSpeechFinishedTimer;	// 1800 = 0x708
    SCRCTargetSelectorTimer *_updateVisualsTimer;	// 1808 = 0x710
    SCRCTargetSelectorTimer *_updatePreferredTVInteractionModeTimer;	// 1816 = 0x718
    _Bool _isShowingVoiceOverEnabledWarningBanner;	// 1824 = 0x720
    double _lastUserEventNotificationTime;	// 1832 = 0x728
    NSString *_lastSpokenGuideElementHeaderText;	// 1840 = 0x730
    _Bool _systemNotificationInProgress;	// 1848 = 0x738
    _Bool _exploreFocusAffectsNativeFocus;	// 1849 = 0x739
    NSNumber *_lastScreenChangeSourceIdentifier;	// 1856 = 0x740
    _Bool _lastHandledEventWasRotorMovement;	// 1864 = 0x748
    SCRCTargetSelectorTimer *_tvRotorInteractionTimer;	// 1872 = 0x750
    _Bool _didIgnoreLastFirstResponderChangeOnSelectionChange;	// 1880 = 0x758
    _Bool _unitTestingMode;	// 1881 = 0x759
    _Bool _tvIsInteractingWithRotor;	// 1882 = 0x75a
    _Bool _didReceiveForceUpdateChangeToken;	// 1883 = 0x75b
    _Bool _didCacheSideAppDividerElement;	// 1884 = 0x75c
    _Bool _inTextSelection;	// 1885 = 0x75d
    _Bool _selectingRightward;	// 1886 = 0x75e
    _Bool _isUpdatingFocus;	// 1887 = 0x75f
    _Bool _needsUpdateFocus;	// 1888 = 0x760
    _Bool _waitingToRetryFocus;	// 1889 = 0x761
    id <VOTElementUpdateProtocol> _updateDelegate;	// 1896 = 0x768
    double _timeSpentOnNothing;	// 1904 = 0x770
    double _lastNothingSoundTime;	// 1912 = 0x778
    double _lastAlertTime;	// 1920 = 0x780
    double _lastSelectionChangeTime;	// 1928 = 0x788
    double _lastScreenChangeNotificationTime;	// 1936 = 0x790
    double _lastPressOnMediaSessionElement;	// 1944 = 0x798
    double _touchTypingStartTime;	// 1952 = 0x7a0
    double _lastFirstResponderChangeTime;	// 1960 = 0x7a8
    double _lastTemporaryQuickNavDisableTime;	// 1968 = 0x7b0
    double _lastEventOccurredTime;	// 1976 = 0x7b8
    NSString *_lastEventCommand;	// 1984 = 0x7c0
    double _lastValueChangeTime;	// 1992 = 0x7c8
    double _lastWebPageLoadTime;	// 2000 = 0x7d0
    double _lastSearchForElementsTime;	// 2008 = 0x7d8
    unsigned long long _currentSimilarTraits;	// 2016 = 0x7e0
    VOTElement *_previousFirstResponder;	// 2024 = 0x7e8
    NSString *_previousFirstResponderValue;	// 2032 = 0x7f0
    NSMutableDictionary *_fingersFromTouchCommands;	// 2040 = 0x7f8
    unsigned long long _lastTextPressAction;	// 2048 = 0x800
    VOTElement *_nativeFocusElement;	// 2056 = 0x808
    VOTElement *_initialReadAllElement;	// 2064 = 0x810
    CDUnknownBlockType _elementManagerHandledEventCallback;	// 2072 = 0x818
    CDUnknownBlockType _currentElementChangedCallback;	// 2080 = 0x820
    NSArray *_previouslySpokenImageCaptionResults;	// 2088 = 0x828
    double _lastCursorBorderHitTime;	// 2096 = 0x830
    double _lastActivationTime;	// 2104 = 0x838
    double _lastSilencedAlertTime;	// 2112 = 0x840
    double _lastScreenWakeViaPlayPause;	// 2120 = 0x848
    double _lastExternalUnlockTime;	// 2128 = 0x850
    double _lastFolderOperationTime;	// 2136 = 0x858
    double _lastHomeButtonPressTime;	// 2144 = 0x860
    double _lastBlockedRequestBySiriOrDictationTime;	// 2152 = 0x868
    double _lastUserElementTouchTime;	// 2160 = 0x870
    double _lastElementChangeTime;	// 2168 = 0x878
    VOTElement *_nextElementToFocus;	// 2176 = 0x880
    NSString *_nextStringToSpeakOnScreenChange;	// 2184 = 0x888
    NSMutableDictionary *_previousTableOrCollectionViewToIndexPath;	// 2192 = 0x890
    NSMutableArray *_previousTableOrCollectionViewList;	// 2200 = 0x898
    VOTElement *_previousTableOrCollectionViewApplication;	// 2208 = 0x8a0
    VOTElement *_cachedSideAppDividerElement;	// 2216 = 0x8a8
    NSArray *_cachedAdditionalElementCommunities;	// 2224 = 0x8b0
    VOTElement *_mostRecentElementCommunity;	// 2232 = 0x8b8
    VOTElement *_firstTrackedAppInGesture;	// 2240 = 0x8c0
    NSString *_springBoardActionHandlerIdentifier;	// 2248 = 0x8c8
    VOTOutputRequest *_delayedNotificationAnnouncementRequest;	// 2256 = 0x8d0
    long long _lastElementChangeAction;	// 2264 = 0x8d8
    VOTElement *_lastTrackingUpdateAppsFailureApplication;	// 2272 = 0x8e0
    double _lastTrackingUpdateAppsFailureTime;	// 2280 = 0x8e8
    double _lastDuckingDisablementSessionStart;	// 2288 = 0x8f0
    double _lastPauseSpeechAndHapticsStart;	// 2296 = 0x8f8
    double _continuousPathTimeout;	// 2304 = 0x900
    NSDictionary *_previousContextDescriptors;	// 2312 = 0x908
    NSDictionary *_currentContextDescriptors;	// 2320 = 0x910
    VOTElement *_lastElementForAttemptToShowContextMenu;	// 2328 = 0x918
    double _lastAttemptToShowContextMenuTime;	// 2336 = 0x920
    VOTExplorerElementManager *_explorerElementManager;	// 2344 = 0x928
    VOTTVSpeechRequestManager *_tvSpeechRequestManager;	// 2352 = 0x930
    VOTTVGestureRepeater *_tvGestureRepeater;	// 2360 = 0x938
    long long _forceUpdateMask;	// 2368 = 0x940
    long long _lastElementHeadingLevel;	// 2376 = 0x948
    long long _lastElementBlockquoteLevel;	// 2384 = 0x950
    NSLock *_tvAccessLock;	// 2392 = 0x958
    VOTUpdateFocusContext *_updateFocusContext;	// 2400 = 0x960
    long long _focusRetryAttempts;	// 2408 = 0x968
    VOTElement *_lastContainerForCustomRotorHint;	// 2416 = 0x970
    NSSet *_previousCustomRotorsForRotorHint;	// 2424 = 0x978
    VOTTextMovementManager *_textSelectionMovementManager;	// 2432 = 0x980
    VOTOutputRequest *_lastRequestBlockedBySiriOrDictation;	// 2440 = 0x988
    unsigned long long _elementGeneration;	// 2448 = 0x990
    unsigned long long _webPageLoadedGenerationMark;	// 2456 = 0x998
    NSURL *_webPageLoadURL;	// 2464 = 0x9a0
    SCRCTargetSelectorTimer *_webPageElementFinder;	// 2472 = 0x9a8
    NSMutableDictionary *_directTouchApps;	// 2480 = 0x9b0
}

+ (void)_exitThread:(id)arg1;	// IMP=0x000000010005d4d0
+ (void)initialize;	// IMP=0x000000010005c284
- (void).cxx_destruct;	// IMP=0x00000001000b1510
@property(retain, nonatomic) NSMutableDictionary *directTouchApps; // @synthesize directTouchApps=_directTouchApps;
@property(retain, nonatomic) SCRCTargetSelectorTimer *webPageElementFinder; // @synthesize webPageElementFinder=_webPageElementFinder;
@property(retain, nonatomic) NSURL *webPageLoadURL; // @synthesize webPageLoadURL=_webPageLoadURL;
@property(nonatomic) unsigned long long webPageLoadedGenerationMark; // @synthesize webPageLoadedGenerationMark=_webPageLoadedGenerationMark;
@property(nonatomic) unsigned long long elementGeneration; // @synthesize elementGeneration=_elementGeneration;
@property(retain, nonatomic) VOTOutputRequest *lastRequestBlockedBySiriOrDictation; // @synthesize lastRequestBlockedBySiriOrDictation=_lastRequestBlockedBySiriOrDictation;
@property(retain, nonatomic) VOTTextMovementManager *textSelectionMovementManager; // @synthesize textSelectionMovementManager=_textSelectionMovementManager;
@property(retain, nonatomic) NSSet *previousCustomRotorsForRotorHint; // @synthesize previousCustomRotorsForRotorHint=_previousCustomRotorsForRotorHint;
@property(retain, nonatomic) VOTElement *lastContainerForCustomRotorHint; // @synthesize lastContainerForCustomRotorHint=_lastContainerForCustomRotorHint;
@property(nonatomic) _Bool waitingToRetryFocus; // @synthesize waitingToRetryFocus=_waitingToRetryFocus;
@property(nonatomic) long long focusRetryAttempts; // @synthesize focusRetryAttempts=_focusRetryAttempts;
@property(retain, nonatomic) VOTUpdateFocusContext *updateFocusContext; // @synthesize updateFocusContext=_updateFocusContext;
@property(retain, nonatomic) NSLock *tvAccessLock; // @synthesize tvAccessLock=_tvAccessLock;
@property(nonatomic) long long lastElementBlockquoteLevel; // @synthesize lastElementBlockquoteLevel=_lastElementBlockquoteLevel;
@property(nonatomic) long long lastElementHeadingLevel; // @synthesize lastElementHeadingLevel=_lastElementHeadingLevel;
@property(nonatomic) long long forceUpdateMask; // @synthesize forceUpdateMask=_forceUpdateMask;
@property(nonatomic) _Bool needsUpdateFocus; // @synthesize needsUpdateFocus=_needsUpdateFocus;
@property(nonatomic) _Bool isUpdatingFocus; // @synthesize isUpdatingFocus=_isUpdatingFocus;
@property(retain, nonatomic) VOTTVGestureRepeater *tvGestureRepeater; // @synthesize tvGestureRepeater=_tvGestureRepeater;
@property(retain, nonatomic) VOTTVSpeechRequestManager *tvSpeechRequestManager; // @synthesize tvSpeechRequestManager=_tvSpeechRequestManager;
@property(retain, nonatomic) VOTExplorerElementManager *explorerElementManager; // @synthesize explorerElementManager=_explorerElementManager;
@property(nonatomic) double lastAttemptToShowContextMenuTime; // @synthesize lastAttemptToShowContextMenuTime=_lastAttemptToShowContextMenuTime;
@property(retain, nonatomic) VOTElement *lastElementForAttemptToShowContextMenu; // @synthesize lastElementForAttemptToShowContextMenu=_lastElementForAttemptToShowContextMenu;
@property(retain, nonatomic) NSDictionary *currentContextDescriptors; // @synthesize currentContextDescriptors=_currentContextDescriptors;
@property(retain, nonatomic) NSDictionary *previousContextDescriptors; // @synthesize previousContextDescriptors=_previousContextDescriptors;
@property(nonatomic) double continuousPathTimeout; // @synthesize continuousPathTimeout=_continuousPathTimeout;
@property(nonatomic) double lastPauseSpeechAndHapticsStart; // @synthesize lastPauseSpeechAndHapticsStart=_lastPauseSpeechAndHapticsStart;
@property(nonatomic) double lastDuckingDisablementSessionStart; // @synthesize lastDuckingDisablementSessionStart=_lastDuckingDisablementSessionStart;
@property(nonatomic) double lastTrackingUpdateAppsFailureTime; // @synthesize lastTrackingUpdateAppsFailureTime=_lastTrackingUpdateAppsFailureTime;
@property(retain, nonatomic) VOTElement *lastTrackingUpdateAppsFailureApplication; // @synthesize lastTrackingUpdateAppsFailureApplication=_lastTrackingUpdateAppsFailureApplication;
@property(nonatomic) long long lastElementChangeAction; // @synthesize lastElementChangeAction=_lastElementChangeAction;
@property(retain, nonatomic) VOTOutputRequest *delayedNotificationAnnouncementRequest; // @synthesize delayedNotificationAnnouncementRequest=_delayedNotificationAnnouncementRequest;
@property(nonatomic) _Bool selectingRightward; // @synthesize selectingRightward=_selectingRightward;
@property(nonatomic) _Bool inTextSelection; // @synthesize inTextSelection=_inTextSelection;
@property(copy, nonatomic) NSString *springBoardActionHandlerIdentifier; // @synthesize springBoardActionHandlerIdentifier=_springBoardActionHandlerIdentifier;
@property(retain, nonatomic) VOTElement *firstTrackedAppInGesture; // @synthesize firstTrackedAppInGesture=_firstTrackedAppInGesture;
@property(retain, nonatomic) VOTElement *mostRecentElementCommunity; // @synthesize mostRecentElementCommunity=_mostRecentElementCommunity;
@property(retain, nonatomic) NSArray *cachedAdditionalElementCommunities; // @synthesize cachedAdditionalElementCommunities=_cachedAdditionalElementCommunities;
@property(retain, nonatomic) VOTElement *cachedSideAppDividerElement; // @synthesize cachedSideAppDividerElement=_cachedSideAppDividerElement;
@property(nonatomic) _Bool didCacheSideAppDividerElement; // @synthesize didCacheSideAppDividerElement=_didCacheSideAppDividerElement;
@property(retain, nonatomic) VOTElement *previousTableOrCollectionViewApplication; // @synthesize previousTableOrCollectionViewApplication=_previousTableOrCollectionViewApplication;
@property(retain, nonatomic) NSMutableArray *previousTableOrCollectionViewList; // @synthesize previousTableOrCollectionViewList=_previousTableOrCollectionViewList;
@property(retain, nonatomic) NSMutableDictionary *previousTableOrCollectionViewToIndexPath; // @synthesize previousTableOrCollectionViewToIndexPath=_previousTableOrCollectionViewToIndexPath;
@property(nonatomic) _Bool didReceiveForceUpdateChangeToken; // @synthesize didReceiveForceUpdateChangeToken=_didReceiveForceUpdateChangeToken;
@property(retain, nonatomic) NSString *nextStringToSpeakOnScreenChange; // @synthesize nextStringToSpeakOnScreenChange=_nextStringToSpeakOnScreenChange;
@property(retain, nonatomic) VOTElement *nextElementToFocus; // @synthesize nextElementToFocus=_nextElementToFocus;
@property(nonatomic) double lastElementChangeTime; // @synthesize lastElementChangeTime=_lastElementChangeTime;
@property(nonatomic) double lastUserElementTouchTime; // @synthesize lastUserElementTouchTime=_lastUserElementTouchTime;
@property(nonatomic) double lastBlockedRequestBySiriOrDictationTime; // @synthesize lastBlockedRequestBySiriOrDictationTime=_lastBlockedRequestBySiriOrDictationTime;
@property(nonatomic) double lastHomeButtonPressTime; // @synthesize lastHomeButtonPressTime=_lastHomeButtonPressTime;
@property(nonatomic) double lastFolderOperationTime; // @synthesize lastFolderOperationTime=_lastFolderOperationTime;
@property(nonatomic) double lastExternalUnlockTime; // @synthesize lastExternalUnlockTime=_lastExternalUnlockTime;
@property(nonatomic) double lastScreenWakeViaPlayPause; // @synthesize lastScreenWakeViaPlayPause=_lastScreenWakeViaPlayPause;
@property(nonatomic) double lastSilencedAlertTime; // @synthesize lastSilencedAlertTime=_lastSilencedAlertTime;
@property(nonatomic) double lastActivationTime; // @synthesize lastActivationTime=_lastActivationTime;
@property(nonatomic) double lastCursorBorderHitTime; // @synthesize lastCursorBorderHitTime=_lastCursorBorderHitTime;
@property(retain, nonatomic) NSArray *previouslySpokenImageCaptionResults; // @synthesize previouslySpokenImageCaptionResults=_previouslySpokenImageCaptionResults;
@property(nonatomic) _Bool tvIsInteractingWithRotor; // @synthesize tvIsInteractingWithRotor=_tvIsInteractingWithRotor;
@property(copy, nonatomic) CDUnknownBlockType currentElementChangedCallback; // @synthesize currentElementChangedCallback=_currentElementChangedCallback;
@property(copy, nonatomic) CDUnknownBlockType elementManagerHandledEventCallback; // @synthesize elementManagerHandledEventCallback=_elementManagerHandledEventCallback;
@property(nonatomic) _Bool unitTestingMode; // @synthesize unitTestingMode=_unitTestingMode;
@property(retain, nonatomic) VOTElement *initialReadAllElement; // @synthesize initialReadAllElement=_initialReadAllElement;
@property(retain, nonatomic) VOTElement *nativeFocusElement; // @synthesize nativeFocusElement=_nativeFocusElement;
@property(nonatomic) unsigned long long lastTextPressAction; // @synthesize lastTextPressAction=_lastTextPressAction;
@property(nonatomic) _Bool didIgnoreLastFirstResponderChangeOnSelectionChange; // @synthesize didIgnoreLastFirstResponderChangeOnSelectionChange=_didIgnoreLastFirstResponderChangeOnSelectionChange;
@property(retain, nonatomic) NSMutableDictionary *fingersFromTouchCommands; // @synthesize fingersFromTouchCommands=_fingersFromTouchCommands;
@property(copy, nonatomic) NSString *previousFirstResponderValue; // @synthesize previousFirstResponderValue=_previousFirstResponderValue;
@property(retain, nonatomic) VOTElement *previousFirstResponder; // @synthesize previousFirstResponder=_previousFirstResponder;
@property(nonatomic) unsigned long long currentSimilarTraits; // @synthesize currentSimilarTraits=_currentSimilarTraits;
@property(nonatomic) double lastSearchForElementsTime; // @synthesize lastSearchForElementsTime=_lastSearchForElementsTime;
@property(nonatomic) double lastWebPageLoadTime; // @synthesize lastWebPageLoadTime=_lastWebPageLoadTime;
@property(nonatomic) double lastValueChangeTime; // @synthesize lastValueChangeTime=_lastValueChangeTime;
@property(retain, nonatomic) NSString *lastEventCommand; // @synthesize lastEventCommand=_lastEventCommand;
@property(nonatomic) double lastEventOccurredTime; // @synthesize lastEventOccurredTime=_lastEventOccurredTime;
@property(nonatomic) double lastTemporaryQuickNavDisableTime; // @synthesize lastTemporaryQuickNavDisableTime=_lastTemporaryQuickNavDisableTime;
@property(nonatomic) double lastFirstResponderChangeTime; // @synthesize lastFirstResponderChangeTime=_lastFirstResponderChangeTime;
@property(nonatomic) double touchTypingStartTime; // @synthesize touchTypingStartTime=_touchTypingStartTime;
@property(nonatomic) double lastPressOnMediaSessionElement; // @synthesize lastPressOnMediaSessionElement=_lastPressOnMediaSessionElement;
@property(nonatomic) double lastScreenChangeNotificationTime; // @synthesize lastScreenChangeNotificationTime=_lastScreenChangeNotificationTime;
@property(nonatomic) double lastSelectionChangeTime; // @synthesize lastSelectionChangeTime=_lastSelectionChangeTime;
@property(nonatomic) double lastAlertTime; // @synthesize lastAlertTime=_lastAlertTime;
@property(nonatomic) double lastNothingSoundTime; // @synthesize lastNothingSoundTime=_lastNothingSoundTime;
@property(nonatomic) double timeSpentOnNothing; // @synthesize timeSpentOnNothing=_timeSpentOnNothing;
@property(nonatomic) __weak id <VOTElementUpdateProtocol> updateDelegate; // @synthesize updateDelegate=_updateDelegate;
@property(retain, nonatomic) VOTElement *touchContainer; // @synthesize touchContainer=_touchContainer;
- (void)fillCacheWithElements:(id)arg1;	// IMP=0x00000001000b0f18
- (void)_setFetchManager:(id)arg1;	// IMP=0x00000001000b0e98
- (id)_fetchManager;	// IMP=0x00000001000b0e90
- (id)_lastSeenFontProperties;	// IMP=0x00000001000b0e88
- (void)outputManager:(id)arg1 willProcessNextRequest:(id)arg2;	// IMP=0x00000001000b0e78
- (void)outputManagerDidFinishProcessingQueuedRequests:(id)arg1;	// IMP=0x00000001000b0e64
- (long long)actionsRotorAddBehaviorForElementRotor:(id)arg1;	// IMP=0x00000001000b0e5c
- (long long)tvInteractionModeForElementRotor:(id)arg1;	// IMP=0x00000001000b0e44
- (void)rotor:(id)arg1 didChangeFrom:(long long)arg2 to:(long long)arg3 userInitiated:(_Bool)arg4;	// IMP=0x00000001000b0c3c
- (id)elementRotor;	// IMP=0x00000001000b0c34
- (void)moveToElementMatchingRotorType:(long long)arg1 inDirection:(long long)arg2;	// IMP=0x00000001000b0c1c
- (void)resetFrequentUpdateTextCache;	// IMP=0x00000001000b0c0c
- (void)_elementUpdatesFrequently;	// IMP=0x00000001000b07e8
- (_Bool)_elementMonitoringOutputElement:(id)arg1 userMonitored:(_Bool)arg2;	// IMP=0x00000001000b0514
- (_Bool)stringIsTextAttachment:(id)arg1;	// IMP=0x00000001000b0444
- (id)_textAttachmentElementForString:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00000001000b0374
- (void)outputTextSegmentForRange:(struct _NSRange)arg1 string:(id)arg2 element:(id)arg3 usePhonetics:(_Bool)arg4 segment:(long long)arg5;	// IMP=0x00000001000afc94
- (id)_listItemLabelForAXAttributedString:(id)arg1;	// IMP=0x00000001000afbc4
- (void)updateIndexesForOutputRange:(struct _NSRange)arg1 segment:(long long)arg2 direction:(long long)arg3 outputStringLength:(unsigned long long)arg4;	// IMP=0x00000001000afb98
- (struct _NSRange)outputRangeForTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00000001000afa98
- (void)outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00000001000af9a8
- (struct _NSRange)_outputRangeForCharacterSegment:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000af8ac
- (void)gestureRepeater:(id)arg1 repeaterEventDidFire:(long long)arg2;	// IMP=0x00000001000af810
- (void)gestureRepeaterWillSendFirstRepeaterEvent:(id)arg1;	// IMP=0x00000001000af798
- (void)_sendUserEventOccurredIfNeeded;	// IMP=0x00000001000af6ec
- (void)explorerElementManager:(id)arg1 didFinishReadAll:(_Bool)arg2;	// IMP=0x00000001000af618
- (void)explorerElementManager:(id)arg1 willReadElement:(id)arg2;	// IMP=0x00000001000af594
- (_Bool)explorerElementManagerShouldBeInUnitTestingMode:(id)arg1;	// IMP=0x00000001000af588
- (void)explorerElementManager:(id)arg1 didSetExplorerElementFocus:(id)arg2;	// IMP=0x00000001000af57c
- (void)willBeginReadAll:(id)arg1;	// IMP=0x00000001000af574
- (void)_updateExplorerElementsIfNeeded;	// IMP=0x00000001000af384
- (void)__interruptSpeachAndPlayBorderHitSound;	// IMP=0x00000001000af280
- (void)_interruptSpeachAndPlayBorderHitSound;	// IMP=0x00000001000af25c
- (void)__sendOutputRequest:(id)arg1;	// IMP=0x00000001000af1cc
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00000001000aedc8
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00000001000aedb4
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00000001000aecc0
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00000001000aecac
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 announcement:(_Bool)arg3 brailleOnly:(_Bool)arg4;	// IMP=0x00000001000aec94
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2;	// IMP=0x00000001000aec7c
- (void)_tvRotorInteractionTimerFired;	// IMP=0x00000001000aec04
- (void)__tvOS_HandleToggleNavigationStyle:(id)arg1;	// IMP=0x00000001000aea10
- (void)__tvOS_handleValueChangedWithType:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3 insertedTextOrNil:(id)arg4 isSecureText:(_Bool)arg5;	// IMP=0x00000001000ae4dc
- (void)_readExplorerElementsAfterSpeechFinishedTimerFired;	// IMP=0x00000001000ae370
- (void)__tvOS_handleUpdatePreferredTVInteractionModeTimer;	// IMP=0x00000001000ae2b8
- (void)__handleUpdateVisualsTimer;	// IMP=0x00000001000ae244
- (void)__updateVoiceOverEnabledWarningBannerVisibility;	// IMP=0x00000001000adfa0
- (void)_performTouchPadTapAtLocation:(struct CGPoint)arg1;	// IMP=0x00000001000ade7c
- (id)__targetElementForFocusElement:(id)arg1 mustBeAccessibilityElement:(_Bool)arg2;	// IMP=0x00000001000add44
- (id)__consumeAppTransitionForAnnouncingIfNeeded:(id)arg1;	// IMP=0x00000001000adb5c
- (_Bool)_bundleIdentifierIsHostedByPineBoard:(id)arg1;	// IMP=0x00000001000ada94
- (void)_tvOS_updateWithNativeFocus;	// IMP=0x00000001000ace10
- (void)_tvOS_retryUpdateWithNativeFocus;	// IMP=0x00000001000acc98
- (id)_focusElementForFocusUpdate:(id)arg1;	// IMP=0x00000001000acb2c
- (void)_tvOS_handleUpdateWithNativeFocusFromTimer;	// IMP=0x00000001000aca9c
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelay:(double)arg2;	// IMP=0x00000001000ac8cc
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelayNumber:(id)arg2;	// IMP=0x00000001000ac870
- (_Bool)_didFocusUpdateOriginateFromFocusedApp:(id)arg1;	// IMP=0x00000001000ac690
- (void)__updateElementVisuals;	// IMP=0x00000001000ac55c
- (void)__tvOS_toggleExploreFocusAffectsNativeFocusPreference;	// IMP=0x00000001000ac418
- (void)__tvOS_toggleSilenceAnnouncementsUserPreference;	// IMP=0x00000001000ac2d4
- (long long)_tvOS_userPreferredNonDirectTouchInteractionMode;	// IMP=0x00000001000ac2cc
- (void)__tvOS_toggleSpeakNonfocusableElementsAfterDelayUserPreference;	// IMP=0x00000001000ac188
- (void)__tvOS_toggleAudioDescriptions;	// IMP=0x00000001000abfe0
- (void)__sendHIDEvents:(id)arg1 postEventDelays:(id)arg2;	// IMP=0x00000001000abd10
- (void)__sendTVRemoteCommand:(unsigned long long)arg1;	// IMP=0x00000001000ab8b8
- (_Bool)_sendTVRemoteCommandOverrideForAXCommand:(long long)arg1;	// IMP=0x00000001000ab804
- (void)__handleTVSelectButtonClicked;	// IMP=0x00000001000ab4c8
- (void)__handleTVMenuButtonClicked;	// IMP=0x00000001000ab3b0
- (_Bool)handleTVSelectButtonClicked;	// IMP=0x00000001000ab308
- (_Bool)handleTVMenuButtonClicked;	// IMP=0x00000001000ab280
- (_Bool)_isDictationInProgressForCurrentApp;	// IMP=0x00000001000ab1dc
@property(nonatomic) _Bool exploreFocusAffectsNativeFocus;
@property(nonatomic) _Bool shouldSilenceAnnouncements;
@property(nonatomic) _Bool speakNonfocusableElementsAfterDelay;
- (id)focusedApplication:(id)arg1;	// IMP=0x00000001000aac80
- (void)_setLastSeenDeviceOrientation:(long long)arg1;	// IMP=0x00000001000aac78
- (void)_handlePerformEjectButtonPress:(id)arg1;	// IMP=0x00000001000aac60
- (void)_handlePerformVolumeDownButtonPress:(id)arg1;	// IMP=0x00000001000aac48
- (void)_handlePerformVolumeUpButtonPress:(id)arg1;	// IMP=0x00000001000aac30
- (_Bool)shouldAllowSpeaking;	// IMP=0x00000001000aabfc
- (_Bool)_processWatchSpecificOverrides:(id)arg1;	// IMP=0x00000001000aab7c
- (void)_handleKeyboardCommandEvent:(id)arg1;	// IMP=0x00000001000aa19c
- (void)_speakBrailleAutoAdvanceSpeed;	// IMP=0x00000001000aa070
- (double)_brailleAutoAdvanceStepFactor;	// IMP=0x00000001000aa030
- (void)_handleBrailleIncreaseAutoAdvanceSpeed:(id)arg1;	// IMP=0x00000001000a9ea4
- (void)_handleBrailleDecreaseAutoAdvanceSpeed:(id)arg1;	// IMP=0x00000001000a9d18
- (void)_handleBrailleEnableAutoAdvance:(id)arg1;	// IMP=0x00000001000a9c00
- (void)_handleBrailleWordWrapToggleEvent:(id)arg1;	// IMP=0x00000001000a9ad0
- (void)_handleBrailleRefreshEvent:(id)arg1;	// IMP=0x00000001000a99c4
- (void)_handleBrailleEvent:(id)arg1;	// IMP=0x00000001000a9954
- (void)_handleActivateBrailleScreenInput:(id)arg1;	// IMP=0x00000001000a993c
- (void)_handleAnnounceQuickNav:(id)arg1;	// IMP=0x00000001000a96e8
- (void)_handleToggleQuickNav:(id)arg1;	// IMP=0x00000001000a9640
- (void)_handleToggleSingleLetterQuickNav:(id)arg1;	// IMP=0x00000001000a92ec
- (void)_handleToggleVoiceOverModifierKeyLock:(id)arg1;	// IMP=0x00000001000a91e4
- (void)_handleSiriFinishedListening:(id)arg1;	// IMP=0x00000001000a91c8
- (void)_handleSiriStartedListening:(id)arg1;	// IMP=0x00000001000a9160
- (void)_handleSiriFinishedTalking:(id)arg1;	// IMP=0x00000001000a90b4
- (void)_handleSiriStartedTalking:(id)arg1;	// IMP=0x00000001000a9098
- (void)_handleHomeButtonPress;	// IMP=0x00000001000a8d68
- (void)handleHomeButtonPress;	// IMP=0x00000001000a8d64
- (void)handlePlayPauseButtonPress;	// IMP=0x00000001000a8d60
- (void)_handlePlayPauseButtonPress;	// IMP=0x00000001000a8d28
- (_Bool)_shouldSuppressSpeechForPlayPause;	// IMP=0x00000001000a8cf8
- (void)handleStateReset;	// IMP=0x00000001000a8cd4
- (void)_handleStateReset;	// IMP=0x00000001000a8c68
- (void)_handleDecreaseVolume:(id)arg1;	// IMP=0x00000001000a8bf4
- (void)_handleIncreaseVolume:(id)arg1;	// IMP=0x00000001000a8b84
- (void)_handleVolumeChange:(float)arg1;	// IMP=0x00000001000a8a04
- (void)_handleRotateOrientation:(id)arg1;	// IMP=0x00000001000a8994
- (_Bool)_shouldAllowSpeakThisGesture;	// IMP=0x00000001000a898c
- (_Bool)allowsSystemControlEventForPosition:(int)arg1;	// IMP=0x00000001000a8984
- (void)_handleSiriShortcutEvent:(id)arg1;	// IMP=0x00000001000a8980
- (void)_handleSystemCommandSwitchToNextApp:(id)arg1;	// IMP=0x00000001000a8934
- (void)_handleSystemCommandSwitchToPreviousApp:(id)arg1;	// IMP=0x00000001000a88e8
- (void)_handleSystemCommandTakeScreenshot:(id)arg1;	// IMP=0x00000001000a88a0
- (void)_handleSystemCommandToggleReachability:(id)arg1;	// IMP=0x00000001000a8858
- (void)_handleSystemCommandActivateAccessibilityShortcut:(id)arg1;	// IMP=0x00000001000a8810
- (void)_handleSystemCommandSpotlight:(id)arg1;	// IMP=0x00000001000a87c8
- (void)_handleSystemCommandActivateLockButton:(id)arg1;	// IMP=0x00000001000a8780
- (void)_handleSystemCommandToggleAppSwitcher:(id)arg1;	// IMP=0x00000001000a8738
- (void)_handleSystemCommandToggleDock:(id)arg1;	// IMP=0x00000001000a86f0
- (void)_handleSystemCommandActivateSpeakScreen:(id)arg1;	// IMP=0x00000001000a86e4
- (void)_handleSystemCommandControlCenter:(id)arg1;	// IMP=0x00000001000a869c
- (void)_handleSystemCommandNotificationCenter:(id)arg1;	// IMP=0x00000001000a8654
- (void)_handleSystemControlActivation:(id)arg1;	// IMP=0x00000001000a84e0
- (void)_handleScrollByPageNotification:(id)arg1;	// IMP=0x00000001000a73f0
- (void)_handleAutoCorrectionMadeNotification:(id)arg1;	// IMP=0x00000001000a71a8
- (void)_handleKeyboardChangedNotification;	// IMP=0x00000001000a70f4
- (void)_handleAutoCorrectionDisplayNotification:(id)arg1;	// IMP=0x00000001000a6ebc
- (id)continuousPathSuggestion;	// IMP=0x00000001000a6eb4
- (void)_handleUnmuteEligibleEventOccured;	// IMP=0x00000001000a6e6c
- (void)_handleReleaseExclusiveAudioHardware;	// IMP=0x00000001000a6e50
- (void)_handleRequestExclusiveAudioHardware;	// IMP=0x00000001000a6da8
- (void)_handleStopSpeaking;	// IMP=0x00000001000a6d1c
- (void)_handleScreenOffSilently;	// IMP=0x00000001000a6cfc
- (void)_handleScreenOnSilently;	// IMP=0x00000001000a6cdc
- (void)_handleScreenOff;	// IMP=0x00000001000a6c44
- (void)_handleScreenOn;	// IMP=0x00000001000a6bd8
- (void)_handleDidReceiveVisionEngineResult:(id)arg1;	// IMP=0x00000001000a6890
- (void)_handleCaptionsDisplayedNotification:(id)arg1;	// IMP=0x00000001000a6774
- (void)_captionsDisplayedWithTextRuns:(id)arg1;	// IMP=0x00000001000a6500
- (void)_handleVisualsUpdate:(id)arg1;	// IMP=0x00000001000a6498
- (void)_handleWebPageLoaded:(id)arg1;	// IMP=0x00000001000a6058
- (_Bool)_moveToWebItemDuringLoadIfNecessary;	// IMP=0x00000001000a5dcc
- (void)_webPageLoadingSound;	// IMP=0x00000001000a5cf0
- (void)_webPageElementFinder;	// IMP=0x00000001000a5c20
- (void)_clearWebLoadedSound;	// IMP=0x00000001000a5bb8
- (void)_handleScreenChange:(id)arg1 sound:(id)arg2;	// IMP=0x00000001000a5304
- (void)_updateFocusContext:(id)arg1;	// IMP=0x00000001000a5218
- (void)_handleApplicationWasActivated:(id)arg1;	// IMP=0x00000001000a4fb8
- (void)_updateDisplayWithCurrentElement;	// IMP=0x00000001000a4f68
- (void)_handleAlertReceived:(id)arg1 forApplication:(struct __AXUIElement *)arg2;	// IMP=0x00000001000a4418
- (id)_retrieveDefaultElementForPosition:(struct CGPoint)arg1;	// IMP=0x00000001000a40c0
- (void)_systemNotificationInProgressForRequest:(id)arg1;	// IMP=0x00000001000a404c
- (id)_handleEditingStyleResolutionForAnnouncement:(id)arg1;	// IMP=0x00000001000a3d14
- (void)_handleAnnouncementWithData:(id)arg1 pid:(int)arg2;	// IMP=0x00000001000a387c
- (void)_handleAnnouncement:(id)arg1;	// IMP=0x00000001000a386c
- (void)handleAnnouncement:(id)arg1;	// IMP=0x00000001000a382c
- (void)_handleAnnouncementNotification:(id)arg1;	// IMP=0x00000001000a3674
- (void)_reupdateTextSelectionInformation;	// IMP=0x00000001000a3630
- (void)_handleInvalidTextInputNotification:(id)arg1;	// IMP=0x00000001000a35b8
- (void)_handleInvalidStatusChanged:(id)arg1;	// IMP=0x00000001000a3504
- (void)_handleExpandedStatusChanged:(id)arg1;	// IMP=0x00000001000a3488
- (void)__handleExpandedStatusChanged;	// IMP=0x00000001000a3118
- (void)_handleAppSuspendAnimationProgressNotification:(id)arg1;	// IMP=0x00000001000a3018
- (void)_appSuspensionSoundTimer;	// IMP=0x00000001000a2f60
- (void)_handleKeyboardKeySelectedNotification:(id)arg1;	// IMP=0x00000001000a2cf8
- (void)_handleElementMoved:(struct __AXUIElement *)arg1;	// IMP=0x00000001000a2ad0
- (void)_processSilentValueChange;	// IMP=0x00000001000a2a10
- (void)_processValueChangeWithFirstResponder:(id)arg1 existingFirstResponder:(_Bool)arg2 changeType:(id)arg3 changeOrigination:(long long)arg4 isQuiet:(_Bool)arg5;	// IMP=0x00000001000a0ef4
- (void)resetTextAndSelectionCaches;	// IMP=0x00000001000a0ea4
- (void)_handleTextReplacementOccurredNotification:(id)arg1;	// IMP=0x00000001000a0e0c
- (void)_handleValueChangedNotification:(id)arg1 associatedElement:(id)arg2;	// IMP=0x00000001000a0b08
- (void)_handleNonEditableValueChange:(id)arg1;	// IMP=0x00000001000a0a2c
- (_Bool)_ignoreTextEditingNotificationsForPickerElementUsage;	// IMP=0x00000001000a0848
- (long long)typingFeedbackForKeyboardType;	// IMP=0x00000001000a06c4
- (void)_cancelPreviousElementSearch;	// IMP=0x00000001000a06a8
- (void)_updateCurrentElementForTextInputSelectionChangeIfNeeded;	// IMP=0x00000001000a02c0
- (struct _NSRange)_elementSelectionRange;	// IMP=0x00000001000a02b4
- (void)_elementSelectionRangeDidChange:(struct _NSRange)arg1 reason:(long long)arg2;	// IMP=0x00000001000a027c
- (void)_handleSelectionChangedNotification:(id)arg1;	// IMP=0x000000010009e560
- (_Bool)_isKeyboardLineMovement;	// IMP=0x000000010009e230
- (void)_handleWebSelectionChangedNotification:(id)arg1;	// IMP=0x000000010009dcf4
- (_Bool)_hasCurrentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010009dcb8
- (id)_currentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010009dca8
- (_Bool)_hasApplicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x000000010009dc34
- (id)_applicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x000000010009dae0
- (void)_outputWebLineWithMarkerRange:(id)arg1 withElement:(id)arg2;	// IMP=0x000000010009d868
- (_Bool)_shouldSwitchToFirstResponder:(id)arg1;	// IMP=0x000000010009d708
- (void)_handleFirstResponderChangedNotification:(id)arg1;	// IMP=0x000000010009cfe8
- (void)_handleNativeFocusItemChangedNotification:(id)arg1;	// IMP=0x000000010009cd2c
- (id)_firstResponderFromCurrentApplications;	// IMP=0x000000010009cbf8
- (void)_handleMoveToElementNotification:(id)arg1;	// IMP=0x000000010009c7c4
- (void)_moveToElement:(id)arg1 shouldPlaySound:(_Bool)arg2 echoSameTouchContainer:(_Bool)arg3 moveToElementNotification:(_Bool)arg4;	// IMP=0x000000010009c478
- (_Bool)_finishHandlingMoveToElementNotification:(id)arg1 shouldSyncNativeFocusElement:(id)arg2;	// IMP=0x000000010009c258
- (id)_verifiedElementWithElement:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x000000010009c160
- (id)_verifiedElementWithElement:(id)arg1;	// IMP=0x000000010009bd68
- (_Bool)_shouldAnnounceCustomRotorHintForElement:(id)arg1;	// IMP=0x000000010009b974
- (void)elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x000000010009b934
- (void)_elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x000000010009b878
- (void)updateCurrentElementFrame;	// IMP=0x000000010009b808
- (void)_updateCursorFrameForLineFrameMovement:(id)arg1;	// IMP=0x000000010009b6dc
- (void)_updateCursorFrameForElementIfNeeded:(id)arg1;	// IMP=0x000000010009b660
- (void)_updateCurrentElementFrame;	// IMP=0x000000010009b5e8
- (void)_updateFirstResponder;	// IMP=0x000000010009b4c0
- (struct __AXUIElement *)_firstResponderAXUIElementRefFromCurrentApplications;	// IMP=0x000000010009b26c
- (void)setFirstResponder:(id)arg1;	// IMP=0x000000010009b184
- (void)setCurrentElement:(id)arg1;	// IMP=0x000000010009b0ac
- (void)_updateFirstResponderTypingBuffer;	// IMP=0x000000010009afa8
- (void)_handleLayoutChange:(_Bool)arg1;	// IMP=0x00000001000993f4
- (void)_handleLayoutChangeFromTimer;	// IMP=0x00000001000993e4
- (void)_handleElementChangedNotification:(id)arg1;	// IMP=0x000000010009910c
- (void)_handleSystemLockedOutputBehavior:(id)arg1 shouldSendRequest:(_Bool *)arg2 startElement:(id *)arg3;	// IMP=0x0000000100098d28
- (id)_firstElementWithCurrentElement:(id)arg1 focusedApplications:(id)arg2;	// IMP=0x0000000100098b2c
- (id)_getAutoSpeakWatchFaceElements:(id)arg1;	// IMP=0x0000000100098a74
- (void)_updateApplicationAndSpeak:(id)arg1;	// IMP=0x0000000100096294
- (_Bool)_isWebAppStillOpen;	// IMP=0x00000001000961dc
- (void)_testingSetApplications:(id)arg1;	// IMP=0x00000001000961d0
- (_Bool)_addApplicationLabelsAndSummariesToRequest:(id)arg1 applicationNames:(id *)arg2 summaryElements:(id *)arg3;	// IMP=0x0000000100096130
- (id)_retrieveCachedFocusedElementForElementCommunity:(id)arg1;	// IMP=0x0000000100095ec4
- (void)_cacheFocusedElement:(id)arg1 forElementCommunity:(id)arg2;	// IMP=0x0000000100095e0c
- (id)_elementCommunityForElement:(id)arg1;	// IMP=0x0000000100095c74
- (id)_firstElementForFocusFromElementCommunities:(id)arg1 currentElement:(id)arg2;	// IMP=0x00000001000959fc
- (id)_firstResponderForApplications:(id)arg1;	// IMP=0x00000001000958bc
- (void)updateApplicationAndSpeak:(id)arg1;	// IMP=0x00000001000958b8
- (void)voiceOverDidRegisterWithSystem;	// IMP=0x00000001000957f4
- (void)_handleUpdateAppFromTimer;	// IMP=0x0000000100095734
- (_Bool)_reDispatchUpdateAppFromTimerIfBundlesAreNotReady;	// IMP=0x0000000100095510
- (id)_cachedLaunchIcon:(id)arg1;	// IMP=0x00000001000952c4
- (void)outputRequestFinished:(id)arg1;	// IMP=0x0000000100095284
- (void)_outputRequestFinished:(id)arg1;	// IMP=0x0000000100094bb8
- (double)_alternativeKeyActivateTime;	// IMP=0x0000000100094b44
- (id)_updateTouchContainerForElement:(id)arg1 playSound:(_Bool)arg2;	// IMP=0x0000000100094970
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x00000001000948f0
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4 isProtectedApp:(_Bool)arg5;	// IMP=0x0000000100094870
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 canSetAsCurrentElement:(_Bool)arg4 shouldPlayGuideWireSound:(_Bool)arg5 isProtectedApp:(_Bool)arg6 includeHint:(_Bool)arg7 boundaryHit:(_Bool)arg8;	// IMP=0x000000010009376c
- (id)_getSpeakableContainerForContainer:(id)arg1;	// IMP=0x0000000100093630
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4;	// IMP=0x00000001000935c4
- (_Bool)_addElementCommunityNameIfNeededToRequest:(id)arg1 oldElementCommunity:(id)arg2 newElementCommunity:(id)arg3;	// IMP=0x0000000100093308
- (id)_echoDifferentTouchContainer:(id)arg1 forEvent:(id)arg2;	// IMP=0x00000001000930dc
- (void)_drawTouchContainerFrame;	// IMP=0x00000001000930cc
- (void)_echoNoElementForEvent:(id)arg1;	// IMP=0x0000000100092f84
- (void)_echoSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100092f08
- (void)_handleMapSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100092868
- (void)_addFormattedStringToRequest:(id)arg1 formattedString:(id)arg2 withElement:(id)arg3;	// IMP=0x0000000100092694
- (void)_switchToOtherRoad;	// IMP=0x00000001000924f8
- (void)_processPassthroughAllowedWithEvent:(id)arg1 initialTouch:(_Bool)arg2;	// IMP=0x00000001000922cc
- (void)_finishPassthroughMode;	// IMP=0x0000000100092258
- (void)_echoStatusBarStatus:(id)arg1;	// IMP=0x0000000100092158
- (_Bool)_echoLineInElement:(id)arg1 forEvent:(id)arg2 forDifferentElement:(_Bool)arg3;	// IMP=0x0000000100091670
- (void)_setLastSeenLineAndColumn:(id)arg1;	// IMP=0x0000000100091644
- (void)_outputDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x00000001000915cc
- (id)_checkDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x0000000100091280
- (_Bool)_shouldDismissKeyboardForMovingTooFarAlongYAxisWithEvent:(id)arg1;	// IMP=0x00000001000911bc
- (void)_handleTapAndHoldEventMonitor:(id)arg1;	// IMP=0x00000001000910f0
- (void)_continuousPathIdleTimer:(id)arg1;	// IMP=0x0000000100090e4c
- (void)_handleKeyboardContinuousPathDidBegin:(id)arg1;	// IMP=0x0000000100090d9c
- (void)_handleTracking:(id)arg1;	// IMP=0x0000000100090d90
- (id)_handleProtectedAppLogicForEvent:(id)arg1 element:(id)arg2 point:(struct CGPoint)arg3;	// IMP=0x00000001000909f4
- (id)_currentMedusaApplications;	// IMP=0x0000000100090980
- (id)_copySideAppDividerElementIfApplicableForPoint:(struct CGPoint)arg1;	// IMP=0x00000001000908f8
- (id)_sideAppDividerElement;	// IMP=0x0000000100090844
- (_Bool)_isPoint:(struct CGPoint)arg1 withinRangeForDividerElement:(id)arg2;	// IMP=0x0000000100090688
- (void)setDirectInteractionElement:(id)arg1;	// IMP=0x0000000100090648
- (void)_setDirectInteractionElement:(id)arg1;	// IMP=0x00000001000904c4
- (_Bool)_continueTrackingKeyboardKey:(id)arg1;	// IMP=0x0000000100090378
- (_Bool)_continueTrackingRoadElementWithPoint:(struct CGPoint)arg1;	// IMP=0x0000000100090304
- (void)_handleToggleSideApp:(id)arg1;	// IMP=0x0000000100090300
- (void)_handleToggleSideAppIfAvailableInGestures:(id)arg1;	// IMP=0x00000001000902fc
- (void)_handleNextKeyboardLanguage:(id)arg1;	// IMP=0x00000001000902e4
- (void)_handleOpenVoiceOverOptions:(id)arg1;	// IMP=0x0000000100090264
- (void)_handleSwitchToRightElementCommunity:(id)arg1;	// IMP=0x00000001000901c8
- (void)_handleSwitchToLeftElementCommunity:(id)arg1;	// IMP=0x000000010009012c
- (void)_handleTopEdgePanLong:(id)arg1;	// IMP=0x000000010009004c
- (void)_handleTopEdgePanShort:(id)arg1;	// IMP=0x0000000100090048
- (void)_handleBottomEdgePanLong:(id)arg1;	// IMP=0x0000000100090044
- (void)_handleBottomEdgePanShort:(id)arg1;	// IMP=0x0000000100090040
- (void)_handleBottomEdgePanDown:(id)arg1;	// IMP=0x000000010009003c
- (void)_handleEdgeSwipeBottom:(id)arg1;	// IMP=0x000000010008fff0
- (void)_handleEdgeSwipeTop:(id)arg1;	// IMP=0x000000010008ffa4
- (void)_handleEdgeSwipeLeft:(id)arg1;	// IMP=0x000000010008ffa0
- (void)_handleEdgeSwipeRight:(id)arg1;	// IMP=0x000000010008ff9c
- (void)_handleSwitchToNextElementCommunity:(id)arg1;	// IMP=0x000000010008ff88
- (void)_handleSwitchToPreviousElementCommunity:(id)arg1;	// IMP=0x000000010008ff74
- (void)_handleSwitchToElementCommunityPrevious:(_Bool)arg1 event:(id)arg2;	// IMP=0x000000010008fbac
- (id)_allElementCommunitiesWithFocusedApplications:(id)arg1;	// IMP=0x000000010008fa64
- (id)_additionalElementCommunities;	// IMP=0x000000010008f848
- (id)_elementToFocusWhenSwitchingToElementCommunity:(id)arg1;	// IMP=0x000000010008f74c
- (void)_endNativeSliding:(_Bool)arg1;	// IMP=0x000000010008f698
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3 lastSeenContextDescriptors:(id)arg4;	// IMP=0x000000010008f58c
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x000000010008f530
- (void)updateTitleElementLabels:(id)arg1;	// IMP=0x000000010008f124
- (_Bool)shouldElement:(id)arg1 beCombined:(id)arg2 combineLinks:(_Bool)arg3;	// IMP=0x000000010008ef90
- (_Bool)elementEligibleToFindTitleElement:(id)arg1;	// IMP=0x000000010008eedc
- (void)_handleOutputElementSummary:(id)arg1;	// IMP=0x000000010008e570
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1 explicitUserRequest:(_Bool)arg2;	// IMP=0x000000010008e314
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1;	// IMP=0x000000010008e304
- (void)_visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3 event:(id)arg4 visionOptions:(id)arg5;	// IMP=0x000000010008dfc4
- (void)visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3 event:(long long)arg4 visionOptions:(id)arg5;	// IMP=0x000000010008deb8
- (void)_handleOutputFocusedElementSummary:(id)arg1;	// IMP=0x000000010008dcdc
- (void)_handleSelectedTextOutput:(id)arg1;	// IMP=0x000000010008dad0
- (void)_handleScrollToPoint:(id)arg1;	// IMP=0x000000010008d9f0
- (void)_handleScrollDownPage:(id)arg1;	// IMP=0x000000010008d960
- (void)_handleScrollByPage:(id)arg1;	// IMP=0x000000010008d95c
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2;	// IMP=0x000000010008d854
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2 forward:(_Bool)arg3;	// IMP=0x000000010008d6e0
- (id)_nearestScrollableElement:(id)arg1;	// IMP=0x000000010008d6ac
- (id)_nearestWebElement:(id)arg1;	// IMP=0x000000010008d678
- (void)_handleAppSwitch:(id)arg1;	// IMP=0x000000010008d5ec
- (void)_handleSpeechRotorValueChange:(id)arg1;	// IMP=0x000000010008d4b8
- (void)_handleSpeechRotorChange:(id)arg1;	// IMP=0x000000010008d3bc
- (void)_handleUsePitchChange:(_Bool)arg1;	// IMP=0x000000010008d2cc
- (void)_handleAudioDuckingChange:(_Bool)arg1;	// IMP=0x000000010008d15c
- (void)_handleAudioDestination:(_Bool)arg1;	// IMP=0x000000010008d050
- (void)_handleActivityRotorChange:(_Bool)arg1;	// IMP=0x000000010008cd84
- (void)_handleSpeechPhoneticsChange:(_Bool)arg1;	// IMP=0x000000010008cc28
- (void)_handleTypingEchoChange:(_Bool)arg1;	// IMP=0x000000010008ca68
- (void)_handleSpeechPunctuationChange:(_Bool)arg1;	// IMP=0x000000010008c5a4
- (void)_handleSoundRotorChange:(_Bool)arg1;	// IMP=0x000000010008c494
- (void)_handleSpeechRateChange:(_Bool)arg1;	// IMP=0x000000010008c30c
- (void)_handleEscape:(id)arg1;	// IMP=0x000000010008bd38
- (void)_handleStartHelpMode:(id)arg1;	// IMP=0x000000010008bbdc
- (_Bool)isOnElementManagerThread;	// IMP=0x000000010008bbcc
- (id)currentApplications;	// IMP=0x000000010008bb70
- (id)currentElement;	// IMP=0x000000010008bb28
- (id)_valueForKeyPathOnElementManagerThread:(id)arg1;	// IMP=0x000000010008ba54
- (void)__retrieveValueForKeyPath:(id)arg1 intoPointedToLocation:(id)arg2 semaphore:(id)arg3;	// IMP=0x000000010008b99c
- (struct CGRect)currentLineFrame;	// IMP=0x000000010008b988
- (id)_currentElement;	// IMP=0x000000010008b980
- (struct _NSRange)_highlightedCharacterRange;	// IMP=0x000000010008b974
- (_Bool)customRotorActionsEqual:(id)arg1 otherActions:(id)arg2 ignoreDragItems:(_Bool)arg3;	// IMP=0x000000010008b924
- (void)processExternalElementUpdate;	// IMP=0x000000010008b900
- (void)_processExternalElementUpdate;	// IMP=0x000000010008b820
- (void)processExternalScrollToVisible:(struct CGPoint)arg1;	// IMP=0x000000010008b7a0
- (void)_processExternalScrollToVisible:(id)arg1;	// IMP=0x000000010008b5ec
- (_Bool)mlElement:(id)arg1 sharesLabel:(id)arg2;	// IMP=0x000000010008b3a4
- (void)_updateSwipeFrames;	// IMP=0x000000010008b0b0
- (void)_updateAnyThreadElementAccess;	// IMP=0x000000010008b078
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2 shouldResetTextSelection:(_Bool)arg3 shouldResetCharacterRange:(_Bool)arg4 ignoreIsAccessibilityElementCheck:(_Bool)arg5;	// IMP=0x0000000100089d94
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2;	// IMP=0x0000000100089d7c
- (_Bool)_setCurrentElement:(id)arg1;	// IMP=0x0000000100089d6c
- (_Bool)_isElementValidForFirstResponder:(id)arg1;	// IMP=0x0000000100089ccc
- (_Bool)_updateWithMostRecentElementCommunity:(id)arg1;	// IMP=0x0000000100089c30
- (void)_updateMostRecentElementCommunity;	// IMP=0x0000000100089be0
- (_Bool)_languageRotorItemsContainLanguage:(id)arg1;	// IMP=0x00000001000899f0
- (void)_updateExternalAccessory:(id)arg1;	// IMP=0x00000001000899ec
- (void)_resetQuickNavState;	// IMP=0x0000000100089874
- (void)_activateAlternativeKeyboardKey:(id)arg1;	// IMP=0x000000010008978c
- (void)_dismissAlternativeKeyboardKeys;	// IMP=0x000000010008963c
- (void)_handleElementMoveToStatusBar:(id)arg1;	// IMP=0x0000000100089638
- (void)_handleContainerMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100089308
- (void)_handleGuideElementMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100089064
- (void)_handleContainerMovement:(id)arg1;	// IMP=0x0000000100088fd0
- (void)_handleIntraContainerMovement:(id)arg1;	// IMP=0x0000000100088e7c
- (void)_handleImageDescriptionsToggle:(long long)arg1;	// IMP=0x0000000100088b98
- (CDStruct_a70f6672)_appInfoForCurrentElement;	// IMP=0x0000000100088984
- (void)_handleDataComprehensionAction:(long long)arg1 event:(id)arg2;	// IMP=0x0000000100088838
- (id)availableDataComprehensionActionsForElement:(id)arg1;	// IMP=0x00000001000887e4
- (void)_handleCustomRotorAction:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010008849c
- (void)_handleCustomRotorContent:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010008817c
- (id)_currentCustomActionCategory;	// IMP=0x00000001000880e4
- (id)_currentCustomActions;	// IMP=0x0000000100087fa4
- (id)_currentCachedCustomActionCategories;	// IMP=0x0000000100087f0c
- (id)_customActionsAddingDragCancelActionIfNecessaryForActions:(id)arg1;	// IMP=0x0000000100087ef4
- (void)_handleValidatedCustomActionMovementThroughActions:(id)arg1 forEvent:(id)arg2 inDirection:(long long)arg3;	// IMP=0x0000000100087c94
- (void)_moveFocusToUpdatedRange:(struct _NSRange)arg1 element:(id)arg2 searchType:(long long)arg3;	// IMP=0x000000010008787c
- (void)_handlePublicCustomRotorMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100086e30
- (_Bool)_customRotorTypeRequiresFirstElementProcessing:(id)arg1;	// IMP=0x0000000100086e18
- (id)webCustomRotorDictionary:(id)arg1 direction:(long long)arg2 forElement:(id)arg3;	// IMP=0x0000000100086b98
- (void)_handleVerticalMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100086774
- (void)_handleShowEditingHUD:(id)arg1;	// IMP=0x00000001000866a0
- (void)_handleRealtimeElementMovement:(id)arg1;	// IMP=0x00000001000863b0
- (void)_handleElementMovement:(id)arg1;	// IMP=0x0000000100085ac0
- (void)_handleMoveToElementBelow:(id)arg1;	// IMP=0x0000000100085ab0
- (void)_handleMoveToElementAbove:(id)arg1;	// IMP=0x0000000100085aa0
- (_Bool)_moveElementToFlowTo:(id)arg1;	// IMP=0x0000000100085844
- (void)_setNearestElementMovingForward:(_Bool)arg1;	// IMP=0x0000000100085740
- (id)_sonarElementInForwardDirection:(_Bool)arg1 limit:(long long)arg2;	// IMP=0x0000000100085730
- (id)_sonarElementFromPoint:(struct CGPoint)arg1 inForwardDirection:(_Bool)arg2 limit:(long long)arg3;	// IMP=0x0000000100084fd8
- (_Bool)_prepareElementOutputHeaders:(id)arg1 currentElement:(id)arg2 request:(id)arg3;	// IMP=0x0000000100084bdc
- (_Bool)speakTableHeadersForElement:(id)arg1;	// IMP=0x0000000100084b24
- (_Bool)speakTableRowAndColumnForElement:(id)arg1;	// IMP=0x0000000100084a6c
- (_Bool)determineFullImageDescriptionsEnabled:(id)arg1;	// IMP=0x00000001000848f8
- (_Bool)determineSceneDetectionsEnabled:(id)arg1;	// IMP=0x00000001000846c8
- (long long)modifierKeyChoiceForElement:(id)arg1;	// IMP=0x0000000100084610
- (id)determineActivityForElement:(id)arg1;	// IMP=0x0000000100084608
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3 language:(id)arg4;	// IMP=0x0000000100083c4c
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3;	// IMP=0x0000000100083c3c
- (void)_handlePerformTextOperation:(id)arg1;	// IMP=0x0000000100083a6c
- (void)_handleNextTextOperationInDirection:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100083414
- (id)_currentResponder;	// IMP=0x0000000100083330
- (id)getCurrentElement;	// IMP=0x0000000100083324
- (void)refreshBraille;	// IMP=0x00000001000832cc
- (void)_handleScreenUnlock;	// IMP=0x00000001000832a8
- (void)_handleScreenLock:(id)arg1;	// IMP=0x0000000100082ee4
- (void)_handlePressActionResultAtTime:(id)arg1;	// IMP=0x0000000100082c94
- (void)_simulatedPressOutputTimer:(id)arg1;	// IMP=0x00000001000826f8
- (void)_handleContextMenuStatusNotification:(id)arg1;	// IMP=0x00000001000825f4
- (void)_handlePauseSpeechAndHapticsNotification:(id)arg1;	// IMP=0x0000000100082420
- (void)_handleDuckingDisabling:(id)arg1;	// IMP=0x0000000100082264
- (_Bool)_handleSimulatedLongPress:(id)arg1;	// IMP=0x0000000100082104
- (void)_reallySimulateLongPressForElement:(id)arg1;	// IMP=0x0000000100081ed0
- (void)_postBrailleHomeButtonPress;	// IMP=0x0000000100081eb8
- (void)_handlePerformHomeButtonPress:(id)arg1;	// IMP=0x0000000100081e44
- (void)_handleStartSiri:(id)arg1;	// IMP=0x0000000100081dfc
- (void)_handleToggleCaptionPanel:(id)arg1;	// IMP=0x0000000100081ce4
- (void)_handleToggleScreenCurtain:(id)arg1;	// IMP=0x0000000100081ca0
- (void)_handleToggleRotationCapability:(id)arg1;	// IMP=0x0000000100081ae4
- (void)_handleToggleMute:(id)arg1;	// IMP=0x0000000100081aa0
- (void)_simulatedForceTouchLift;	// IMP=0x00000001000818c8
- (_Bool)_canActivateTapticTime;	// IMP=0x00000001000818c0
- (void)_handleWatchWakeTripleTap:(id)arg1;	// IMP=0x0000000100081808
- (void)_handleWatchWakeDoubleTap:(id)arg1;	// IMP=0x0000000100081750
- (void)_handleWatchWakeTap:(id)arg1;	// IMP=0x0000000100081630
- (void)_handleSimulatedForceTouchEvent:(id)arg1;	// IMP=0x000000010008146c
- (void)_sendAutomationTouchCommand:(unsigned int)arg1 location:(struct CGPoint)arg2;	// IMP=0x00000001000813a8
- (void)_handleAutomationGeneratedChordChangeEvent:(id)arg1;	// IMP=0x0000000100081054
- (void)_handleAutomationGeneratedTouchCancelEvent:(id)arg1;	// IMP=0x0000000100080fb0
- (void)_handleAutomationGeneratedTouchMoveEvent:(id)arg1;	// IMP=0x0000000100080e9c
- (void)_handleAutomationGeneratedTouchDownEvent:(id)arg1;	// IMP=0x0000000100080d04
- (void)_handleAutomationGeneratedTouchUpEvent:(id)arg1;	// IMP=0x0000000100080bb8
- (void)_handleSimpleTap:(id)arg1;	// IMP=0x0000000100080980
- (_Bool)_shouldSendTapStraightToSystem;	// IMP=0x0000000100080978
- (void)_handlePerformDataComprehensionAction:(id)arg1;	// IMP=0x0000000100080974
- (void)_handlePerformCustomAction:(id)arg1;	// IMP=0x00000001000806d8
- (id)actionElement;	// IMP=0x00000001000806cc
- (void)_disableQuickNavStateTemporarily;	// IMP=0x00000001000805ac
- (void)_handlePerformPressAction:(id)arg1;	// IMP=0x000000010007f4f0
- (_Bool)_updateCursorAfterPressForElement:(id)arg1 currentElementRange:(struct _NSRange)arg2 request:(id)arg3 didHaveCursor:(_Bool)arg4 doesHaveCursor:(_Bool)arg5;	// IMP=0x000000010007f0e0
- (void)_updateLastFirstResponderChangedTime;	// IMP=0x000000010007f0b8
- (void)_updateCurrentWordContextForBook:(id)arg1;	// IMP=0x000000010007efac
- (_Bool)_useLineFrameBoundsForTouch:(id)arg1;	// IMP=0x000000010007eedc
- (void)_handleTripleTap:(id)arg1;	// IMP=0x000000010007eed8
- (void)_handleDoubleTap:(id)arg1;	// IMP=0x000000010007eecc
- (void)_handleStartStopToggle:(id)arg1;	// IMP=0x000000010007ee70
- (void)_handleToggleCrownNavigation:(id)arg1;	// IMP=0x000000010007ed58
@property(readonly, nonatomic) _Bool shouldSnarfCrown;
- (void)_handleLabelElement:(id)arg1;	// IMP=0x000000010007ebe0
- (void)_handleMonitorElement:(id)arg1;	// IMP=0x000000010007e69c
- (void)_resetElementLabel;	// IMP=0x000000010007e62c
- (void)_handleLabelElementAcceptedNotification:(id)arg1;	// IMP=0x000000010007e4e4
- (void)_handleAudioDuckingToggle:(id)arg1;	// IMP=0x000000010007e4d4
- (_Bool)_savedDescriptionToPhoto:(id)arg1 description:(id)arg2 element:(id)arg3;	// IMP=0x000000010007e368
- (void)_handleWebTextAvailableNotification:(id)arg1;	// IMP=0x000000010007e2d8
- (void)_handleWebSearchResult:(long long)arg1 withEvent:(id)arg2;	// IMP=0x000000010007e27c
- (void)_handleWebTextMatchSelectedNotification:(id)arg1;	// IMP=0x000000010007e078
- (_Bool)_shouldMoveToLastWebFormControl;	// IMP=0x000000010007df8c
- (void)_handleWebFormControlInteractionEndNotification:(id)arg1;	// IMP=0x000000010007df48
- (void)_handleWebFormControlInteractionStartNotification:(id)arg1;	// IMP=0x000000010007dea8
- (void)_handleScreenWillWakeNotification:(id)arg1;	// IMP=0x000000010007de20
- (void)_handleRealtimeElementUpdate:(id)arg1;	// IMP=0x000000010007dd90
- (void)_handleScreenWillChangeNotification:(id)arg1;	// IMP=0x000000010007dcd0
- (void)_handleFocusedElementContentChangeNotification:(id)arg1;	// IMP=0x000000010007dc58
- (void)_handleBarcodeVisibilityNotification:(id)arg1;	// IMP=0x000000010007db34
- (void)_handleCameraCenteredNotification:(id)arg1;	// IMP=0x000000010007dae4
- (void)_handleKBPopupVariantsNotification:(id)arg1;	// IMP=0x000000010007d9c4
- (void)_handleAdjustValue:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000010007d754
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3 borderHitIfNoChange:(_Bool)arg4;	// IMP=0x000000010007d3dc
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3;	// IMP=0x000000010007d378
- (_Bool)_handleNextAutofill:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000010007cfc8
- (void)_finishHandlingNextAutofillWithElement:(id)arg1;	// IMP=0x000000010007cf08
- (void)_handlePerformTapAutofill:(id)arg1;	// IMP=0x000000010007cd30
- (void)_handleOutputTextStyle:(id)arg1;	// IMP=0x000000010007cb0c
- (void)_handleSearchRotorSetMathPosition:(id)arg1;	// IMP=0x000000010007c8d8
- (id)_currentRotorSelection;	// IMP=0x000000010007c768
- (void)_handleMathGranularMovement:(long long)arg1 event:(id)arg2;	// IMP=0x000000010007c5a4
- (id)_treePositionForMathSegment:(id)arg1;	// IMP=0x000000010007c538
- (void)_handleUpdatedMathElementIndex;	// IMP=0x000000010007c464
- (void)_refreshMathSegmentsIfNeeded;	// IMP=0x000000010007c454
- (void)_refreshMathSegmentsIfNeededWithPreferredDirection:(long long)arg1;	// IMP=0x000000010007c190
- (unsigned long long)_currentMathGranularityLevel;	// IMP=0x000000010007c154
- (void)_resetMathGranularMovementState;	// IMP=0x000000010007c120
- (void)_outputNavigationDirectionMode:(long long)arg1;	// IMP=0x000000010007c058
- (long long)_newNavigationDirectionModeForRotorDirection:(long long)arg1;	// IMP=0x000000010007bfbc
- (void)_handleNavigationDirectionChangeWithDirection:(long long)arg1;	// IMP=0x000000010007befc
- (void)_handleTrackingDetailMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x000000010007be30
- (void)_handleZoomMovement:(long long)arg1 event:(id)arg2;	// IMP=0x000000010007bc6c
- (CDStruct_912cb5d2)_handleUserCharacterSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007ba90
- (struct _NSRange)_characterRangeWithFaultTolerance:(long long)arg1 forward:(_Bool)arg2 element:(id)arg3;	// IMP=0x000000010007b9f0
- (CDStruct_912cb5d2)_handleUserAllSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007b96c
- (CDStruct_912cb5d2)_handleUserPageSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007b8b8
- (CDStruct_912cb5d2)_handleUserLineSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007b68c
- (struct _NSRange)_lineRangeWithFaultTolerance:(long long)arg1 forward:(_Bool)arg2 element:(id)arg3;	// IMP=0x000000010007b60c
- (CDStruct_912cb5d2)_handleUserWordSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007b4c0
- (void)_handleUserSelection:(id)arg1;	// IMP=0x000000010007b4bc
- (void)updateCursorFrameAfterLift;	// IMP=0x000000010007b498
- (void)_updateCursorFrameAfterLift;	// IMP=0x000000010007b3e8
- (void)_handleStartStopTextSelection:(id)arg1;	// IMP=0x000000010007b2c8
- (void)_handleMisspelledWordRotorAction:(_Bool)arg1;	// IMP=0x000000010007aee4
- (void)_processMisspelledWordTextReplacement;	// IMP=0x000000010007ac70
- (void)_handleTextRotorSelectionAction:(_Bool)arg1;	// IMP=0x000000010007abfc
- (void)_handleWebSelection:(id)arg1;	// IMP=0x000000010007abf8
- (void)_outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2;	// IMP=0x000000010007a7cc
- (void)_handleOutputCharacterPhonetically:(id)arg1;	// IMP=0x000000010007a638
- (void)_handleOutputRowHeader:(id)arg1;	// IMP=0x000000010007a628
- (void)_handleOutputColumnHeader:(id)arg1;	// IMP=0x000000010007a618
- (void)_handleOutputColumnOrRowHeader:(id)arg1 row:(_Bool)arg2;	// IMP=0x000000010007a37c
- (void)_handleOutputColumnContents:(id)arg1;	// IMP=0x000000010007a36c
- (void)_handleOutputRowContents:(id)arg1;	// IMP=0x000000010007a35c
- (void)_handleOutputTableRowColumnInfo:(id)arg1;	// IMP=0x000000010007a224
- (void)_handleOutputCellRowColumnInfo:(id)arg1;	// IMP=0x000000010007a0e8
- (void)_handleOutputColumnOrRowContents:(id)arg1 row:(_Bool)arg2;	// IMP=0x0000000100079e8c
- (void)_handleOutputCharacter:(id)arg1;	// IMP=0x0000000100079d70
- (id)_retrieveCurrentCharacterFromEditableElement;	// IMP=0x0000000100079c44
- (void)_handleRowMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100079990
- (void)_handleGenericTextSegmentMovement:(id)arg1 direction:(long long)arg2 granulary:(long long)arg3;	// IMP=0x00000001000797b4
- (void)_handleTextWordMovement:(id)arg1;	// IMP=0x000000010007941c
- (void)_handleTextDocumentMovement:(id)arg1;	// IMP=0x0000000100079294
- (void)_handleRotorTextSelectionMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000791a0
- (void)_handleAdjustTextSelectionSegmentType:(id)arg1;	// IMP=0x000000010007910c
- (void)_handleParagraphMovement:(id)arg1;	// IMP=0x0000000100079074
- (void)_handleSentenceMovement:(id)arg1;	// IMP=0x0000000100078fdc
- (void)_handleLineMovement:(id)arg1;	// IMP=0x0000000100078f44
- (void)_handleLineMovementInWeb:(id)arg1 direction:(long long)arg2 existingRequest:(id)arg3;	// IMP=0x0000000100077c34
- (void)_finishHandlingLineMovementInWeb:(id)arg1 direction:(id)arg2 withCurrentElement:(id)arg3 markerArray:(id)arg4 textObjects:(id)arg5 existingRequest:(id)arg6;	// IMP=0x00000001000779cc
- (void)_handleWordMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010007786c
- (void)_handleLetterMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000776e8
- (void)_handleWordMovement:(id)arg1;	// IMP=0x0000000100077640
- (void)_handleCharacterMovement:(id)arg1;	// IMP=0x0000000100077598
- (void)_moveCursorForElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3;	// IMP=0x0000000100076e98
- (void)_handleCursorMovementByTextSegment:(id)arg1;	// IMP=0x0000000100076d8c
- (void)_handleReadWord:(id)arg1;	// IMP=0x00000001000768a0
- (id)_phoneticStringForLetter:(id)arg1 language:(id)arg2;	// IMP=0x0000000100076794
- (void)_handleReadLine:(id)arg1;	// IMP=0x0000000100076560
- (void)_handleOutputLineCount:(id)arg1;	// IMP=0x0000000100076350
- (void)_handleReadItemHint:(id)arg1;	// IMP=0x0000000100076208
- (void)_handleReadURL:(id)arg1;	// IMP=0x0000000100076094
- (id)_computeChangedFontAttributes:(id)arg1 storedAttributes:(id)arg2 haveMisspellCheck:(_Bool)arg3;	// IMP=0x0000000100074c60
- (id)_orderedMonitoredFontAttributes;	// IMP=0x0000000100074adc
- (id)_fontDisplayNameForFontName:(id)arg1;	// IMP=0x0000000100074a38
- (void)_handleRotorTypingModeMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100074908
- (void)_handleRotorContinusPathChange:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100074798
- (long long)_adjustedRotorIndex:(long long)arg1 inDirection:(long long)arg2 rotorItems:(id)arg3;	// IMP=0x000000010007474c
- (void)_handleRotorBrailleAutoAdvanceMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100074728
- (void)_handleRotorBrailleLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x00000001000745ac
- (void)_handleRotorLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100073df0
- (id)_languageNameForCode:(id)arg1;	// IMP=0x0000000100073bc4
- (void)_resetRotorTextNavigation;	// IMP=0x0000000100073bbc
- (void)_resetOtherTapInputModes;	// IMP=0x0000000100073b60
- (void)_resetSearchType;	// IMP=0x0000000100073b50
- (void)_resetReadAllRequest;	// IMP=0x0000000100073b40
- (void)handleSearchRotorDown:(id)arg1;	// IMP=0x0000000100073b2c
- (void)handleSearchRotorUp:(id)arg1;	// IMP=0x0000000100073b18
- (void)_handleSpeakScreen:(id)arg1;	// IMP=0x0000000100073b14
- (void)_handleSingleLetterSearch:(id)arg1;	// IMP=0x000000010007389c
- (void)_handleSearchRotorMovementWithoutRotorUpdateInDirectionUp:(_Bool)arg1 event:(id)arg2;	// IMP=0x0000000100073490
- (void)_handleDirectElementSearch:(id)arg1;	// IMP=0x0000000100072b70
- (void)_handleColumnMovement:(id)arg1;	// IMP=0x00000001000729dc
- (void)_handleSearchRotorMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x00000001000728cc
- (void)_handleElementSearch:(id)arg1 rotorType:(long long)arg2 direction:(long long)arg3;	// IMP=0x00000001000727c4
- (CDUnknownBlockType)_copyRangeMatchBlockForRotorType:(long long)arg1;	// IMP=0x0000000100072658
- (void)_customPublicRotorMatchForType:(id)arg1 range:(struct _NSRange *)arg2 element:(id *)arg3 direction:(long long)arg4 lastSearchUUID:(id *)arg5;	// IMP=0x00000001000723f0
- (CDUnknownBlockType)_copyMatchBlockForRotorType:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x00000001000720e0
- (CDUnknownBlockType)_copyMatchBlockSearchField;	// IMP=0x00000001000720a0
- (CDUnknownBlockType)_copyMatchBlockTextField;	// IMP=0x0000000100072060
- (CDUnknownBlockType)_copyMatchBlockDifferent;	// IMP=0x0000000100071f14
- (CDUnknownBlockType)_copyMatchBlockSimilar;	// IMP=0x0000000100071dc8
- (CDUnknownBlockType)_copyMatchBlockSameHeading;	// IMP=0x0000000100071c88
- (CDUnknownBlockType)_copyMatchBlockSameBlockquote;	// IMP=0x0000000100071b90
- (CDUnknownBlockType)_copyMatchBlockBlockquote;	// IMP=0x0000000100071b5c
- (unsigned long long)filterTraitsByPriority:(unsigned long long)arg1;	// IMP=0x0000000100071a80
- (CDUnknownBlockType)_copyMatchBlockButton;	// IMP=0x00000001000719b4
- (CDUnknownBlockType)_copyMatchBlockInternalLink;	// IMP=0x0000000100071918
- (CDUnknownBlockType)_copyMatchBlockLandmarkStart;	// IMP=0x000000010007185c
- (CDUnknownBlockType)_copyMatchBlockArticleStart;	// IMP=0x00000001000717a0
- (CDUnknownBlockType)_copyMatchBlockTableStart;	// IMP=0x00000001000716e4
- (CDUnknownBlockType)_copyMatchBlockFrameStart;	// IMP=0x0000000100071628
- (CDUnknownBlockType)_copyMatchBlockListStart;	// IMP=0x00000001000714ec
- (CDUnknownBlockType)_copyMatchBlockFormElement;	// IMP=0x0000000100071434
- (CDUnknownBlockType)_copyMatchBlockStaticText;	// IMP=0x0000000100071264
- (CDUnknownBlockType)_copyMatchBlockLink;	// IMP=0x0000000100071224
- (CDUnknownBlockType)_copyMatchBlockNonVisitedLink;	// IMP=0x000000010007118c
- (CDUnknownBlockType)_copyMatchBlockForHeadingLevel:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x000000010007100c
- (CDUnknownBlockType)_copyMatchBlockHeader;	// IMP=0x0000000100070f80
- (CDUnknownBlockType)_copyMatchBlockVisitedLink;	// IMP=0x0000000100070f30
- (CDUnknownBlockType)_copyMatchBlockImage;	// IMP=0x0000000100070ef0
- (CDUnknownBlockType)_copyMatchBlockAnyElement;	// IMP=0x0000000100070b00
- (CDUnknownBlockType)_copyMatchBlockForTextAttribute:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x0000000100070ac0
- (CDUnknownBlockType)_copyMatchBlockSearchText;	// IMP=0x000000010007093c
- (void)_elementFetchFoundElement:(id)arg1;	// IMP=0x000000010006fec0
- (_Bool)_isShowingTodayViewForPhone;	// IMP=0x000000010006fe08
- (void)_echoSearchTypeNotFound:(long long)arg1;	// IMP=0x000000010006fc54
- (void)_echoSearchNavigationElement:(id)arg1 forRangeAdjustment:(_Bool)arg2;	// IMP=0x000000010006fa60
- (void)_echoFlickNavigationElement:(id)arg1;	// IMP=0x000000010006f7ec
- (_Bool)_touchContainerDidChangeForElement:(id)arg1 oldElement:(id)arg2;	// IMP=0x000000010006f734
- (void)_updateContextDescriptors;	// IMP=0x000000010006f4b0
- (void)elementFetchFound:(id)arg1;	// IMP=0x000000010006f204
- (void)_handleSearchRotorRight:(id)arg1;	// IMP=0x000000010006f1f0
- (void)_handleSearchRotorLeft:(id)arg1;	// IMP=0x000000010006f1dc
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2 notifyUser:(_Bool)arg3;	// IMP=0x000000010006ee5c
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2;	// IMP=0x000000010006ee4c
- (void)_outputRotorTypeCount;	// IMP=0x000000010006ece4
- (void)setCurrentElementToWebEditableAncestor;	// IMP=0x000000010006ec40
- (id)webEditableAncestor:(id)arg1;	// IMP=0x000000010006eb34
- (_Bool)_rotorTypeSupportsCounting:(long long)arg1;	// IMP=0x000000010006eb0c
- (void)elementsCounted:(long long)arg1;	// IMP=0x000000010006e534
- (int)cancelElementCountOutput;	// IMP=0x000000010006e51c
- (_Bool)forceRotorOffGesturedTextInputIfNeeded:(_Bool)arg1;	// IMP=0x000000010006e514
- (void)setElementRotorToType:(long long)arg1 saveToPreferences:(_Bool)arg2 userInitiated:(_Bool)arg3;	// IMP=0x000000010006e4b4
- (_Bool)_inMisspelledWordRotor;	// IMP=0x000000010006e4a4
- (void)setRotor:(id)arg1 toType:(long long)arg2 saveToPreferences:(_Bool)arg3 userInitiated:(_Bool)arg4;	// IMP=0x000000010006e488
- (void)setCurrentTextSelectionSegmentType:(long long)arg1;	// IMP=0x000000010006e440
- (long long)currentRotorType;	// IMP=0x000000010006e430
- (void)_handleSearchRotorEcho:(id)arg1;	// IMP=0x000000010006e3fc
- (void)_updateRotorForCurrentElement;	// IMP=0x000000010006e380
- (void)_updateRotorForCurrentElement:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010006e1d8
- (void)updateRotorForCurrentElement:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010006e118
- (void)_handleStartTextSearch:(id)arg1;	// IMP=0x000000010006df88
- (void)_handleOngoingTextSearch:(id)arg1;	// IMP=0x000000010006de7c
- (_Bool)isItemChooserVisible;	// IMP=0x000000010006de74
- (void)_handleItemChooserSelection:(id)arg1;	// IMP=0x000000010006dd8c
- (void)_didDismissItemChooser;	// IMP=0x000000010006dd84
- (void)_closeItemChooser;	// IMP=0x000000010006dd0c
- (void)_handleItemChooserSelectionMade:(id)arg1;	// IMP=0x000000010006d968
- (void)_handleMoveToNativeFocusedElement:(id)arg1;	// IMP=0x000000010006d80c
- (void)_handleMoveToLinkedUI:(id)arg1;	// IMP=0x000000010006d3e0
- (long long)_customActionIndex;	// IMP=0x000000010006d3d8
- (id)_customActionIdentifier;	// IMP=0x000000010006d3d0
- (void)didSearchForOpaqueElement;	// IMP=0x000000010006d3c4
- (void)elementsRetrieved:(id)arg1 finished:(_Bool)arg2;	// IMP=0x000000010006d364
- (void)_elementsRetrieved:(id)arg1 finished:(id)arg2;	// IMP=0x000000010006cda0
- (void)_showItemChooser:(id)arg1;	// IMP=0x000000010006bf10
- (void)_resetItemChooserCache;	// IMP=0x000000010006bef4
- (void)systemServerDied;	// IMP=0x000000010006bed0
- (void)_systemServerDied;	// IMP=0x000000010006bea0
- (void)_resetDirectInteractionCache;	// IMP=0x000000010006bdf8
- (_Bool)inDirectTouchMode;	// IMP=0x000000010006bdc8
- (_Bool)shouldTurnTrackingIntoDirectTouch;	// IMP=0x000000010006bdc0
- (void)setShouldTurnTrackingIntoDirectTouch:(_Bool)arg1;	// IMP=0x000000010006bdb8
- (_Bool)avoidAnnouncingDirectTouchArea;	// IMP=0x000000010006bdb0
- (_Bool)currentElementAllowsDirectTouch;	// IMP=0x000000010006bda8
- (void)_handleDirectTouchExplorationMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006bd84
- (void)_handleHintsSettingMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006bc6c
- (void)_handleDescribedMediaMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006bb24
- (void)_handleDescribeImage:(id)arg1;	// IMP=0x000000010006ba04
- (void)_handleSearchTextEvent:(id)arg1;	// IMP=0x000000010006b6ac
- (void)_endTextSearchMode;	// IMP=0x000000010006b5b8
- (void)_handleCancelSpeaking:(id)arg1;	// IMP=0x000000010006b56c
- (void)_handleToggleSpeaking:(id)arg1;	// IMP=0x000000010006b4c8
- (void)_handlePauseSpeaking:(id)arg1;	// IMP=0x000000010006b47c
- (void)_handleContinueSpeaking:(id)arg1;	// IMP=0x000000010006b434
- (void)_handleReadFromTop:(id)arg1;	// IMP=0x000000010006af04
- (void)_handleCopySpeechToClipboard:(id)arg1;	// IMP=0x000000010006ac04
- (void)_handleReadAll:(id)arg1;	// IMP=0x000000010006aae4
- (void)_handleReadScreenSummary:(id)arg1;	// IMP=0x000000010006a9f8
- (void)_continueReadAllWithElement:(id)arg1 setCurrentElement:(_Bool *)arg2;	// IMP=0x000000010006a538
- (_Bool)_prepareStitchedWebReadAll:(id)arg1 request:(id)arg2 setCurrentElement:(_Bool *)arg3;	// IMP=0x0000000100069be8
- (void)_handleReadAllNextElement;	// IMP=0x0000000100069b48
- (void)_stopReadAll;	// IMP=0x0000000100069ae4
- (void)_handleReadAllBookContent:(id)arg1 fromTop:(_Bool)arg2;	// IMP=0x00000001000695bc
- (_Bool)isReadingAll;	// IMP=0x000000010006959c
- (void)_startReadingBookForNewPage;	// IMP=0x0000000100069360
- (_Bool)_handleBookNavigateOverPageBoundary:(long long)arg1 unit:(long long)arg2;	// IMP=0x000000010006929c
- (void)_handleBookPageFlipAndContinue;	// IMP=0x0000000100069208
- (_Bool)_handleMoreBookContentElements;	// IMP=0x0000000100068ef0
- (void)_echoLineInBookElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100067fb4
- (_Bool)_bookContentElementInteraction:(struct CGPoint)arg1 element:(id)arg2;	// IMP=0x0000000100067e44
- (id)_currentTextLineInBookElement:(_Bool)arg1;	// IMP=0x0000000100067c38
- (id)_convertTextMarkerArrayToString:(id)arg1 addInContentExtras:(_Bool)arg2;	// IMP=0x0000000100067694
- (_Bool)_handleMovementForElementFollowingElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 mode:(long long)arg4;	// IMP=0x0000000100067518
- (void)_handleBookContentMovement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 generateOutput:(_Bool)arg4;	// IMP=0x0000000100066ad4
- (void)_handleCurrentContentReadingLineUpdated:(id)arg1;	// IMP=0x00000001000669ac
- (struct _NSRange)_rangeOfLine:(id)arg1 inBookContent:(id)arg2;	// IMP=0x00000001000667e0
- (void)_setSelectedTextRange:(struct _NSRange)arg1 onElement:(id)arg2 refreshBraille:(_Bool)arg3;	// IMP=0x000000010006673c
- (void)_handleIdle:(id)arg1;	// IMP=0x0000000100066730
- (void)_tvOS_handleIdleAndTrackingEvents:(id)arg1;	// IMP=0x0000000100066650
- (void)_cleanupMapInteractionOnIdle;	// IMP=0x00000001000665c4
- (void)_performTouchTypingKeyPress:(id)arg1;	// IMP=0x000000010006639c
- (_Bool)_isTouchTypingEventTooCloseToEdge:(id)arg1;	// IMP=0x00000001000662c8
- (void)_setPreviousTouchTypingKey:(id)arg1;	// IMP=0x0000000100066274
- (void)_setElementUnitIndexesToEndOfElement:(id)arg1;	// IMP=0x0000000100065f98
- (void)_resetElementUnitIndexes;	// IMP=0x0000000100065f30
- (_Bool)rotorEnabled;	// IMP=0x0000000100065f28
- (void)hideVisualRotor;	// IMP=0x0000000100065eb8
- (void)_hideVisualRotor;	// IMP=0x0000000100065d8c
- (void)_showVisualRotor:(id)arg1 direction:(_Bool)arg2;	// IMP=0x0000000100065b88
- (double)keyboardKeyPenumbra:(id)arg1;	// IMP=0x0000000100065b50
- (void)sendRequest:(id)arg1;	// IMP=0x0000000100065aa0
- (id)_notificationData:(id)arg1 consumingToken:(id)arg2;	// IMP=0x0000000100065998
- (_Bool)_notificationData:(id)arg1 containsToken:(id)arg2;	// IMP=0x00000001000658b0
- (void)handleNotification:(int)arg1 withData:(id)arg2 forElement:(struct __AXUIElement *)arg3;	// IMP=0x0000000100064f68
- (void)_updateStateForNotificationData:(id)arg1;	// IMP=0x0000000100064924
- (void)_notificationThreadCancel;	// IMP=0x0000000100064920
- (void)_pausedSpeechInterrupted:(id)arg1;	// IMP=0x00000001000648ac
- (void)_handleEvent:(id)arg1;	// IMP=0x00000001000640a8
- (_Bool)directTouchModeHandledEvent:(id)arg1;	// IMP=0x0000000100063d7c
- (void)_updateContinuousPathTimeout;	// IMP=0x0000000100063c80
- (void)_monitorElements;	// IMP=0x00000001000635dc
- (id)_monitoredElementCachedText:(id)arg1;	// IMP=0x0000000100063534
- (id)_similarMonitoredElement:(id)arg1;	// IMP=0x00000001000633ac
- (void)handleEvent:(id)arg1;	// IMP=0x0000000100062e94
- (_Bool)eventIsSystemEvent:(id)arg1;	// IMP=0x0000000100062c60
- (void)_updateNavigationModeForClassicRemote;	// IMP=0x0000000100062af4
- (void)updateNavigationModeForClassicRemote;	// IMP=0x0000000100062ad0
- (void)_initializeCommands;	// IMP=0x000000010005da10
- (void)_migratePerAppDirectTouchBehavior;	// IMP=0x000000010005d5d8
- (void)_initializeSystemEventThread;	// IMP=0x000000010005d580
- (void)_initializeElementManagerThread;	// IMP=0x000000010005d504
- (void)dealloc;	// IMP=0x000000010005d1c8
- (id)init;	// IMP=0x000000010005c4a4
- (void)_cleanupStateForUnitTesting;	// IMP=0x000000010005c268

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

