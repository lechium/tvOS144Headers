//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "VOTGesturedTextInputManager.h"

#import "BKSAccelerometerDelegate-Protocol.h"
#import "VOTBrailleGestureTranslatorDelegate-Protocol.h"
#import "VOTGesturedTextInputManagerRequiredMethods-Protocol.h"

@class AXDispatchTimer, BKSAccelerometer, NSArray, NSDictionary, NSMutableDictionary, NSString, VOTBrailleGestureSpellingSuggestionHandler, VOTBrailleGestureTranslator, VOTTextMovementManager;
@protocol BSInvalidatable, VOTBrailleGestureManagerDelegate;

@interface VOTBrailleGestureManager : VOTGesturedTextInputManager <VOTBrailleGestureTranslatorDelegate, BKSAccelerometerDelegate, VOTGesturedTextInputManagerRequiredMethods>
{
    VOTBrailleGestureTranslator *_gestureTranslator;	// 8 = 0x8
    VOTBrailleGestureSpellingSuggestionHandler *_spellingSuggestionHandler;	// 16 = 0x10
    BKSAccelerometer *_accelerometer;	// 24 = 0x18
    NSMutableDictionary *_allTouchLocationsByIdentifier;	// 32 = 0x20
    NSMutableDictionary *_firstTouchLocationsByIdentifier;	// 40 = 0x28
    _Bool _shouldUpdateDotPositions;	// 48 = 0x30
    _Bool _exploring;	// 49 = 0x31
    _Bool _splitting;	// 50 = 0x32
    _Bool _didMoveFingersTooFarForInput;	// 51 = 0x33
    _Bool _didAnnounceExplorationMode;	// 52 = 0x34
    _Bool _didAnnounceBrailleTypingProperties;	// 53 = 0x35
    _Bool _didStartFullGesture;	// 54 = 0x36
    _Bool _didEnterInvalidGesture;	// 55 = 0x37
    id <VOTBrailleGestureManagerDelegate> _brailleGestureManagerDelegate;	// 56 = 0x38
    long long _typingMode;	// 64 = 0x40
    long long _keyboardOrientation;	// 72 = 0x48
    NSString *_lastPrintBrailleCharacter;	// 80 = 0x50
    NSDictionary *_lastTouchLocationsByIdentifier;	// 88 = 0x58
    AXDispatchTimer *_speakingDelayTimer;	// 96 = 0x60
    AXDispatchTimer *_brailleTypingPropertiesAnnouncementTimer;	// 104 = 0x68
    AXDispatchTimer *_warningTonesTimer;	// 112 = 0x70
    AXDispatchTimer *_lockScreenDimmingTimer;	// 120 = 0x78
    AXDispatchTimer *_logBSIUsageTimer;	// 128 = 0x80
    id <BSInvalidatable> _disableIdleTimerAssertion;	// 136 = 0x88
    VOTTextMovementManager *_movementManager;	// 144 = 0x90
    NSArray *_calibrationStartTouchPoints;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x00000001000fc154
@property(retain, nonatomic) NSArray *calibrationStartTouchPoints; // @synthesize calibrationStartTouchPoints=_calibrationStartTouchPoints;
@property(retain, nonatomic) VOTTextMovementManager *movementManager; // @synthesize movementManager=_movementManager;
@property(retain, nonatomic) id <BSInvalidatable> disableIdleTimerAssertion; // @synthesize disableIdleTimerAssertion=_disableIdleTimerAssertion;
@property(retain, nonatomic) AXDispatchTimer *logBSIUsageTimer; // @synthesize logBSIUsageTimer=_logBSIUsageTimer;
@property(retain, nonatomic) AXDispatchTimer *lockScreenDimmingTimer; // @synthesize lockScreenDimmingTimer=_lockScreenDimmingTimer;
@property(nonatomic) _Bool didEnterInvalidGesture; // @synthesize didEnterInvalidGesture=_didEnterInvalidGesture;
@property(nonatomic) _Bool didStartFullGesture; // @synthesize didStartFullGesture=_didStartFullGesture;
@property(retain, nonatomic) AXDispatchTimer *warningTonesTimer; // @synthesize warningTonesTimer=_warningTonesTimer;
@property(retain, nonatomic) AXDispatchTimer *brailleTypingPropertiesAnnouncementTimer; // @synthesize brailleTypingPropertiesAnnouncementTimer=_brailleTypingPropertiesAnnouncementTimer;
@property(retain, nonatomic) AXDispatchTimer *speakingDelayTimer; // @synthesize speakingDelayTimer=_speakingDelayTimer;
@property(retain, nonatomic) NSDictionary *lastTouchLocationsByIdentifier; // @synthesize lastTouchLocationsByIdentifier=_lastTouchLocationsByIdentifier;
@property(copy, nonatomic) NSString *lastPrintBrailleCharacter; // @synthesize lastPrintBrailleCharacter=_lastPrintBrailleCharacter;
@property(nonatomic) long long keyboardOrientation; // @synthesize keyboardOrientation=_keyboardOrientation;
@property(nonatomic) _Bool didAnnounceBrailleTypingProperties; // @synthesize didAnnounceBrailleTypingProperties=_didAnnounceBrailleTypingProperties;
@property(nonatomic) _Bool didAnnounceExplorationMode; // @synthesize didAnnounceExplorationMode=_didAnnounceExplorationMode;
@property(nonatomic) _Bool didMoveFingersTooFarForInput; // @synthesize didMoveFingersTooFarForInput=_didMoveFingersTooFarForInput;
@property(nonatomic, getter=isSplitting) _Bool splitting; // @synthesize splitting=_splitting;
@property(nonatomic, getter=isExploring) _Bool exploring; // @synthesize exploring=_exploring;
@property(nonatomic) _Bool shouldUpdateDotPositions; // @synthesize shouldUpdateDotPositions=_shouldUpdateDotPositions;
@property(nonatomic) long long typingMode; // @synthesize typingMode=_typingMode;
@property(nonatomic) __weak id <VOTBrailleGestureManagerDelegate> brailleGestureManagerDelegate; // @synthesize brailleGestureManagerDelegate=_brailleGestureManagerDelegate;
- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(long long)arg2;	// IMP=0x00000001000fbdd8
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;	// IMP=0x00000001000fbdd4
- (void)_cancelWarningTones;	// IMP=0x00000001000fbd7c
- (void)_playWarningTones:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000fbafc
- (void)_playWarningTone;	// IMP=0x00000001000fba84
- (void)_playBonk;	// IMP=0x00000001000fba0c
- (id)_outputRequestForText:(id)arg1 hint:(id)arg2 useKeyboardLanguage:(_Bool)arg3 shouldQueue:(_Bool)arg4 isInsert:(_Bool)arg5 isSuggestion:(_Bool)arg6 isDelete:(_Bool)arg7 speakLiterally:(_Bool)arg8 otherLanguage:(id)arg9;	// IMP=0x00000001000fb50c
- (void)_speakText:(id)arg1 hint:(id)arg2 useKeyboardLanguage:(_Bool)arg3 shouldQueue:(_Bool)arg4 isInsert:(_Bool)arg5 isSuggestion:(_Bool)arg6 isDelete:(_Bool)arg7 speakLiterally:(_Bool)arg8 otherLanguage:(id)arg9;	// IMP=0x00000001000fb42c
- (void)_speakText:(id)arg1 hint:(id)arg2;	// IMP=0x00000001000fb3bc
- (void)_speakText:(id)arg1 useKeyboardLanguage:(_Bool)arg2 shouldQueue:(_Bool)arg3 isInsert:(_Bool)arg4 isDelete:(_Bool)arg5 speakLiterally:(_Bool)arg6;	// IMP=0x00000001000fb374
- (void)_speakText:(id)arg1 useKeyboardLanguage:(_Bool)arg2 shouldQueue:(_Bool)arg3;	// IMP=0x00000001000fb35c
- (void)_speakText:(id)arg1 useKeyboardLanguage:(_Bool)arg2;	// IMP=0x00000001000fb34c
- (void)_flashInsertedTextIfAllowed:(id)arg1;	// IMP=0x00000001000fb2a8
- (void)_updateBrailleUI;	// IMP=0x00000001000fb164
- (void)_handleTouchPoints:(id)arg1;	// IMP=0x00000001000faab0
- (_Bool)_handleCarriageReturnSwipe;	// IMP=0x00000001000faa10
- (id)_languageCodeForSpeakingAndBrailleTranslation;	// IMP=0x00000001000fa79c
- (id)_languageCodeForSpellChecking;	// IMP=0x00000001000fa738
- (id)_languageCodeForBrailleTable;	// IMP=0x00000001000fa668
- (void)_handleTranslateImmediately;	// IMP=0x00000001000fa4b8
- (void)_handleChangeBrailleMode:(_Bool)arg1;	// IMP=0x00000001000fa070
- (id)_printBrailleForTouchPoints:(id)arg1;	// IMP=0x00000001000f9f6c
- (void)_inputBrailleFromSeriesOfTouchPoints:(id)arg1;	// IMP=0x00000001000f9ef4
- (void)_inputBrailleFromTouchPoints:(id)arg1;	// IMP=0x00000001000f9e34
- (_Bool)_isAdjustTextSegmentTypeEvent:(id)arg1;	// IMP=0x00000001000f9d70
- (_Bool)_isAdjustTextSegmentEvent:(id)arg1;	// IMP=0x00000001000f9cac
- (_Bool)_isSelectEvent:(id)arg1;	// IMP=0x00000001000f9be8
- (_Bool)_isCarriageReturnSwipeEvent:(id)arg1;	// IMP=0x00000001000f9b8c
- (_Bool)_isToggleLockedConfigurationEvent:(id)arg1;	// IMP=0x00000001000f9b30
- (_Bool)_isTranslateImmediatelyEvent:(id)arg1;	// IMP=0x00000001000f9ad4
- (_Bool)_isPreviousBrailleModeEvent:(id)arg1;	// IMP=0x00000001000f9a78
- (_Bool)_isNextBrailleModeEvent:(id)arg1;	// IMP=0x00000001000f9a1c
- (void)_scheduleExploringModeIfNeeded;	// IMP=0x00000001000f9874
- (void)_updateDotNumberCirclesForPrintBraille:(id)arg1;	// IMP=0x00000001000f9710
- (id)_newBrailleInput;	// IMP=0x00000001000f96a8
- (long long)valueChangeOriginator;	// IMP=0x00000001000f96a0
- (void)_handleFingersOnScreen:(id)arg1 didAddOrRemoveFingers:(_Bool)arg2;	// IMP=0x00000001000f90d8
- (void)_cleanUpTouchesIncludingCalibrationStartPoints:(_Bool)arg1;	// IMP=0x00000001000f8fcc
- (_Bool)_handleAllFingersLifted;	// IMP=0x00000001000f8cf8
- (void)_handleCalibrationTimeout;	// IMP=0x00000001000f8c48
- (id)_spokenStringForPrintBraille:(id)arg1 useLongForm:(_Bool)arg2;	// IMP=0x00000001000f89e8
- (id)_spokenStringForPrintBraille:(id)arg1;	// IMP=0x00000001000f89d8
- (void)_enumerateDotNumbersForPrintBraille:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000001000f887c
- (void)_speakPrintBrailleForExploration;	// IMP=0x00000001000f85f8
- (void)_calibrateWithTouchPoints:(id)arg1;	// IMP=0x00000001000f854c
- (id)_stringWithFirstPart:(id)arg1 secondPart:(id)arg2;	// IMP=0x00000001000f84e4
- (void)_endExploringDotPatterns;	// IMP=0x00000001000f8498
- (void)_beginExploringDotPatterns;	// IMP=0x00000001000f83e0
- (id)_touchPointsForCalibrationGivenFirstPoints:(id)arg1 lastPoints:(id)arg2;	// IMP=0x00000001000f834c
- (_Bool)_isCalibrationEndPattern:(id)arg1;	// IMP=0x00000001000f82c8
- (_Bool)_isCalibrationStartPattern:(id)arg1;	// IMP=0x00000001000f8244
- (_Bool)_patternIncludesEveryFinger:(id)arg1;	// IMP=0x00000001000f8198
- (_Bool)_deviceSupportsMoreThanFiveTouches;	// IMP=0x00000001000f8194
- (_Bool)_requiresLaTeXInput;	// IMP=0x00000001000f807c
- (_Bool)_shouldUseContractedBraille;	// IMP=0x00000001000f8064
- (_Bool)_hasContractedBraillePreference;	// IMP=0x00000001000f800c
- (_Bool)_canUseContractedBraille;	// IMP=0x00000001000f7fc0
- (void)_updateShouldUseContractedBraille;	// IMP=0x00000001000f7f64
- (void)_updateBrailleTypingPropertiesAndDelayAnnouncement:(_Bool)arg1 forUnlockConfiguration:(_Bool)arg2;	// IMP=0x00000001000f7a70
- (void)_updateBrailleTypingPropertiesAndDelayAnnouncement:(_Bool)arg1;	// IMP=0x00000001000f7a60
- (void)_announceBrailleTypingPropertiesIncludingOrientation:(_Bool)arg1 typingMode:(_Bool)arg2 brailleMode:(_Bool)arg3 forUnlockConfiguration:(_Bool)arg4;	// IMP=0x00000001000f7700
- (id)_descriptionForCurrentBrailleMode;	// IMP=0x00000001000f760c
- (void)_appendOrientationToAnnouncement:(id)arg1;	// IMP=0x00000001000f72a0
- (unsigned long long)_numberOfDots;	// IMP=0x00000001000f7274
- (_Bool)_shouldUseEightDotBraille;	// IMP=0x00000001000f71fc
- (void)eventFactoryDidBeginSplitGesture:(id)arg1;	// IMP=0x00000001000f7150
- (id)hintForAppLaunch;	// IMP=0x00000001000f7134
- (_Bool)shouldAllowRotorEvents;	// IMP=0x00000001000f7104
- (void)didInputWordBackspace;	// IMP=0x00000001000f70ec
- (void)didInputBackspace;	// IMP=0x00000001000f70a4
- (_Bool)performCustomWordBackspace;	// IMP=0x00000001000f6e90
- (_Bool)performCustomBackspace;	// IMP=0x00000001000f6cf8
- (void)applyPreviousSuggestionToElement:(id)arg1;	// IMP=0x00000001000f6ce8
- (void)applyNextSuggestionToElement:(id)arg1;	// IMP=0x00000001000f6cd8
- (void)_applySuggestionToElement:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000f6ac8
- (void)_outputChosenSuggestion:(id)arg1;	// IMP=0x00000001000f69f8
- (void)_insertCurrentSelectedSuggestion:(id)arg1;	// IMP=0x00000001000f68dc
- (_Bool)performNextBrailleTableCommand;	// IMP=0x00000001000f67dc
- (_Bool)isNextBrailleTableEvent:(id)arg1;	// IMP=0x00000001000f6780
- (_Bool)performNextKeyboardLanguage;	// IMP=0x00000001000f6730
- (_Bool)isNextKeyboardLanguageEvent:(id)arg1;	// IMP=0x00000001000f66d4
- (_Bool)isLaunchAppEvent:(id)arg1;	// IMP=0x00000001000f6638
- (_Bool)isPreviousSuggestionEvent:(id)arg1;	// IMP=0x00000001000f65dc
- (_Bool)isNextSuggestionEvent:(id)arg1;	// IMP=0x00000001000f6580
- (_Bool)isWordBackspaceEvent:(id)arg1;	// IMP=0x00000001000f6524
- (_Bool)isBackspaceEvent:(id)arg1;	// IMP=0x00000001000f64c8
- (_Bool)isSpaceEvent:(id)arg1;	// IMP=0x00000001000f646c
- (_Bool)isReturnKeyEvent:(id)arg1;	// IMP=0x00000001000f6410
@property(readonly, nonatomic) unsigned long long mode;
- (_Bool)_handleAdjustTextSegmentTypeEvent:(id)arg1;	// IMP=0x00000001000f6278
- (_Bool)_shouldReverseDots;	// IMP=0x00000001000f6224
- (void)updateWithString:(id)arg1;	// IMP=0x00000001000f6190
- (void)_handleWordBreak:(id)arg1;	// IMP=0x00000001000f60ac
- (void)sendCarriageReturnForElement:(id)arg1;	// IMP=0x00000001000f6004
- (void)pressReturnKeyForElement:(id)arg1;	// IMP=0x00000001000f5e04
- (void)inputSpaceForElement:(id)arg1;	// IMP=0x00000001000f5bbc
- (_Bool)processTouchLocations:(id)arg1 isFirstTouch:(_Bool)arg2;	// IMP=0x00000001000f59f0
- (_Bool)processTapWithFingerCount:(unsigned long long)arg1;	// IMP=0x00000001000f59e8
- (_Bool)processEvent:(id)arg1;	// IMP=0x00000001000f54a8
- (void)clearCurrentString;	// IMP=0x00000001000f5450
- (void)setActive:(_Bool)arg1;	// IMP=0x00000001000f4d9c
- (void)dealloc;	// IMP=0x00000001000f4d28
- (id)init;	// IMP=0x00000001000f4ba4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

