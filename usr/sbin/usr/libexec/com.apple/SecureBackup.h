//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSSecureCoding-Protocol.h"

@class EscrowPrerecord, NSData, NSDate, NSDictionary, NSError, NSString, SESWrapper;
@protocol OS_dispatch_queue;

@interface SecureBackup : NSObject <NSSecureCoding>
{
    _Bool _deleteAll;	// 8 = 0x8
    _Bool _emcsMode;	// 9 = 0x9
    _Bool _excludeiCDPRecords;	// 10 = 0xa
    _Bool _fmipRecovery;	// 11 = 0xb
    _Bool _icdp;	// 12 = 0xc
    _Bool _idmsRecovery;	// 13 = 0xd
    _Bool _silent;	// 14 = 0xe
    _Bool _stingray;	// 15 = 0xf
    _Bool _synchronize;	// 16 = 0x10
    _Bool _useCachedPassphrase;	// 17 = 0x11
    _Bool _useRecoveryPET;	// 18 = 0x12
    _Bool _usesMultipleiCSC;	// 19 = 0x13
    _Bool _usesRandomPassphrase;	// 20 = 0x14
    _Bool _usesRecoveryKey;	// 21 = 0x15
    _Bool _suppressServerFiltering;	// 22 = 0x16
    _Bool _deleteDoubleOnly;	// 23 = 0x17
    _Bool _silentDoubleRecovery;	// 24 = 0x18
    NSString *_appleID;	// 32 = 0x20
    NSString *_authToken;	// 40 = 0x28
    NSDate *_backOffDate;	// 48 = 0x30
    NSData *_certData;	// 56 = 0x38
    NSString *_countryDialCode;	// 64 = 0x40
    NSString *_countryCode;	// 72 = 0x48
    NSString *_dsid;	// 80 = 0x50
    NSString *_emcsCred;	// 88 = 0x58
    NSDictionary *_emcsDict;	// 96 = 0x60
    NSString *_encodedMetadata;	// 104 = 0x68
    NSString *_duplicateEncodedMetadata;	// 112 = 0x70
    NSDictionary *_escrowRecord;	// 120 = 0x78
    NSString *_escrowProxyURL;	// 128 = 0x80
    NSString *_fmipUUID;	// 136 = 0x88
    NSString *_iCloudEnv;	// 144 = 0x90
    NSData *_iCloudIdentityData;	// 152 = 0x98
    NSString *_iCloudPassword;	// 160 = 0xa0
    NSData *_idmsData;	// 168 = 0xa8
    NSDictionary *_metadata;	// 176 = 0xb0
    NSDictionary *_metadataHash;	// 184 = 0xb8
    NSString *_oldEMCSCred;	// 192 = 0xc0
    NSString *_passphrase;	// 200 = 0xc8
    NSString *_recordID;	// 208 = 0xd0
    NSString *_recoveryKey;	// 216 = 0xd8
    NSString *_smsTarget;	// 224 = 0xe0
    NSString *_verificationToken;	// 232 = 0xe8
    NSObject<OS_dispatch_queue> *_queue;	// 240 = 0xf0
    NSError *_error;	// 248 = 0xf8
    NSString *_activityLabel;	// 256 = 0x100
    NSString *_activityUUID;	// 264 = 0x108
    NSString *_hsa2CachedPrerecordUUID;	// 272 = 0x110
    EscrowPrerecord *_prerecord;	// 280 = 0x118
    SESWrapper *_ses;	// 288 = 0x120
}

+ (id)getAcceptedTermsForAltDSID:(id)arg1 withError:(id *)arg2;	// IMP=0x0000000100012238
+ (id)getAllAcceptedTermsWithError:(id *)arg1;	// IMP=0x0000000100012224
+ (id)_getAcceptedTermsForAltDSID:(id)arg1 withError:(id *)arg2;	// IMP=0x0000000100011dd4
+ (void)getAcceptedTermsForAltDSID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000119c8
+ (void)saveTermsAcceptance:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010001163c
+ (unsigned int)daemonPasscodeRequestOpinion:(id *)arg1;	// IMP=0x0000000100010890
+ (unsigned int)needPasscodeForHSA2EscrowRecordUpdate:(id *)arg1;	// IMP=0x0000000100010344
+ (void)asyncRequestEscrowRecordUpdate;	// IMP=0x00000001000101b4
+ (_Bool)supportsSecureCoding;	// IMP=0x0000000100005184
+ (id)_ClassCreateSecureBackupConcurrentConnection;	// IMP=0x0000000100004fe0
- (void).cxx_destruct;	// IMP=0x0000000100012654
@property(retain, nonatomic) SESWrapper *ses; // @synthesize ses=_ses;
@property(retain, nonatomic) EscrowPrerecord *prerecord; // @synthesize prerecord=_prerecord;
@property(copy, nonatomic) NSString *hsa2CachedPrerecordUUID; // @synthesize hsa2CachedPrerecordUUID=_hsa2CachedPrerecordUUID;
@property(nonatomic) _Bool silentDoubleRecovery; // @synthesize silentDoubleRecovery=_silentDoubleRecovery;
@property(nonatomic) _Bool deleteDoubleOnly; // @synthesize deleteDoubleOnly=_deleteDoubleOnly;
@property(nonatomic) _Bool suppressServerFiltering; // @synthesize suppressServerFiltering=_suppressServerFiltering;
@property(copy, nonatomic) NSString *activityUUID; // @synthesize activityUUID=_activityUUID;
@property(copy, nonatomic) NSString *activityLabel; // @synthesize activityLabel=_activityLabel;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) NSString *verificationToken; // @synthesize verificationToken=_verificationToken;
@property(nonatomic) _Bool usesRecoveryKey; // @synthesize usesRecoveryKey=_usesRecoveryKey;
@property(nonatomic) _Bool usesRandomPassphrase; // @synthesize usesRandomPassphrase=_usesRandomPassphrase;
@property(nonatomic) _Bool usesMultipleiCSC; // @synthesize usesMultipleiCSC=_usesMultipleiCSC;
@property(nonatomic) _Bool useRecoveryPET; // @synthesize useRecoveryPET=_useRecoveryPET;
@property(nonatomic) _Bool useCachedPassphrase; // @synthesize useCachedPassphrase=_useCachedPassphrase;
@property(nonatomic) _Bool synchronize; // @synthesize synchronize=_synchronize;
@property(nonatomic) _Bool stingray; // @synthesize stingray=_stingray;
@property(nonatomic) _Bool silent; // @synthesize silent=_silent;
@property(copy, nonatomic) NSString *smsTarget; // @synthesize smsTarget=_smsTarget;
@property(copy, nonatomic) NSString *recoveryKey; // @synthesize recoveryKey=_recoveryKey;
@property(copy, nonatomic) NSString *recordID; // @synthesize recordID=_recordID;
@property(copy, nonatomic) NSString *passphrase; // @synthesize passphrase=_passphrase;
@property(copy, nonatomic) NSString *oldEMCSCred; // @synthesize oldEMCSCred=_oldEMCSCred;
@property(retain, nonatomic) NSDictionary *metadataHash; // @synthesize metadataHash=_metadataHash;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) _Bool idmsRecovery; // @synthesize idmsRecovery=_idmsRecovery;
@property(retain, nonatomic) NSData *idmsData; // @synthesize idmsData=_idmsData;
@property(copy, nonatomic) NSString *iCloudPassword; // @synthesize iCloudPassword=_iCloudPassword;
@property(retain, nonatomic) NSData *iCloudIdentityData; // @synthesize iCloudIdentityData=_iCloudIdentityData;
@property(copy, nonatomic) NSString *iCloudEnv; // @synthesize iCloudEnv=_iCloudEnv;
@property(nonatomic) _Bool icdp; // @synthesize icdp=_icdp;
@property(copy, nonatomic) NSString *fmipUUID; // @synthesize fmipUUID=_fmipUUID;
@property(nonatomic) _Bool fmipRecovery; // @synthesize fmipRecovery=_fmipRecovery;
@property(nonatomic) _Bool excludeiCDPRecords; // @synthesize excludeiCDPRecords=_excludeiCDPRecords;
@property(copy, nonatomic) NSString *escrowProxyURL; // @synthesize escrowProxyURL=_escrowProxyURL;
@property(retain, nonatomic) NSDictionary *escrowRecord; // @synthesize escrowRecord=_escrowRecord;
@property(copy, nonatomic) NSString *duplicateEncodedMetadata; // @synthesize duplicateEncodedMetadata=_duplicateEncodedMetadata;
@property(copy, nonatomic) NSString *encodedMetadata; // @synthesize encodedMetadata=_encodedMetadata;
@property(nonatomic) _Bool emcsMode; // @synthesize emcsMode=_emcsMode;
@property(retain, nonatomic) NSDictionary *emcsDict; // @synthesize emcsDict=_emcsDict;
@property(copy, nonatomic) NSString *emcsCred; // @synthesize emcsCred=_emcsCred;
@property(copy, nonatomic) NSString *dsid; // @synthesize dsid=_dsid;
@property(nonatomic) _Bool deleteAll; // @synthesize deleteAll=_deleteAll;
@property(copy, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(copy, nonatomic) NSString *countryDialCode; // @synthesize countryDialCode=_countryDialCode;
@property(retain, nonatomic) NSData *certData; // @synthesize certData=_certData;
@property(retain, nonatomic) NSDate *backOffDate; // @synthesize backOffDate=_backOffDate;
@property(copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(copy, nonatomic) NSString *appleID; // @synthesize appleID=_appleID;
- (_Bool)requiresDoubleEnrollment;	// IMP=0x00000001000115b8
- (void)getCertificates:(CDUnknownBlockType)arg1;	// IMP=0x00000001000112a8
- (id)beginHSA2PasscodeRequest:(_Bool)arg1 uuid:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100010de8
- (id)beginHSA2PasscodeRequest:(_Bool)arg1 error:(id *)arg2;	// IMP=0x0000000100010d40
- (void)prepareHSA2EscrowRecordContents:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010000fdf8
- (id)srpRecoveryBlobFromSRPInitResponse:(id)arg1;	// IMP=0x000000010000fd40
- (void)srpRecoveryUpdateDSID:(id)arg1 recoveryPassphrase:(id)arg2;	// IMP=0x000000010000fcb8
- (id)srpInitNonce;	// IMP=0x000000010000fbf0
- (void)setBackOffDateWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000fb78
- (void)backOffDateWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000fb00
- (id)backupWithInfo:(id)arg1;	// IMP=0x000000010000f708
- (void)changeSMSTargetWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000f690
- (id)changeSMSTargetWithInfo:(id)arg1;	// IMP=0x000000010000f610
- (_Bool)changeSMSTargetWithError:(id *)arg1;	// IMP=0x000000010000f234
- (void)getCountrySMSCodesWithInfo:(id)arg1 completionBlockWithResults:(CDUnknownBlockType)arg2;	// IMP=0x000000010000f1bc
- (void)startSMSChallengeWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000f0fc
- (void)startSMSChallengeWithInfo:(id)arg1 completionBlockWithResults:(CDUnknownBlockType)arg2;	// IMP=0x000000010000f084
- (id)startSMSChallengeWithInfo:(id)arg1 results:(id *)arg2;	// IMP=0x000000010000effc
- (id)startSMSChallengeWithError:(id *)arg1;	// IMP=0x000000010000eba8
- (void)uncachePassphraseWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000eb30
- (id)uncachePassphraseWithInfo:(id)arg1;	// IMP=0x000000010000eaf4
- (void)cachePassphraseWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000ea7c
- (id)cachePassphraseWithInfo:(id)arg1;	// IMP=0x000000010000ea40
- (void)stashRecoveryDataWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000e904
- (void)disableWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000e88c
- (id)disableWithInfo:(id)arg1;	// IMP=0x000000010000e80c
- (_Bool)disableWithError:(id *)arg1;	// IMP=0x000000010000e430
- (void)recoverWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000e3e0
- (void)recoverWithInfo:(id)arg1 completionBlockWithResults:(CDUnknownBlockType)arg2;	// IMP=0x000000010000e280
- (id)recoverWithInfo:(id)arg1 results:(id *)arg2;	// IMP=0x000000010000e1f8
- (void)restoreKeychainAsyncWithPassword:(id)arg1 keybagDigest:(id)arg2 haveBottledPeer:(_Bool)arg3 viewsNotToBeRestored:(id)arg4 error:(id *)arg5;	// IMP=0x000000010000dc68
- (id)recoverSilentWithCDPContext:(id)arg1 allRecords:(id)arg2 error:(id *)arg3;	// IMP=0x000000010000d714
- (id)recoverWithCDPContext:(id)arg1 escrowRecord:(id)arg2 error:(id *)arg3;	// IMP=0x000000010000d114
- (id)recoverWithError:(id *)arg1;	// IMP=0x000000010000ccc0
- (void)enableWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000cc48
- (id)enableWithInfo:(id)arg1;	// IMP=0x000000010000cbc8
- (_Bool)enableWithError:(id *)arg1;	// IMP=0x000000010000c7ec
- (void)updateMetadataWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000c774
- (id)updateMetadataWithInfo:(id)arg1;	// IMP=0x000000010000c6f4
- (_Bool)updateMetadataWithError:(id *)arg1;	// IMP=0x000000010000c238
- (void)getAccountInfoWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000c1e8
- (void)getAccountInfoWithInfo:(id)arg1 completionBlockWithResults:(CDUnknownBlockType)arg2;	// IMP=0x000000010000c170
- (id)getAccountInfoWithInfo:(id)arg1 results:(id *)arg2;	// IMP=0x000000010000c0e8
- (id)getAccountInfoWithError:(id *)arg1;	// IMP=0x000000010000bb48
- (void)stateCaptureWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010000b790
- (void)notificationInfo:(CDUnknownBlockType)arg1;	// IMP=0x000000010000b36c
- (void)setBackOffDateWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010000b010
- (void)backOffDateWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010000ac94
- (void)backupWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010000a908
- (void)changeSMSTargetWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010000a5ac
- (void)getCountrySMSCodesWithResults:(CDUnknownBlockType)arg1;	// IMP=0x000000010000a230
- (void)startSMSChallengeWithResults:(CDUnknownBlockType)arg1;	// IMP=0x0000000100009eb4
- (void)uncachePassphrase;	// IMP=0x0000000100009cfc
- (void)uncacheRecoveryKeyWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100009a60
- (void)cacheRecoveryKeyWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001000097c4
- (void)uncachePassphraseWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100009528
- (void)cachePassphraseWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010000928c
- (void)cachePassphrase;	// IMP=0x00000001000090a4
- (void)updateMetadataWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100008d48
- (void)stashRecoveryDataWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001000089ec
- (void)disableWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100008690
- (void)createICDPRecordWithContents:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010000826c
- (void)recoverRecordContents:(CDUnknownBlockType)arg1;	// IMP=0x0000000100007ef0
- (void)recoverWithResults:(CDUnknownBlockType)arg1;	// IMP=0x0000000100007b74
- (void)enableWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001000075d4
- (void)getAccountInfoWithResults:(CDUnknownBlockType)arg1;	// IMP=0x000000010000716c
- (void)populateWithInfo:(id)arg1;	// IMP=0x00000001000065e0
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000100005ce0
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000100005370
- (id)init;	// IMP=0x000000010000535c
- (id)initWithUserActivityLabel:(id)arg1;	// IMP=0x000000010000518c
- (id)_CreateSecureBackupConnection;	// IMP=0x0000000100004e3c

@end

