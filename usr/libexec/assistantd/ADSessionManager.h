//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADSessionDelegate-Protocol.h"

@class ADAccount, AFAWDSiriRequestRecord, AFAggregator, NSError, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, SASSpeechFailure, SASSpeechRecognized;
@protocol ADSessionManagerDelegate, ADSessionManagerIntercepting, OS_dispatch_queue, OS_dispatch_source;

@interface ADSessionManager : NSObject <ADSessionDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    ADAccount *_account;	// 16 = 0x10
    NSString *_sharedUserIdentifier;	// 24 = 0x18
    NSString *_loggingSharedUserIdentifier;	// 32 = 0x20
    long long _sharedUserIdentifierState;	// 40 = 0x28
    long long _state;	// 48 = 0x30
    _Bool _isRegisteredForSessionDestroyingNotifications;	// 56 = 0x38
    NSString *_connectionMode;	// 64 = 0x40
    NSString *_languageCode;	// 72 = 0x48
    NSMutableArray *_sessions;	// 80 = 0x50
    id <ADSessionManagerDelegate> _delegate;	// 88 = 0x58
    _Bool _callInProcess;	// 96 = 0x60
    _Bool _hasClient;	// 97 = 0x61
    unsigned int _ioConnect;	// 100 = 0x64
    struct IONotificationPort *_ioNotificationPortRef;	// 104 = 0x68
    unsigned int _ioNotifier;	// 112 = 0x70
    AFAggregator *_aggregator;	// 120 = 0x78
    NSString *_requestId;	// 128 = 0x80
    NSMutableDictionary *_proxiedIdMap;	// 136 = 0x88
    NSMutableDictionary *_reverseProxiedIdMap;	// 144 = 0x90
    NSMutableDictionary *_sessionOriginatedCommandTable;	// 152 = 0x98
    NSString *_winningSessionId;	// 160 = 0xa0
    NSObject<OS_dispatch_source> *_resultObjectsEvaluationTimer;	// 168 = 0xa8
    _Bool _isQueuingResultsForDelayedEvaluation;	// 176 = 0xb0
    _Bool _timerFiredOnce;	// 177 = 0xb1
    _Bool _continueWithPreviousWinner;	// 178 = 0xb2
    NSError *_lastSessionError;	// 184 = 0xb8
    int _preferredSessionType;	// 192 = 0xc0
    SASSpeechRecognized *_savedSasSpeechRecognized;	// 200 = 0xc8
    _Bool _savedSasSpeechRecognizedSubmitted;	// 208 = 0xd0
    SASSpeechFailure *_savedSasSpeechFailure;	// 216 = 0xd8
    unsigned int _serverDrivenResultsHoldTime;	// 224 = 0xe0
    _Bool _serverSpeechRecognitionArrived;	// 228 = 0xe4
    _Bool _hasActiveRequest;	// 229 = 0xe5
    _Bool _needsResetOnRequestBoundary;	// 230 = 0xe6
    NSMutableSet *_assertions;	// 232 = 0xe8
    AFAWDSiriRequestRecord *_awdRequestRecord;	// 240 = 0xf0
    id <ADSessionManagerIntercepting> _interceptor;	// 248 = 0xf8
    CDUnknownBlockType _sessionResetOnRequestBoundaryCompletion;	// 256 = 0x100
}

- (void).cxx_destruct;	// IMP=0x00000001000b4a7c
@property(nonatomic) __weak id <ADSessionManagerIntercepting> interceptor; // @synthesize interceptor=_interceptor;
@property(nonatomic) __weak id <ADSessionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)speechError:(id)arg1;	// IMP=0x00000001000b46b8
- (void)_propagateCachedSpeechErrorToLocalSessions;	// IMP=0x00000001000b455c
- (void)_mapAndSendSpeechFailure:(id)arg1 toLocalSession:(id)arg2;	// IMP=0x00000001000b4468
- (void)handleCommandInLocalSession:(id)arg1;	// IMP=0x00000001000b4134
- (void)sendCommandToLocalSession:(id)arg1;	// IMP=0x00000001000b402c
- (void)_logContextForWinningSession:(id)arg1 forReason:(id)arg2 forRemoteSessionScore:(long long)arg3 forLocalSessionScore:(long long)arg4;	// IMP=0x00000001000b3e08
- (void)_resetWinningState;	// IMP=0x00000001000b3d08
- (_Bool)_reverseMapSessionRequestIdToADRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x00000001000b3b50
- (id)_mapADRequestIdToSessionRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x00000001000b3ab4
- (id)_keyForRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x00000001000b3a04
- (_Bool)_canStartLocalSession;	// IMP=0x00000001000b39fc
- (_Bool)_hasAtleastOneActiveSessionBesides:(id)arg1;	// IMP=0x00000001000b377c
- (void)refreshValidationData;	// IMP=0x00000001000b3648
- (void)setHasClient:(_Bool)arg1;	// IMP=0x00000001000b3640
- (_Bool)hasClient;	// IMP=0x00000001000b3638
- (void)barrier:(CDUnknownBlockType)arg1;	// IMP=0x00000001000b332c
- (void)setAWDRequestRecordMetrics:(id)arg1;	// IMP=0x00000001000b31e4
- (void)_logMetricsForSessionFailure:(id)arg1 withError:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b2c44
- (void)_logCommandToMetrics:(id)arg1 forSession:(id)arg2 outbound:(_Bool)arg3;	// IMP=0x00000001000b291c
- (void)getConnectionMetrics:(CDUnknownBlockType)arg1;	// IMP=0x00000001000b25c8
- (void)updateConnectionSetConnectionType:(unsigned int)arg1;	// IMP=0x00000001000b2580
- (void)updateConnectionDidFailAggdMetrics;	// IMP=0x00000001000b2540
- (void)updateConnectionDidDropAggdMetrics;	// IMP=0x00000001000b2500
- (id)aggregator;	// IMP=0x00000001000b24bc
- (id)sessionRequestIdForRefId:(id)arg1;	// IMP=0x00000001000b2328
- (void)setRequestId:(id)arg1;	// IMP=0x00000001000b1ce4
- (void)_resetSessionOnRequestBoundaryIfNeeded;	// IMP=0x00000001000b1910
- (void)relinquishAssertion:(id)arg1;	// IMP=0x00000001000b181c
- (id)acquireAssertionForReason:(id)arg1;	// IMP=0x00000001000b1704
- (void)setHasActiveRequest:(_Bool)arg1;	// IMP=0x00000001000b1510
- (void)sendRawCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3;	// IMP=0x00000001000b14fc
- (void)sendCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3;	// IMP=0x00000001000b14e8
- (void)_sendCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3 doSendPreProcessing:(_Bool)arg4 doSendPostProcessing:(_Bool)arg5;	// IMP=0x00000001000b0a54
- (void)delegateDidHandleCommand:(id)arg1;	// IMP=0x00000001000b0828
- (void)handleCommand:(id)arg1;	// IMP=0x00000001000b0698
- (void)_convertEmbeddedRequestIds:(id)arg1 originalCommand:(id)arg2 session:(id)arg3;	// IMP=0x00000001000b0588
- (_Bool)_allowWhitelistedCommands:(id)arg1;	// IMP=0x00000001000b04b8
- (_Bool)_filterUnsupportedCommands:(id)arg1 inGroup:(id)arg2 onSession:(id)arg3;	// IMP=0x00000001000b03c4
- (void)assistantSessionConnectionDidClose:(id)arg1;	// IMP=0x00000001000b0380
- (void)assistantSessionRetryingRequest:(id)arg1;	// IMP=0x00000001000b02dc
- (void)assistantSessionSiriServerLoggingSettingDidChange;	// IMP=0x00000001000b02d0
- (void)assistantSession:(id)arg1 beginSessionRetryPreferringWWAN:(_Bool)arg2;	// IMP=0x00000001000b01d4
- (void)assistantSession:(id)arg1 willRetryOnError:(id)arg2;	// IMP=0x00000001000b00e8
- (void)assistantSession:(id)arg1 didLoadAssistantSyncRequested:(_Bool)arg2;	// IMP=0x00000001000b009c
- (void)assistantSessionDidDestroyAssistant:(id)arg1;	// IMP=0x00000001000b0060
- (void)assistantSessionDidCreateAssistant:(id)arg1;	// IMP=0x00000001000aff94
- (void)assistantSession:(id)arg1 didChangeRequestIdFrom:(id)arg2 toId:(id)arg3;	// IMP=0x00000001000afd00
- (id)assistantSessionCommandsToRestoreStateOnNewConnection:(id)arg1;	// IMP=0x00000001000afcb0
- (_Bool)assistantSessionShouldAttemptRetry:(id)arg1;	// IMP=0x00000001000afbdc
- (void)assistantSessionConnectionDidReset:(id)arg1;	// IMP=0x00000001000afa5c
- (_Bool)assistantSessionShouldRestartConnectionOnWiFi:(id)arg1;	// IMP=0x00000001000afa3c
- (_Bool)assistantSessionShouldLogVisibleRequestFailure:(id)arg1 forError:(id)arg2;	// IMP=0x00000001000af90c
- (void)assistantSession:(id)arg1 receivedError:(id)arg2 isRetryableError:(_Bool)arg3;	// IMP=0x00000001000af578
- (void)assistantSession:(id)arg1 cannotHandleRequest:(id)arg2 error:(id)arg3;	// IMP=0x00000001000af1dc
- (void)assistantSession:(id)arg1 receivedCommand:(id)arg2;	// IMP=0x00000001000aec88
- (void)assistantSession:(id)arg1 didOpenConnectionWithPolicyId:(id)arg2 routeId:(id)arg3 connectionDelay:(double)arg4;	// IMP=0x00000001000aea0c
- (void)assistantSessionWillStartConnection:(id)arg1;	// IMP=0x00000001000ae940
- (_Bool)assistantSessionShouldPrewarmConnetion:(id)arg1;	// IMP=0x00000001000ae900
- (void)sendRemoteGizmoDeviceToServer:(id)arg1;	// IMP=0x00000001000ae7ac
- (void)_resetWinningStateAndPurgeRequestMaps;	// IMP=0x00000001000ae778
- (void)resetWinningState;	// IMP=0x00000001000ae768
- (_Bool)hasActiveSessionForSendingMetrics;	// IMP=0x00000001000ae568
- (void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x00000001000ae504
- (void)_pickDefaultWinnerWithDroppingSession:(id)arg1;	// IMP=0x00000001000ae0cc
- (void)_cancelOtherSessionRequests:(id)arg1 forRefId:(id)arg2;	// IMP=0x00000001000adcec
- (_Bool)_haveUsefulness:(id)arg1 usefulnessScore:(id *)arg2;	// IMP=0x00000001000adc70
- (_Bool)_isDestructive:(id)arg1;	// IMP=0x00000001000ad898
- (void)_queueResultObject:(id)arg1 forSession:(id)arg2;	// IMP=0x00000001000ad624
- (void)_resetResultObjectsTimer;	// IMP=0x00000001000ad5e8
- (void)_resultObjectsTimerFired:(id)arg1;	// IMP=0x00000001000ad4e0
- (void)_startResultObjectsTimer;	// IMP=0x00000001000ad35c
- (unsigned int)_resultObjectsHoldTime;	// IMP=0x00000001000ad2f4
- (_Bool)_evaluateResultObjects;	// IMP=0x00000001000acbd8
- (int)_preferredSessionType;	// IMP=0x00000001000acbac
- (void)updateForCallIsLikelyDueToRequest:(_Bool)arg1;	// IMP=0x00000001000aca94
- (void)updateForCallState:(_Bool)arg1;	// IMP=0x00000001000aca80
- (void)_unregisterForSleepNotification;	// IMP=0x00000001000aca04
- (void)_registerForSleepNotification;	// IMP=0x00000001000ac90c
- (void)_powerChangedMessageType:(unsigned int)arg1 notificationID:(long long)arg2;	// IMP=0x00000001000ac79c
- (void)_languageCodeDidChange:(id)arg1;	// IMP=0x00000001000ac5b8
- (void)_enabledBitsChanged:(id)arg1;	// IMP=0x00000001000ac404
- (void)_unregisterForPossibleSessionDestroyingNotifications;	// IMP=0x00000001000ac38c
- (void)_registerForPossibleSessionDestroyingNotifications;	// IMP=0x00000001000ac308
- (id)_saConnectionMode;	// IMP=0x00000001000ac29c
- (void)_cloudPreferencesDidSync:(id)arg1;	// IMP=0x00000001000ac19c
- (void)_sharedAssistantdIdentifierDidChange:(id)arg1;	// IMP=0x00000001000ac064
- (void)_updateSharedUserIdentifiers;	// IMP=0x00000001000abd04
- (id)languageCode;	// IMP=0x00000001000abcf8
- (id)_languageCode;	// IMP=0x00000001000abc84
- (void)_purgeRequestMaps;	// IMP=0x00000001000abbb0
- (void)endRetryableRequestForCommand:(id)arg1;	// IMP=0x00000001000ab978
- (void)resetRetryManager;	// IMP=0x00000001000ab868
- (void)startRetry;	// IMP=0x00000001000ab738
- (void)resetSessionsAtNextRequestBoundaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000ab554
- (void)resetSessionsAtNextRequestBoundary;	// IMP=0x00000001000ab544
- (void)resetSessionsAndMakeQuiet:(_Bool)arg1;	// IMP=0x00000001000ab538
- (void)_resetSessionsAndMakeQuiet:(_Bool)arg1;	// IMP=0x00000001000ab1f8
- (void)cancelSessions;	// IMP=0x00000001000ab1ec
- (void)cancelSynchronously;	// IMP=0x00000001000ab1bc
- (void)cancel;	// IMP=0x00000001000ab0e8
- (void)_cancelSynchronously:(_Bool)arg1;	// IMP=0x00000001000aaf78
- (void)beginUpdatingAssistantData;	// IMP=0x00000001000aae44
- (void)preheatSessions;	// IMP=0x00000001000aae34
- (void)preheatAndMakeQuiet:(_Bool)arg1;	// IMP=0x00000001000aacc4
- (void)_startSession:(int)arg1 makeQuiet:(_Bool)arg2;	// IMP=0x00000001000aaa7c
- (void)_startSessions:(_Bool)arg1;	// IMP=0x00000001000aa7b0
- (void)dealloc;	// IMP=0x00000001000aa6bc
- (id)initOnQueue:(id)arg1 withAccount:(id)arg2;	// IMP=0x00000001000aa530

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

