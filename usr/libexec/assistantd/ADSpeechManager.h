//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADAudioSessionCoordinatorDelegate-Protocol.h"
#import "ADRecordingInfoProviding-Protocol.h"
#import "ADSpeechCapturingDelegate-Protocol.h"
#import "ADVolumeServiceProviding-Protocol.h"
#import "ADVolumeTracking-Protocol.h"
#import "AFAudioPowerUpdaterDelegate-Protocol.h"
#import "SiriCoreLocalSpeechRecognizerDelegate-Protocol.h"

@class ADAudioSessionCoordinator, ADSpeechCapturingContext, ADSpeechCompressor, ADSpeechLog, ADSpeechPlaybackSimulator, ADSpeechRecorder, ADVolumeService, AFAudioPowerUpdater, AFClientConfiguration, AFDictationOptions, AFQueue, NSArray, NSError, NSMutableSet, NSString, SiriCoreLocalSpeechRecognizer;
@protocol ADRecordingInfoProviding, ADSpeechCapturing, ADSpeechManagerDelegate, ADVolumeServiceProviding, ADVolumeTracking, AFAudioSessionAssertionAcquisitionService, OS_dispatch_queue, OS_dispatch_source;

@interface ADSpeechManager : NSObject <SiriCoreLocalSpeechRecognizerDelegate, ADSpeechCapturingDelegate, ADVolumeServiceProviding, ADVolumeTracking, ADRecordingInfoProviding, AFAudioPowerUpdaterDelegate, ADAudioSessionCoordinatorDelegate>
{
    SiriCoreLocalSpeechRecognizer *_interactiveLocalSpeechRecognizer;	// 8 = 0x8
    NSString *_localSpeechRecognizerTask;	// 16 = 0x10
    NSObject<OS_dispatch_source> *_profileUpdateDelayTimer;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_profileUpdateCoalescingTimer;	// 32 = 0x20
    _Bool _profileUpdateIsActive;	// 40 = 0x28
    AFQueue *_profileUpdateLanguageQueue;	// 48 = 0x30
    NSMutableSet *_profileUpdateLanguageSet;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_queue;	// 64 = 0x40
    int _speechState;	// 72 = 0x48
    _Bool _shouldTalkToDelegate;	// 76 = 0x4c
    long long _capturingMode;	// 80 = 0x50
    AFClientConfiguration *_clientConfiguration;	// 88 = 0x58
    ADSpeechCapturingContext *_capturingContext;	// 96 = 0x60
    NSError *_recordingError;	// 104 = 0x68
    id <ADSpeechManagerDelegate> _delegate;	// 112 = 0x70
    CDUnknownBlockType _recordStartedCompletion;	// 120 = 0x78
    CDUnknownBlockType _recordStoppedCompletion;	// 128 = 0x80
    _Bool _releasesAudioSessionWhenRecordingStopped;	// 136 = 0x88
    long long _prepareAudioSystemTransactionCount;	// 144 = 0x90
    _Bool _releasesAudioSessionWhenPrepareAudioSystemDone;	// 152 = 0x98
    ADSpeechLog *_speechLog;	// 160 = 0xa0
    id <ADSpeechCapturing> _currentCapturing;	// 168 = 0xa8
    ADSpeechRecorder *_speechRecorder;	// 176 = 0xb0
    ADSpeechPlaybackSimulator *_playbackSimulator;	// 184 = 0xb8
    ADSpeechCompressor *_speechCompressor;	// 192 = 0xc0
    ADVolumeService *_volumeService;	// 200 = 0xc8
    id _context;	// 208 = 0xd0
    _Bool _isDriving;	// 216 = 0xd8
    _Bool _isAudioSessionActive;	// 217 = 0xd9
    _Bool _hasPreparedAudioSystemForPlayback;	// 218 = 0xda
    NSString *_recordRoute;	// 224 = 0xe0
    NSString *_deviceIdentifier;	// 232 = 0xe8
    _Bool _hasFetchedSmartSiriVolume;	// 240 = 0xf0
    _Bool _hasUpdatedSiriOutputVolume;	// 241 = 0xf1
    unsigned long long _dirtySiriOutputVolumeHostTime;	// 248 = 0xf8
    _Bool _hasReceivedLastAudioBuffer;	// 256 = 0x100
    NSString *_initialDictationLanguage;	// 264 = 0x108
    NSString *_primaryDictationLanguage;	// 272 = 0x110
    NSArray *_dictationLanguages;	// 280 = 0x118
    AFDictationOptions *_dictationOptions;	// 288 = 0x120
    AFAudioPowerUpdater *_inputAudioPowerUpdater;	// 296 = 0x128
    AFAudioPowerUpdater *_outputAudioPowerUpdater;	// 304 = 0x130
    ADAudioSessionCoordinator *_audioSessionCoordinator;	// 312 = 0x138
}

+ (void)_detectOnDeviceDictationOrchestrationMismatchForLanguage:(id)arg1 initialLanguage:(id)arg2 eligibleForOnDeviceDictation:(_Bool)arg3 modelType:(id)arg4 onDeviceRequest:(_Bool)arg5 context:(id)arg6;	// IMP=0x000000010027ceac
+ (id)sharedManager;	// IMP=0x0000000100276c9c
+ (id)_speechCodecError;	// IMP=0x0000000100276c74
+ (id)_badStateError;	// IMP=0x0000000100276c4c
- (void).cxx_destruct;	// IMP=0x000000010028545c
@property(readonly, nonatomic) ADAudioSessionCoordinator *audioSessionCoordinator; // @synthesize audioSessionCoordinator=_audioSessionCoordinator;
@property(readonly, nonatomic) AFAudioPowerUpdater *outputAudioPowerUpdater; // @synthesize outputAudioPowerUpdater=_outputAudioPowerUpdater;
@property(readonly, nonatomic) AFAudioPowerUpdater *inputAudioPowerUpdater; // @synthesize inputAudioPowerUpdater=_inputAudioPowerUpdater;
@property(nonatomic) _Bool isDriving; // @synthesize isDriving=_isDriving;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(copy, nonatomic) AFDictationOptions *dictationOptions; // @synthesize dictationOptions=_dictationOptions;
@property(copy, nonatomic) NSArray *dictationLanguages; // @synthesize dictationLanguages=_dictationLanguages;
@property(copy, nonatomic) NSString *primaryDictationLanguage; // @synthesize primaryDictationLanguage=_primaryDictationLanguage;
@property(copy, nonatomic) NSString *initialDictationLanguage; // @synthesize initialDictationLanguage=_initialDictationLanguage;
@property(readonly, nonatomic) id <AFAudioSessionAssertionAcquisitionService> audioSessionAssertionAcquisitionService;
- (void)_updateSiriOutputVolume:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100285148
- (void)_fetchSmartSiriVolume:(_Bool)arg1;	// IMP=0x0000000100284fc0
- (id)_volumeService;	// IMP=0x0000000100284e54
- (_Bool)_supportsVolumeService;	// IMP=0x0000000100284e20
- (void)setEARLanguageDetectorSpeechRequestId:(id)arg1;	// IMP=0x0000000100284d30
- (void)_addRecordStoppedCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100284c24
- (void)setEndpointerDelayedTrigger:(_Bool)arg1;	// IMP=0x0000000100284b7c
- (void)setEndpointerThreshold:(double)arg1;	// IMP=0x0000000100284ad4
- (void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x0000000100284a04
@property(readonly, nonatomic) id <ADRecordingInfoProviding> recordingInfoProvider;
@property(readonly, nonatomic) id <ADVolumeServiceProviding> volumeServiceProvider;
@property(readonly, nonatomic) id <ADVolumeTracking> volumeTracker;
- (void)_dispatchUpdateSpeechProfileForNextLanguage;	// IMP=0x0000000100284520
- (void)_addLanguageUpdateToQueue:(id)arg1;	// IMP=0x00000001002844ac
- (void)_updateSpeechProfileForLanguages:(id)arg1;	// IMP=0x0000000100284310
- (void)_requestSpeechProfileUpdateForLanguages:(id)arg1;	// IMP=0x0000000100283ff0
- (void)updateSpeechProfilesForReasons:(id)arg1;	// IMP=0x000000010028372c
- (void)sendSpeechCorrectionInfo:(id)arg1 interactionIdentifier:(id)arg2;	// IMP=0x000000010028361c
- (void)cancelSpeechProfileUpdate;	// IMP=0x0000000100283588
- (void)getLastStartpointTimestampAndCurrentTime:(CDUnknownBlockType)arg1;	// IMP=0x00000001002834b8
- (void)stopFingerprintingForSuccess:(_Bool)arg1;	// IMP=0x00000001002833f4
- (void)updateSpeechOptions:(id)arg1;	// IMP=0x0000000100283310
- (void)playRecordingStartAlert;	// IMP=0x0000000100283274
- (void)enforcePreviousEndpointHint;	// IMP=0x00000001002831d8
- (void)updateEndpointHintForDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001002830f4
- (void)updateOptionsAfterRecognitionForElapsedTime:(double)arg1 isFinal:(_Bool)arg2;	// IMP=0x0000000100283074
- (void)updateServerEndpointFeatures:(id)arg1;	// IMP=0x0000000100282fa4
- (void)suspendAutomaticEndpointingInRange:(struct AFTimeRange)arg1;	// IMP=0x0000000100282efc
- (void)setFingerprintWasRecognized;	// IMP=0x0000000100282e90
- (void)suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:(CDUnknownBlockType)arg1;	// IMP=0x0000000100282d2c
- (_Bool)_endSessionIfIdle;	// IMP=0x0000000100282c04
- (void)_cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001002825b0
- (void)endSession:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100282394
- (void)endSession;	// IMP=0x0000000100281d60
- (void)setSuppressAudioInterruptionEndedNotifications:(_Bool)arg1;	// IMP=0x0000000100281ce8
- (void)_stopSpeechCaptureWithOptions:(id)arg1;	// IMP=0x000000010028190c
- (void)stopSpeechCaptureIfFingerprintingOnlyWithOptions:(id)arg1;	// IMP=0x0000000100281798
- (void)stopSpeechCaptureWithOptions:(id)arg1;	// IMP=0x0000000100281610
- (void)cancelSpeechCaptureSuppressingAlert:(_Bool)arg1;	// IMP=0x0000000100281168
- (void)startSpeechCaptureWithURL:(id)arg1 isNarrowBand:(_Bool)arg2 isDictation:(_Bool)arg3 sessionUUID:(id)arg4;	// IMP=0x0000000100280d24
- (void)addRecordedDictationAudioSampleData:(id)arg1;	// IMP=0x0000000100280c54
- (void)startRecordedDictationCaptureWithSessionUUID:(id)arg1 narrowband:(_Bool)arg2 secureOfflineOnly:(_Bool)arg3;	// IMP=0x0000000100280858
- (void)_startCaptureForMode:(long long)arg1 options:(id)arg2 context:(id)arg3;	// IMP=0x000000010027fc48
- (id)_startFixedPriorityCaptureForMode:(long long)arg1 options:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x000000010027fa34
- (void)startAcousticIDCaptureWithOptions:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x000000010027f9d4
- (id)startSpeechCaptureForDictationWithOptions:(id)arg1 sessionUUID:(id)arg2 secureOfflineOnly:(_Bool)arg3;	// IMP=0x000000010027f82c
- (id)startSpeechCaptureForRequestWithOptions:(id)arg1 sessionUUID:(id)arg2 language:(id)arg3;	// IMP=0x000000010027f6a4
- (_Bool)isStopped;	// IMP=0x000000010027f5f8
- (_Bool)isCapturing;	// IMP=0x000000010027f548
- (void)setClientConfiguration:(id)arg1;	// IMP=0x000000010027f460
- (void)setDelegate:(id)arg1;	// IMP=0x000000010027f3d0
- (void)_prepareAudioSystemWithOptions:(id)arg1 setAudioSessionActiveOptions:(unsigned long long)arg2 setAudioSessionActiveReason:(long long)arg3 audioSessionAssertion:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000010027dbf8
- (void)prepareAudioSystemWithOptions:(id)arg1 setAudioSessionActiveOptions:(unsigned long long)arg2 setAudioSessionActiveReason:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010027d8e0
- (void)preheatWithOptions:(id)arg1;	// IMP=0x000000010027d634
- (void)eagerlyInitializeAudioRecording;	// IMP=0x000000010027d5c8
- (void)localSpeechRecognizer:(id)arg1 didCompletionRecognitionWithStatistics:(id)arg2 error:(id)arg3;	// IMP=0x000000010027cb8c
- (void)localSpeechRecognizer:(id)arg1 didRecognizePackage:(id)arg2;	// IMP=0x000000010027c954
- (void)localSpeechRecognizer:(id)arg1 didRecognizeRawEagerRecognitionCandidate:(id)arg2;	// IMP=0x000000010027c810
- (void)localSpeechRecognizer:(id)arg1 didProcessAudioDuration:(double)arg2;	// IMP=0x000000010027c754
- (void)localSpeechRecognizer:(id)arg1 didRecognizeTokens:(id)arg2;	// IMP=0x000000010027c51c
- (void)audioPowerUpdaterDidUpdate:(id)arg1 averagePower:(float)arg2 peakPower:(float)arg3;	// IMP=0x000000010027c500
- (id)_recordingInfo;	// IMP=0x000000010027c4ac
- (id)getRecordingInfo;	// IMP=0x000000010027c398
- (void)getRecordingInfoUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010027c2bc
- (void)getVolumeServiceUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010027c1e0
- (void)setDirtySiriOutputVolumeHostTime:(unsigned long long)arg1;	// IMP=0x000000010027c0b0
- (void)audioSessionCoordinator:(id)arg1 releaseAudioSessionWithContext:(id)arg2;	// IMP=0x000000010027bdb4
- (void)audioSessionCoordinator:(id)arg1 prepareAudioSessionWithContext:(id)arg2;	// IMP=0x000000010027ba0c
- (void)speechCapturingDidProvideConfidenceScores:(id)arg1 classification:(unsigned long long)arg2 classifiedUser:(id)arg3 unknownUserScore:(long long)arg4 duration:(long long)arg5 version:(long long)arg6 thresholdingType:(id)arg7 assetVersion:(id)arg8;	// IMP=0x000000010027b920
- (void)speechCapturing:(id)arg1 languageDetectorDidFail:(id)arg2;	// IMP=0x000000010027b8c0
- (void)speechCapturing:(id)arg1 didDetectLanguage:(id)arg2 confidenceScores:(id)arg3 isConfident:(_Bool)arg4;	// IMP=0x000000010027b868
- (void)speechCapturing:(id)arg1 didLoseAudioSessionOwnerOrMediaServices:(id)arg2;	// IMP=0x000000010027b794
- (void)speechCapturing:(id)arg1 didInterruptAudioSession:(id)arg2;	// IMP=0x000000010027b6c0
- (void)speechCapturing:(id)arg1 didSetAudioSessionActive:(_Bool)arg2;	// IMP=0x000000010027b5c4
- (void)speechCapturing:(id)arg1 willSetAudioSessionActive:(_Bool)arg2;	// IMP=0x000000010027b4d4
- (void)speechCapturingDidRequestUpdateSiriOutputVolume:(id)arg1;	// IMP=0x000000010027b3e8
- (void)speechCapturingDidRequestShutdownUI:(id)arg1;	// IMP=0x000000010027b330
- (void)speechCapturingDidRequestQuickStop:(id)arg1;	// IMP=0x000000010027b278
- (void)speechCapturing:(id)arg1 performTwoShotPromptWithType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010027b264
- (void)speechCapturing:(id)arg1 didDetectEndpointAtTime:(double)arg2;	// IMP=0x000000010027b258
- (void)speechCapturing:(id)arg1 didDetectStartpointAtTime:(double)arg2;	// IMP=0x000000010027b24c
- (void)speechCapturing:(id)arg1 didFinishWritingAudioFile:(id)arg2 error:(id)arg3;	// IMP=0x000000010027b1fc
- (void)speechCapturingDidDelayEndpointForMusic:(id)arg1;	// IMP=0x000000010027b1f0
- (void)speechCapturingDidDetectMusic:(id)arg1;	// IMP=0x000000010027b1e4
- (void)speechCapturing:(id)arg1 didReceiveFingerprint:(id)arg2 duration:(double)arg3;	// IMP=0x000000010027b1d4
- (void)speechCapturingDidRecordPCMAudioData:(id)arg1;	// IMP=0x000000010027b164
- (void)speechCapturingDidRecordSpeechPackets:(id)arg1 atTimestamp:(double)arg2 totalPacketCount:(long long)arg3;	// IMP=0x000000010027b000
- (void)speechCapturingDidStopRecordingWithError:(id)arg1 endpointMode:(long long)arg2 totalPacketCount:(long long)arg3 endpointerMetrics:(id)arg4;	// IMP=0x000000010027aee0
- (void)speechCapturingWillStopRecording;	// IMP=0x000000010027aed0
- (void)speechCapturingDidReceiveLastAudioBufferWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x000000010027ae0c
- (void)speechCapturingDidUpdateRecordingInfo:(id)arg1;	// IMP=0x000000010027ad64
- (void)speechCapturingDidStartRecordingSuccessfully:(_Bool)arg1 error:(id)arg2 withInfo:(id)arg3;	// IMP=0x0000000100279d0c
- (void)_updateCapturingStateWithOptions:(id)arg1;	// IMP=0x0000000100279c04
- (void)_recordingStoppedWithError:(id)arg1 totalPacketCount:(long long)arg2 endpointMode:(long long)arg3 endpointerMetrics:(id)arg4;	// IMP=0x0000000100279908
- (void)_lastAudioBufferReceivedWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x00000001002797b4
- (void)_cancelRecordingWithError:(id)arg1 suppressAlert:(_Bool)arg2;	// IMP=0x000000010027962c
- (void)_tellDelegateDidDetectLanguage:(id)arg1 confidenceScores:(id)arg2 isConfident:(_Bool)arg3;	// IMP=0x00000001002795a0
- (void)_tellDelegateDidSetAudioSessionActive:(_Bool)arg1;	// IMP=0x0000000100279554
- (void)_tellDelegateWillSetAudioSessionActive:(_Bool)arg1;	// IMP=0x0000000100279508
- (void)_tellDelegateShutdownUIWasRequested;	// IMP=0x00000001002794c8
- (void)_tellDelegateQuickStopWasRequested;	// IMP=0x0000000100279488
- (void)_tellDelegateToPerformTwoShotPromptWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010027941c
- (void)_tellDelegateSpeechEndpointWasDetectedAtTime:(double)arg1;	// IMP=0x00000001002793cc
- (void)_tellDelegateSpeechStartpointWasDetectedAtTime:(double)arg1;	// IMP=0x000000010027937c
- (void)_tellDelegateAudioFileDidFinish:(id)arg1 error:(id)arg2;	// IMP=0x00000001002792fc
- (void)_tellDelegateAboutInputAveragePower:(float)arg1 peak:(float)arg2;	// IMP=0x0000000100279268
- (void)_tellDelegateEndpointWasDelayedForMusic;	// IMP=0x00000001002791f0
- (void)_tellDelegateMusicWasDetected;	// IMP=0x0000000100279178
- (void)_tellDelegateAboutFingerprint:(id)arg1 duration:(double)arg2;	// IMP=0x00000001002790d4
- (void)_tellDelegateAboutSpeechPackets:(id)arg1 atTimestamp:(double)arg2 count:(long long)arg3;	// IMP=0x0000000100279024
- (void)_tellDelegateUpdateAudioInfo:(id)arg1;	// IMP=0x0000000100278f8c
- (void)_tellDelegateSpeechStartedWithRecordingInfo:(id)arg1;	// IMP=0x0000000100278ef4
- (void)_tellDelegateSpeechWillBeginWithTimestamp:(double)arg1 isFromFile:(_Bool)arg2;	// IMP=0x0000000100278e24
- (void)_tellDelegateSpeechRecognitionUpdateWillBegin;	// IMP=0x0000000100278da8
- (void)_tellDelegateSpeechShouldPreheatWithRecordingInfo:(id)arg1;	// IMP=0x0000000100278d10
- (void)_tellDelegateSpeechFinished;	// IMP=0x0000000100278c78
- (void)_tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x0000000100278bc8
- (void)_tellDelegateSpeechFailedWithError:(id)arg1;	// IMP=0x0000000100278b20
- (void)_tellDelegateSpeechCanceled;	// IMP=0x0000000100278a94
- (void)_cleanUpDelegateInfo;	// IMP=0x00000001002789c4
- (void)resetLocalRecognizer;	// IMP=0x00000001002788f8
- (void)cancelLocalRecognitionIfActive;	// IMP=0x0000000100278790
- (_Bool)isLocallyRecognizingInSiriMiniMode;	// IMP=0x00000001002786b8
- (_Bool)isLocallyRecognizingInDictationMode;	// IMP=0x00000001002785ec
- (_Bool)isLocallyRecognizing;	// IMP=0x0000000100278540
- (void)disableDESWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100278470
- (void)getOfflineDictationStatusIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010027838c
- (id)_interactiveLocalSpeechRecognizer;	// IMP=0x0000000100278284
- (void)_fetchAssetsForLanaugeOrEnablementNotification:(id)arg1;	// IMP=0x0000000100278068
- (void)dictationSessionDidComplete;	// IMP=0x0000000100277c54
- (_Bool)_releaseSession;	// IMP=0x000000010027793c
- (void)_updateRecordRoute:(id)arg1 andDeviceIdentifier:(id)arg2;	// IMP=0x0000000100277754
- (void)_updateSpeechState:(int)arg1;	// IMP=0x000000010027752c
- (id)_currentSpeechCaptureSource;	// IMP=0x0000000100277440
- (id)_speechCompressor;	// IMP=0x0000000100277334
- (void)getSpeechRecorderVTSatScore:(CDUnknownBlockType)arg1;	// IMP=0x0000000100277240
- (id)_speechRecorder;	// IMP=0x0000000100277120
- (void)dealloc;	// IMP=0x000000010027707c
- (id)init;	// IMP=0x0000000100276d08

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

