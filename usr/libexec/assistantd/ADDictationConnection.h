//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADCommandCenterSpeechDelegate-Protocol.h"
#import "AFDictationService-Protocol.h"
#import "NSXPCListenerDelegate-Protocol.h"
#import "SiriCoreLocalSpeechRecognizerDelegate-Protocol.h"

@class ADDictationSessionTracker, AFDictationOptions, NSMutableArray, NSString, NSXPCConnection, NSXPCListener, SiriCoreLocalSpeechRecognizer;
@protocol AFDictationServiceDelegate, OS_dispatch_queue;

@interface ADDictationConnection : NSObject <SiriCoreLocalSpeechRecognizerDelegate, NSXPCListenerDelegate, ADCommandCenterSpeechDelegate, AFDictationService>
{
    SiriCoreLocalSpeechRecognizer *_localSpeechRecognizer;	// 8 = 0x8
    _Bool _usingLocalSpeechRecognizer;	// 16 = 0x10
    id <AFDictationServiceDelegate> _serviceDelegate;	// 24 = 0x18
    AFDictationOptions *_dictationOptions;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_queue;	// 40 = 0x28
    _Bool _waitingForSpeechRecognition;	// 48 = 0x30
    _Bool _waitingForStructuredResultsOrVoiceSearch;	// 49 = 0x31
    _Bool _waitingForAudioFile;	// 50 = 0x32
    ADDictationSessionTracker *_sessionTracker;	// 56 = 0x38
    NSXPCListener *_pendingSpeechRequestListener;	// 64 = 0x40
    NSXPCConnection *_pendingSpeechRequestConnection;	// 72 = 0x48
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 80 = 0x50
    _Bool _disconnected;	// 88 = 0x58
    CDUnknownBlockType _requestCompletion;	// 96 = 0x60
    _Bool _haveSeenSpeechRecordingDidRecognizePhrases;	// 104 = 0x68
    NSMutableArray *_audioSessionAssertions;	// 112 = 0x70
    _Bool adSpeechSessionEnded;	// 120 = 0x78
}

- (void).cxx_destruct;	// IMP=0x0000000100276b14
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x00000001002769ec
- (oneway void)continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x0000000100276978
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0000000100276860
- (void)localSpeechRecognizer:(id)arg1 didCompletionRecognitionWithStatistics:(id)arg2 error:(id)arg3;	// IMP=0x00000001002766fc
- (void)localSpeechRecognizer:(id)arg1 didRecognizePackage:(id)arg2;	// IMP=0x0000000100276664
- (void)localSpeechRecognizer:(id)arg1 didRecognizePhrases:(id)arg2 utterances:(id)arg3;	// IMP=0x0000000100276574
- (void)localSpeechRecognizer:(id)arg1 didRecognizeRawEagerRecognitionCandidate:(id)arg2;	// IMP=0x00000001002764f8
- (void)localSpeechRecognizer:(id)arg1 didProcessAudioDuration:(double)arg2;	// IMP=0x0000000100276480
- (void)localSpeechRecognizer:(id)arg1 didRecognizeTokens:(id)arg2;	// IMP=0x00000001002763e0
- (id)_localSpeechRecognizerSupportingBackground:(_Bool)arg1;	// IMP=0x0000000100276248
- (id)_updateDictationOptionsForOnDeviceDictation:(id)arg1 language:(id)arg2;	// IMP=0x0000000100275d00
- (oneway void)reportIssueForError:(id)arg1 eventType:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x0000000100275acc
- (oneway void)reportIssueForError:(id)arg1 eventType:(long long)arg2 context:(id)arg3;	// IMP=0x00000001002758bc
- (oneway void)requestOfflineDictationSupportForLanguage:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001002757c8
- (oneway void)getInstalledOfflineLanguagesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001002755d8
- (oneway void)_sendEngagementFeedback:(long long)arg1 voiceQueryIdentifier:(id)arg2;	// IMP=0x000000010027555c
- (oneway void)_startDictationWithURL:(id)arg1 isNarrowBand:(_Bool)arg2 language:(id)arg3 options:(id)arg4;	// IMP=0x00000001002752dc
- (oneway void)addRecordedSpeechSampleData:(id)arg1;	// IMP=0x0000000100275244
- (oneway void)startRecordedAudioDictationWithOptions:(id)arg1 language:(id)arg2 narrowband:(_Bool)arg3 forceSampling:(_Bool)arg4;	// IMP=0x0000000100274a48
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x0000000100274a00
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x0000000100274990
- (oneway void)endSession;	// IMP=0x0000000100274878
- (oneway void)preheatWithRecordDeviceIdentifier:(id)arg1;	// IMP=0x0000000100274770
- (oneway void)preheatTestWithLanguage:(id)arg1 options:(id)arg2;	// IMP=0x00000001002745d4
- (oneway void)preheat;	// IMP=0x00000001002744d0
- (oneway void)sendUserSelectedAlternativeDictationLanguageCode:(id)arg1;	// IMP=0x0000000100274368
- (oneway void)sendSpeechCorrectionInfo:(id)arg1 interactionIdentifier:(id)arg2;	// IMP=0x00000001002742d4
- (oneway void)sendSpeechCorrectionInfo:(id)arg1 forCorrectionContext:(id)arg2;	// IMP=0x000000010027423c
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x0000000100274114
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x0000000100273e20
- (oneway void)cancelSpeech;	// IMP=0x0000000100273d64
- (oneway void)startDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3;	// IMP=0x0000000100273b34
- (oneway void)startRecordingForPendingDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00000001002736cc
- (void)_invokeRequestCompletion;	// IMP=0x0000000100273664
- (oneway void)startRequestActivityWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010027356c
- (void)_startDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 xpcconnection:(id)arg4;	// IMP=0x0000000100273480
- (id)_dictationWillStartWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 xpcconnection:(id)arg4;	// IMP=0x0000000100273140
- (void)adSpeechDidBeginLocalRecognitionWithModelInfo:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00000001002730a8
- (void)adSpeechMultilingualSpeechRecognized:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0000000100272fe0
- (void)adSpeechLanguageDetectorFailedWithError:(id)arg1;	// IMP=0x0000000100272f48
- (void)adSpeechRecordingDidDetectLanguage:(id)arg1 confidenceScores:(id)arg2 isConfident:(_Bool)arg3;	// IMP=0x0000000100272e54
- (_Bool)adWaitingForAudioFile;	// IMP=0x0000000100272db0
- (void)adAudioFileFinishedWriting:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000100272bf4
- (void)adPronunciationRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x0000000100272898
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00000001002726d8
- (void)adSpeechRecognizedStructuredResult:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x000000010027239c
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 utterances:(id)arg2 sessionUUID:(id)arg3 refId:(id)arg4;	// IMP=0x0000000100271f94
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0000000100271f4c
- (void)adSpeechDidFindVoiceSearchFinalResult:(id)arg1;	// IMP=0x0000000100271dbc
- (void)adSpeechDidFindVoiceSearchPartialResult:(id)arg1;	// IMP=0x0000000100271c9c
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x0000000100271b18
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x000000010027179c
- (void)adSpeechRecordingDidFail:(id)arg1 context:(id)arg2;	// IMP=0x000000010027151c
- (void)adSpeechRecordingDidCancelWithContext:(id)arg1;	// IMP=0x000000010027126c
- (void)adSpeechRecordingDidEndWithContext:(id)arg1;	// IMP=0x000000010027118c
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 context:(id)arg6;	// IMP=0x0000000100271188
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionRequestUUID:(id)arg4 dictationOptions:(id)arg5 context:(id)arg6;	// IMP=0x000000010027101c
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 context:(id)arg2;	// IMP=0x0000000100270fdc
- (void)_removeAllAudioSessionAssertionsForReason:(id)arg1;	// IMP=0x0000000100270c70
- (void)_addAudioSessionAssertion:(id)arg1;	// IMP=0x0000000100270c0c
- (void)_speechRecordingDidFinish;	// IMP=0x0000000100270b20
- (void)_updateDictationOptions:(id)arg1;	// IMP=0x0000000100270ae8
- (void)connectionDisconnected;	// IMP=0x0000000100270a0c
- (void)dealloc;	// IMP=0x000000010027098c
- (id)initWithServiceDelegate:(id)arg1;	// IMP=0x0000000100270888

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

